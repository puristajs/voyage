{
  "resolvedId": "/Users/sebastianwessel/projekte/voyage/node_modules/element-plus/es/components/select/src/option-group.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent, ref, getCurrentInstance, provide, reactive, toRefs, computed, onMounted, withDirectives, openBlock, createElementBlock, normalizeClass, createElementVNode, toDisplayString, renderSlot, vShow } from 'vue';\nimport { isArray } from '@vue/shared';\nimport { useMutationObserver } from '@vueuse/core';\nimport '../../../hooks/index.mjs';\nimport { selectGroupKey } from './token.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"ElOptionGroup\",\n  componentName: \"ElOptionGroup\",\n  props: {\n    label: String,\n    disabled: Boolean\n  },\n  setup(props) {\n    const ns = useNamespace(\"select\");\n    const groupRef = ref(null);\n    const instance = getCurrentInstance();\n    const children = ref([]);\n    provide(selectGroupKey, reactive({\n      ...toRefs(props)\n    }));\n    const visible = computed(() => children.value.some((option) => option.visible === true));\n    const flattedChildren = (node) => {\n      const children2 = [];\n      if (isArray(node.children)) {\n        node.children.forEach((child) => {\n          var _a, _b;\n          if (child.type && child.type.name === \"ElOption\" && child.component && child.component.proxy) {\n            children2.push(child.component.proxy);\n          } else if ((_a = child.children) == null ? void 0 : _a.length) {\n            children2.push(...flattedChildren(child));\n          } else if ((_b = child.component) == null ? void 0 : _b.subTree) {\n            children2.push(...flattedChildren(child.component.subTree));\n          }\n        });\n      }\n      return children2;\n    };\n    const updateChildren = () => {\n      children.value = flattedChildren(instance.subTree);\n    };\n    onMounted(() => {\n      updateChildren();\n    });\n    useMutationObserver(groupRef, updateChildren, {\n      attributes: true,\n      subtree: true,\n      childList: true\n    });\n    return {\n      groupRef,\n      visible,\n      ns\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return withDirectives((openBlock(), createElementBlock(\"ul\", {\n    ref: \"groupRef\",\n    class: normalizeClass(_ctx.ns.be(\"group\", \"wrap\"))\n  }, [\n    createElementVNode(\"li\", {\n      class: normalizeClass(_ctx.ns.be(\"group\", \"title\"))\n    }, toDisplayString(_ctx.label), 3),\n    createElementVNode(\"li\", null, [\n      createElementVNode(\"ul\", {\n        class: normalizeClass(_ctx.ns.b(\"group\"))\n      }, [\n        renderSlot(_ctx.$slots, \"default\")\n      ], 2)\n    ])\n  ], 2)), [\n    [vShow, _ctx.visible]\n  ]);\n}\nvar OptionGroup = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"option-group.vue\"]]);\n\nexport { OptionGroup as default };\n//# sourceMappingURL=option-group.mjs.map\n",
      "start": 1709718916134,
      "end": 1709718916162,
      "sourcemaps": null
    },
    {
      "name": "unplugin-formkit",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709718916162,
      "end": 1709718916162,
      "order": "normal"
    }
  ]
}
