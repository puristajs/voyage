{
  "resolvedId": "/Users/sebastianwessel/projekte/voyage/node_modules/@formkit/i18n/dist/index.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createMessageName } from '@formkit/validation';\nimport { has } from '@formkit/utils';\n\n// packages/i18n/src/locales/ar.ts\n\n// packages/i18n/src/formatters.ts\nfunction sentence(str) {\n  return str[0].toUpperCase() + str.substr(1);\n}\nfunction list(items, conjunction = \"or\") {\n  return items.reduce((oxford, item, index) => {\n    oxford += item;\n    if (index <= items.length - 2 && items.length > 2) {\n      oxford += \", \";\n    }\n    if (index === items.length - 2) {\n      oxford += `${items.length === 2 ? \" \" : \"\"}${conjunction} `;\n    }\n    return oxford;\n  }, \"\");\n}\nfunction date(date2) {\n  const dateTime = typeof date2 === \"string\" ? new Date(Date.parse(date2)) : date2;\n  if (!(dateTime instanceof Date)) {\n    return \"(unknown)\";\n  }\n  return new Intl.DateTimeFormat(void 0, {\n    dateStyle: \"medium\",\n    timeZone: \"UTC\"\n  }).format(dateTime);\n}\nfunction order(first, second) {\n  return Number(first) >= Number(second) ? [second, first] : [first, second];\n}\n\n// packages/i18n/src/locales/ar.ts\nvar ui = {\n  /**\n   * Shown on buttons for adding new items.\n   */\n  add: \"إضافة\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"إزالة\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"إزالة الكل\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"عذرا، لم يتم تعبئة جميع الحقول بشكل صحيح.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"إرسال\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"لا يوجد ملف مختار\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"تحرك لأعلى\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"انتقل لأسفل\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"يتم الآن التحميل...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"تحميل المزيد\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"التالي\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"السابق\",\n  /**\n   * Shown when transferring items between lists.\n   */\n  addAllValues: \"أضف جميع القيم\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"إضافة قيم محددة\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"قم بإزالة جميع القيم\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"إزالة القيم المحددة\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"اختر التاريخ\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"تاريخ التغيير\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"أغلق\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"افتح\"\n};\nvar validation = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `الرجاء قبول ${name}.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `يجب أن يكون ${sentence(name)} بعد ${date(args[0])}.`;\n    }\n    return `يجب أن يكون ${sentence(name)} في المستقبل.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `يمكن أن يحتوي ${sentence(name)} على أحرف أبجدية فقط.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `يمكن أن يحتوي ${sentence(name)} على أحرف وأرقام فقط.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `يمكن أن تحتوي ${sentence(name)} على أحرف ومسافات فقط.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `يجب أن يحتوي ${sentence(name)} على أحرف أبجدية.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `يجب أن يحتوي ${sentence(name)} على أحرف أو أرقام.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `يجب أن يحتوي ${sentence(name)} على أحرف أو مسافات.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `يجب أن يحتوي ${sentence(name)} على رمز.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `يجب أن يحتوي ${sentence(name)} على أحرف كبيرة.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `يجب أن يحتوي ${sentence(name)} على أحرف صغيرة.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `يجب أن يحتوي ${sentence(name)} على أرقام.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `يجب أن يكون ${sentence(name)} رمزًا.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `يمكن أن يحتوي ${sentence(name)} على أحرف كبيرة فقط.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `يمكن أن يحتوي ${sentence(name)} على أحرف صغيرة فقط.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `يجب أن يكون ${sentence(name)} قبل ${date(args[0])}.`;\n    }\n    return `يجب أن يكون ${sentence(name)} في الماضي.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `تمت تهيئة هذا الحقل بشكل غير صحيح ولا يمكن إرساله.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `يجب أن يكون ${sentence(name)} ما بين ${a} و ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} غير متطابق.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} ليس تاريخًا صالحًا ، يرجى استخدام التنسيق ${args[0]}`;\n    }\n    return \"تمت تهيئة هذا الحقل بشكل غير صحيح ولا يمكن إرساله\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `يجب أن يكون ${sentence(name)} بين ${date(args[0])} و ${date(args[1])}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"الرجاء أدخال بريد إليكتروني صالح.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `لا ينتهي ${sentence(name)} بـ ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} ليست قيمة مسموح بها.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `يجب أن يكون ${sentence(name)} حرفًا واحدًا على الأقل.`;\n    }\n    if (min == 0 && max) {\n      return `يجب أن يكون ${sentence(name)} أقل من أو يساوي ${max} حرفًا.`;\n    }\n    if (min === max) {\n      return `يجب أن يتكون ${sentence(name)} من الأحرف ${max}.`;\n    }\n    if (min && max === Infinity) {\n      return `يجب أن يكون ${sentence(name)} أكبر من أو يساوي ${min} حرفًا.`;\n    }\n    return `يجب أن يكون ${sentence(name)} بين ${min} و ${max} حرفًا.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} ليست قيمة مسموح بها.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `لا يمكن أن يكون أكثر من ${args[0]} ${name}.`;\n    }\n    return `يجب أن يكون ${sentence(name)} أقل من أو يساوي ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"لا يسمح بتنسيقات الملفات.\";\n    }\n    return `يجب أن يكون ${sentence(name)} من النوع: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `لا يمكن أن يكون أقل من ${args[0]} ${name}.`;\n    }\n    return `يجب أن يكون ${sentence(name)} على الأقل ${args[0]}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” ليس ${name} مسموحًا به.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} يجب ان يكون رقماً`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" أو \")} مطلوب.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} مطلوب.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `لا يبدأ ${sentence(name)} بـ ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `يرجى إدخال عنوان URL صالح.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"التاريخ المحدد غير صالح.\"\n};\nvar ar = { ui, validation };\nvar ui2 = {\n  /**\n   * Shown on a button for adding additional items.\n   */\n  add: \"əlavə edin\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"çıxarmaq\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Hamısını silin\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Üzr istəyirik, bütün sahələr düzgün doldurulmayıb.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Təqdim et\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Heç bir fayl seçilməyib\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"yuxarı hərəkət\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Aşağı hərəkət\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Yükləmə...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Daha çox yüklə\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"Növbəti\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"Əvvəlki\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Bütün dəyərləri əlavə edin\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Seçilmiş dəyərləri əlavə edin\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Bütün dəyərləri sil\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Seçilmiş dəyərləri sil\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Tarixi seçin\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Tarixi dəyişdirin\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Bağlayın\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Açıq\"\n};\nvar validation2 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `${name} qəbul edin.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} ${date(args[0])} sonra olmalıdır.`;\n    }\n    return `${sentence(name)} gələcəkdə olmalıdır.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} yalnız əlifba sırası simvollarından ibarət ola bilər.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} yalnız hərf və rəqəmlərdən ibarət ola bilər.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} yalnız hərflərdən və boşluqlardan ibarət ola bilər.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} əlifba sırası simvolları ehtiva etməlidir.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} hərfləri və ya nömrələri ehtiva etməlidir.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} hərfləri və ya boşluqları ehtiva etməlidir.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} simvolu ehtiva etməlidir.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} böyük olmalıdır.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} kiçik olmalıdır.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} nömrələri ehtiva etməlidir.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} simvol olmalıdır.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} yalnız böyük hərfləri ehtiva edə bilər.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} yalnız kiçik hərfləri ehtiva edə bilər.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} ${date(args[0])} əvvəl olmalıdır.`;\n    }\n    return `${sentence(name)} keçmişdə olmalıdır.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Bu sahə səhv konfiqurasiya edilib və onu təqdim etmək mümkün deyil.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} ${a} və ${b} arasında olmalıdır.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} uyğun gəlmir.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} etibarlı tarix deyil, ${args[0]} formatından istifadə edin`;\n    }\n    return \"Bu sahə səhv konfiqurasiya edilib və onu təqdim etmək mümkün deyil\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} ${date(args[0])} və ${date(args[1])} arasında olmalıdır`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Etibarlı e-poçt ünvanı daxil edin.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} ${list(args)} ilə bitmir.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} icazə verilən dəyər deyil.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} ən azı bir simvol olmalıdır.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} ${max} simvoldan kiçik və ya ona bərabər olmalıdır.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} ${max} simvol uzunluğunda olmalıdır.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} ${min} simvoldan böyük və ya ona bərabər olmalıdır.`;\n    }\n    return `${sentence(name)} ${min} və ${max} simvol arasında olmalıdır.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} icazə verilən dəyər deyil.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `${args[0]} ${name}-dən çox ola bilməz.`;\n    }\n    return `${sentence(name)} ${args[0]} dəyərindən kiçik və ya ona bərabər olmalıdır.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Fayl formatlarına icazə verilmir.\";\n    }\n    return `${sentence(name)} aşağıdakı tipdə olmalıdır: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `${args[0]} ${name}-dən az ola bilməz.`;\n    }\n    return `${sentence(name)} ən azı ${args[0]} olmalıdır.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” icazə verilən ${name} deyil.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} rəqəm olmalıdır.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" və ya \")} tələb olunur.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} tələb olunur.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} ${list(args)} ilə başlamır.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Xahiş edirik, düzgün URL daxil edin.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Seçilmiş tarix etibarsızdır.\"\n};\nvar az = { ui: ui2, validation: validation2 };\nvar ui3 = {\n  /**\n   * Shown on a button for adding additional items.\n   */\n  add: \"Добави\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Премахни\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Премахни всички\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Извинете, не всички полета са попълнени правилно.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Изпрати\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Няма избран файл\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Преместване нагоре\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Преместете се надолу\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Зареждане...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Заредете повече\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"Следващ\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"Предишен\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Добавете всички стойности\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Добавяне на избрани стойности\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Премахнете всички стойности\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Премахване на избраните стойности\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Избери дата\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Промяна на датата\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Затвори\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Отворете\"\n};\nvar validation3 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Моля приемете ${name}.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} трябва да е след ${date(args[0])}.`;\n    }\n    return `${sentence(name)} трябва да бъде в бъдещето.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} може да съдържа само букви.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} може да съдържа само букви и цифри.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} може да съдържа само букви и интервали.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} трябва да съдържа азбучни знаци.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} трябва да съдържа букви или цифри.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} трябва да съдържа букви или интервали.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} трябва да съдържа символ.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} трябва да съдържа главни букви.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} трябва да съдържа малки букви.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} трябва да съдържа числа.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} трябва да бъде символ.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} може да съдържа само главни букви.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} може да съдържа само малки букви.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} трябва да е преди ${date(args[0])}.`;\n    }\n    return `${sentence(name)} трябва да бъде в миналото.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Това поле е конфигурирано неправилно и не може да бъде изпратено`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} трябва да бъде между ${a} и ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} не съвпада.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} е невалидна дата. Моля, използвайте формата ${args[0]}`;\n    }\n    return \"Това поле е конфигурирано неправилно и не може да бъде изпратено\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} трябва да бъде между ${date(args[0])} и ${date(\n      args[1]\n    )}.`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Моля, въведете валиден имейл адрес.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} не завършва на ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} е неразрешена стойност.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} трябва да има поне един символ.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} трябва да бъде по-малко или равно на ${max} символа.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} трябва да бъде ${max} символи дълго.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} трябва да бъде по-голямо или равно на ${min} символа.`;\n    }\n    return `${sentence(name)} трябва да бъде между ${min} и ${max} символа.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} е неразрешена стойност.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Не може да има повече от ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} трябва да бъде по-малко или равно на ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Не са разрешени никакви файлови формати.\";\n    }\n    return `${sentence(name)} трябва да бъде от тип: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Не може да има по-малко от ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} трябва да бъде поне ${args[0]}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” е неразрешен ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} трябва да бъде число.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" или \")} изисква се.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} е задължително.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} не започва с ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Моля, въведете валиден URL адрес.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Избраната дата е невалидна.\"\n};\nvar bg = { ui: ui3, validation: validation3 };\nvar ui4 = {\n  /**\n   * Shown on a button for adding additional items.\n   */\n  add: \"Dodaj\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Ukloni\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Ukloni sve\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Nažalost, nisu sva polja ispravno popunjena.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Pošalji\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Nije odabran nijedan fajl\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Pomjeri gore\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Pomjeri dole\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Učitavanje...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Učitaj više\",\n  /**\n   * Show on buttons that navigate state forward\n   */\n  next: \"Sljedeći\",\n  /**\n   * Show on buttons that navigate state backward\n   */\n  prev: \"Prethodni\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Dodajte sve vrijednosti\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Dodajte odabrane vrijednosti\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Uklonite sve vrijednosti\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Uklonite odabrane vrijednosti\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Odaberite datum\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Promjenite datum\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Zatvori\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Otvoreno\"\n};\nvar validation4 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Molimo prihvatite ${name}.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} mora biti poslije ${date(args[0])}.`;\n    }\n    return `${sentence(name)} mora biti u budućnosti.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} može sadržavati samo abecedne karaktere.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} može sadržavati samo slova i brojeve.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} može sadržavati samo slova i razmake.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} mora sadržavati abecedne karaktere.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} mora sadržavati slova ili brojeve.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} mora sadržavati slova ili razmake.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} mora sadržavati simbol.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} mora sadržavati veliko slovo.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} mora sadržavati malo slovo.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} mora sadržavati brojeve.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} mora biti simbol.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} može sadržavati samo velika slova.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} može sadržavati samo mala slova.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} mora biti prije ${date(args[0])}.`;\n    }\n    return `${sentence(name)} mora biti u prošlosti.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Ovo polje je pogrešno konfigurirano i ne može se poslati.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} mora biti između ${a} i ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} ne podudara se.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} nije ispravan datum, molimo koristite format ${args[0]}`;\n    }\n    return \"Ovo polje je pogrešno konfigurirano i ne može se poslati\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} mora biti između ${date(args[0])} i ${date(args[1])}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Molimo Vas da unesete validnu email adresu.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} ne završava sa ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} nije dozvoljena vrijednost.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} mora biti najmanje jedan karakter.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} mora biti manje od ili jednako ${max} karaktera.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} treba imati ${max} karaktera.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} mora biti veći od ili jednak ${min} karaktera.`;\n    }\n    return `${sentence(name)} mora biti između ${min} i ${max} karaktera.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} nije dozvoljena vrijednost.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Ne može imati više od ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} mora biti manji ili jednak ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Nisu dozvoljeni formati datoteka.\";\n    }\n    return `${sentence(name)} mora biti tipa: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Ne može imati manje od ${args[0]} ${name}.`;\n    }\n    return `Mora biti barem ${args[0]} ${name} .`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” nije dozvoljeno ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} mora biti broj.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" ili \")} je obavezno.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} je obavezno.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} ne počinje sa ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Unesite važeći link.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Odabrani datum je nevažeći.\"\n};\nvar bs = { ui: ui4, validation: validation4 };\nvar ui5 = {\n  /**\n   * Shown on a button for adding additional items.\n   */\n  add: \"Afegir\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Eliminar\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Eliminar tot\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Disculpi, no tots els camps estan omplerts correctament.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Enviar\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Cap fitxer triat\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Moure amunt\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Moure avall\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Carregant...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Carregar més\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"Següent\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"Anterior\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Afegir tots els valors\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Afegeix els valors seleccionats\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Eliminar tots els valors\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Elimina els valors seleccionats\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Trieu la data\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Canviar data\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Tancar\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Obert\"\n};\nvar validation5 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://docs.formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Si us plau accepti ${name}.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://docs.formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} ha de ser posterior a ${date(args[0])}.`;\n    }\n    return `${sentence(name)} ha de succeïr al futur.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://docs.formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} només pot contenir caràcters alfabètics.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://docs.formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} només pot contenir lletres i números.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://docs.formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} només pot contenir lletres i espais.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} ha de contenir caràcters alfabètics.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} ha de contenir lletres o números.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} ha de contenir lletres o espais.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} ha de contenir símbol.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} ha de contenir majúscules.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} ha de contenir minúscules.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} ha de contenir números.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} ha de ser un símbol.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} només pot contenir lletres majúscules.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} només pot contenir lletres minúscules.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://docs.formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} ha de ser anterior a ${date(args[0])}.`;\n    }\n    return `${sentence(name)} ha d'estar al passat.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://docs.formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Aquest camp està configurat incorrectament i no pot ésser enviat.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} ha d'estar entre ${a} i ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://docs.formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} no concorda.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://docs.formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} no és una data vàlida, si us plau empri el format ${args[0]}`;\n    }\n    return \"Aquest camp està configurat incorrectament i no pot ésser enviat\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://docs.formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} ha d'estar entre ${date(args[0])} i ${date(args[1])}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://docs.formkit.com/essentials/validation#email}\n   */\n  email: `Si us plau, entri una adreça d'e-mail vàlida.`,\n  /**\n   * Does not end with the specified value\n   * @see {@link https://docs.formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} no acaba amb ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://docs.formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} no és un valor acceptat.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://docs.formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} ha de tenir com a mínim un caràcter.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} ha de ser inferior o igual a ${max} caràcters.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} ha de tenir una longitud de ${max} caràcters.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} ha de ser major que o igual a ${min} caràcters.`;\n    }\n    return `${sentence(name)} ha d'estar entre ${min} i ${max} caràcters.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://docs.formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} no és un valor permès.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://docs.formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `No pot tenir més de ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} ha de ser menys que o igual a ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://docs.formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"No hi ha cap format de fitxer acceptat.\";\n    }\n    return `${sentence(name)} ha de ser del tipus: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://docs.formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `No pot tenir menys de ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} ha de ser com a mínim ${args[0]}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://docs.formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” no s'accepta com a ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://docs.formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} ha de ser un número.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" o \")} es requereix.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://docs.formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} és obligatori.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://docs.formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} no comença amb ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://docs.formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Si us plau inclogui una url vàlida.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"La data seleccionada no és vàlida.\"\n};\nvar ca = { ui: ui5, validation: validation5 };\nvar ui6 = {\n  /**\n   * Shown on buttons for adding new items.\n   */\n  add: \"Přidat\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Odebrat\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Odebrat vše\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Pardon, ale ne všechna pole jsou vyplněna správně.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Odeslat\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Žádný soubor nebyl vybrán\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Pohyb nahoru\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Posunout dolů\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Načítání...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Načíst více\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"Další\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"Předchozí\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Přidat všechny hodnoty\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Přidání vybraných hodnot\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Odstraňte všechny hodnoty\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Odstranění vybraných hodnot\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Zvolte datum\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Změnit datum\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Zavřít\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Otevřeno\"\n};\nvar validation6 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Prosím, zaškrtněte ${name}.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} musí být po ${date(args[0])}.`;\n    }\n    return `${sentence(name)} musí být v budoucnosti.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} může obsahovat pouze písmena.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} může obsahovat pouze písmena a čísla.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} musí obsahovat abecední znaky.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} musí obsahovat písmena nebo číslice.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} musí obsahovat písmena nebo mezery.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} musí obsahovat symbol.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} musí obsahovat velká písmena.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} musí obsahovat malá písmena.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} musí obsahovat čísla.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} musí být symbol.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} může obsahovat pouze velká písmena.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} může obsahovat pouze malá písmena.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} musí být před ${date(args[0])}.`;\n    }\n    return `${sentence(name)} musí být v minulosti.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Toto pole bylo špatně nakonfigurováno a nemůže být odesláno.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} musí být mezi ${a} a ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} nejsou shodná.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} není platné datum, prosím, použijte formát ${args[0]}`;\n    }\n    return \"Toto pole bylo špatně nakonfigurováno a nemůže být odesláno.\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} musí být mezi ${date(args[0])} a ${date(args[1])}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Prosím, zadejte platnou e-mailovou adresu.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} nekončí na ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} není povolená hodnota.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} musí mít nejméně jeden znak.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} může mít maximálně ${max} znaků.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} by mělo být ${max} znaků dlouhé.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} musí obsahovat minimálně ${min} znaků.`;\n    }\n    return `${sentence(name)} musí být dlouhé ${min} až ${max} znaků.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} není povolená hodnota.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Nelze použít více než ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} musí mít menší nebo rovno než ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Nejsou nakonfigurovány povolené typy souborů.\";\n    }\n    return `${sentence(name)} musí být typu: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Nelze mít méně než ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} musí být minimálně ${args[0]}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” není dovolená hodnota pro ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} musí být číslo.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" nebo \")} je vyžadován.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} je povinné.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} nezačíná na ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Zadejte prosím platnou adresu URL.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Vybrané datum je neplatné.\"\n};\nvar cs = { ui: ui6, validation: validation6 };\nvar ui7 = {\n  /**\n   * Shown on buttons for adding new items.\n   */\n  add: \"Tilføj\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Fjern\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Fjern alle\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Alle felter er ikke korrekt udfyldt.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Send\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Ingen filer valgt\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Flyt op\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Flyt ned\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Indlæser...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Indlæs mere\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"Næste\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"Forrige\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Tilføj alle værdier\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Tilføj valgte værdier\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Fjern alle værdier\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Fjern valgte værdier\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Vælg dato\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Skift dato\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Luk\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Åbn\"\n};\nvar validation7 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Accepter venligst ${name}.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} skal være senere end ${date(args[0])}.`;\n    }\n    return `${sentence(name)} skal være i fremtiden.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} kan kun indeholde bogstaver.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} kan kun indeholde bogstaver og tal.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} kan kun indeholde bogstaver og mellemrum.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} skal indeholde alfabetiske tegn.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} skal indeholde bogstaver eller tal.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} skal indeholde bogstaver eller mellemrum.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} skal indeholde symbol.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} skal indeholde store bogstaver.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} skal indeholde små bogstaver.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} skal indeholde tal.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} skal være et symbol.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} kan kun indeholde store bogstaver.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} kan kun indeholde små bogstaver.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} skal være før ${date(args[0])}.`;\n    }\n    return `${sentence(name)} skal være før i dag.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Dette felt er ikke konfigureret korrekt og kan derfor ikke blive sendt.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} skal være mellem ${a} og ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} matcher ikke.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} er ikke gyldig, brug venligst formatet ${args[0]}`;\n    }\n    return \"Dette felt er ikke konfigureret korrekt og kan derfor ikke blive sendt.\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} skal være mellem ${date(args[0])} og ${date(args[1])}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Indtast venligst en gyldig email-adresse.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} slutter ikke med ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} er ikke en gyldig værdi.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} skal være på mindst ét tegn.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} skal være på højst ${max} tegn.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} skal være ${max} tegn lange.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} skal være på mindst ${min} tegn.`;\n    }\n    return `${sentence(name)} skal være på mindst ${min} og højst ${max} tegn.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} er ikke en gyldig værdi.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Kan ikke have flere end ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} skal være mindre eller lig med ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Ingen filformater tilladt.\";\n    }\n    return `${sentence(name)} skal være af filtypen: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Kan ikke have mindre end ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} skal være mindst ${args[0]}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” er ikke en tilladt ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} skal være et tal.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" eller \")} er påkrævet.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} er påkrævet.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} starter ikke med ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Indtast en gyldig URL.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Den valgte dato er ugyldig.\"\n};\nvar da = { ui: ui7, validation: validation7 };\nvar ui8 = {\n  /**\n   * Shown on buttons for adding new items.\n   */\n  add: \"Hinzufügen\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Entfernen\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Alles entfernen\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Entschuldigung, nicht alle Felder wurden korrekt ausgefüllt.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Senden\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Keine Datei ausgewählt\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Gehe nach oben\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Gehen Sie nach unten\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Wird geladen...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Mehr laden\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"Weiter\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"Voriges\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Alle Werte hinzufügen\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Ausgewählte Werte hinzufügen\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Alle Werte entfernen\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Ausgewählte Werte entfernen\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Datum wählen\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Datum ändern\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Schliessen\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Offen\"\n};\nvar validation8 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Bitte ${name} akzeptieren.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} muss nach dem ${date(args[0])} liegen.`;\n    }\n    return `${sentence(name)} muss in der Zukunft liegen.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} darf nur Buchstaben enthalten.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} darf nur Buchstaben und Zahlen enthalten.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} dürfen nur Buchstaben und Leerzeichen enthalten.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} muss alphabetische Zeichen enthalten.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} muss Buchstaben oder Zahlen enthalten.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} muss Buchstaben oder Leerzeichen enthalten.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} muss ein Symbol enthalten.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} muss Großbuchstaben enthalten.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} muss Kleinbuchstaben enthalten.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} muss Zahlen enthalten.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} muss ein Symbol sein.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} kann nur Großbuchstaben enthalten.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} kann nur Kleinbuchstaben enthalten.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} muss vor dem ${date(args[0])} liegen.`;\n    }\n    return `${sentence(name)} muss in der Vergangenheit liegen.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Dieses Feld wurde falsch konfiguriert und kann nicht übermittelt werden.`;\n    }\n    return `${sentence(name)} muss zwischen ${args[0]} und ${args[1]} sein.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} stimmt nicht überein.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} ist kein gültiges Datum im Format ${args[0]}.`;\n    }\n    return \"Dieses Feld wurde falsch konfiguriert und kann nicht übermittelt werden.\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} muss zwischen ${date(args[0])} und ${date(\n      args[1]\n    )} liegen.`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"E-Mail Adresse ist ungültig.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} endet nicht mit ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} enthält einen ungültigen Wert.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = first <= second ? first : second;\n    const max = second >= first ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} muss mindestens ein Zeichen enthalten.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} darf maximal ${max} Zeichen enthalten.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} sollte ${max} Zeichen lang sein.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} muss mindestens ${min} Zeichen enthalten.`;\n    }\n    return `${sentence(name)} muss zwischen ${min} und ${max} Zeichen enthalten.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} enthält einen ungültigen Wert.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Darf maximal ${args[0]} ${name} haben.`;\n    }\n    return `${sentence(name)} darf maximal ${args[0]} sein.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Keine Dateiformate konfiguriert.\";\n    }\n    return `${sentence(name)} muss vom Typ ${args[0]} sein.`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Mindestens ${args[0]} ${name} erforderlich.`;\n    }\n    return `${sentence(name)} muss mindestens ${args[0]} sein.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” ist kein gültiger Wert für ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} muss eine Zahl sein.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" oder \")} ist erforderlich.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} ist erforderlich.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} beginnt nicht mit ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Bitte geben Sie eine gültige URL ein.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Das gewählte Datum ist ungültig.\"\n};\nvar de = { ui: ui8, validation: validation8 };\nvar ui9 = {\n  /**\n   * Shown on a button for adding additional items.\n   */\n  add: \"Προσθήκη\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Αφαίρεση\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Αφαίρεση όλων\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Λυπούμαστε, υπάρχουν πεδία που δεν έχουν συμπληρωθεί σωστά.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Υποβολή\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Κανένα αρχείο δεν έχει επιλεγεί\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Προς τα επάνω\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Προς τα κάτω\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Φορτώνει...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Φόρτωση περισσότερων\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"Επόμενη\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"Προηγούμενο\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Προσθήκη όλων των τιμών\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Προσθήκη επιλεγμένων τιμών\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Κατάργηση όλων των τιμών\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Αφαίρεση επιλεγμένων τιμών\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Επιλέξτε ημερομηνία\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Αλλαγή ημερομηνίας\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Κλείσιμο\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Ανοιχτό\"\n};\nvar validation9 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Παρακαλώ αποδεχτείτε το ${name}.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} πρέπει να είναι μετά της ${date(args[0])}.`;\n    }\n    return `${sentence(name)} πρέπει να είναι στο μέλλον.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} μπορεί να περιέχει μόνο αλφαβητικούς χαρακτήρες.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} μπορεί να περιέχει μόνο γράμματα και αριθμούς.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} μπορεί να περιέχει μόνο γράμματα και κενά.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `Το ${sentence(name)} πρέπει να περιέχει αλφαβητικούς χαρακτήρες.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `Το ${sentence(name)} πρέπει να περιέχει γράμματα ή αριθμούς.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} πρέπει να περιέχει γράμματα ή κενά.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `Το ${sentence(name)} πρέπει να περιέχει το σύμβολο.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `Το ${sentence(name)} πρέπει να περιέχει κεφαλαία γράμματα.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `Το ${sentence(name)} πρέπει να περιέχει πεζά γράμματα.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `Το ${sentence(name)} πρέπει να περιέχει αριθμούς.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `Το ${sentence(name)} πρέπει να είναι ένα σύμβολο.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `Το ${sentence(name)} μπορεί να περιέχει μόνο κεφαλαία γράμματα.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `Το ${sentence(name)} μπορεί να περιέχει μόνο πεζά γράμματα.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} πρέπει να είναι πριν της ${date(args[0])}.`;\n    }\n    return `${sentence(name)} πρέπει να είναι στο παρελθόν.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Αυτό το πεδίο έχει ρυθμιστεί λανθασμένα και δεν μπορεί να υποβληθεί.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} πρέπει να είναι μεταξύ ${a} και ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} δεν ταιριάζει.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(\n        name\n      )} δεν είναι έγυρη ημερομηνία, παρακαλώ ακολουθήστε την διαμόρφωση ${args[0]}`;\n    }\n    return \"Αυτό το πεδίο έχει ρυθμιστεί λανθασμένα και δεν μπορεί να υποβληθεί\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} πρέπει να είναι μεταξύ ${date(args[0])} και ${date(\n      args[1]\n    )}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Παρακαλώ πληκτρολογήστε μια έγκυρη email διεύθυνση. \",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} δεν καταλήγει με ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} δεν είναι μια επιτρεπτή τιμή.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} πρέπει να είναι τουλάχιστον ενός χαρακτήρα.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} πρέπει να είναι λιγότεροι ή ίσοι με ${max} χαρακτήρες.`;\n    }\n    if (min === max) {\n      return `Το ${sentence(name)} θα πρέπει να έχει μήκος ${max} χαρακτήρες.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(\n        name\n      )} πρέπει να είναι περισσότεροι ή ίσοι με ${min} χαρακτήρες.`;\n    }\n    return `${sentence(name)} πρέπει να είναι μεταξύ ${min} και ${max} χαρακτήρες.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} δεν είναι μια επιτρεπτή τιμή.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Δεν μπορεί να έχει παραπάνω από ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} πρέπει αν είναι λιγότερο ή ίσο με το ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Δεν επιτρέπονται αρχεία.\";\n    }\n    return `${sentence(name)} πρέπει να είναι τύπου: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Δεν μπορεί να είναι λιγότερο από ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} πρέπει να είναι τουλάχιστον ${args[0]}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” δεν είναι μια επιτρεπτή ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} πρέπει να είναι αριθμός.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" ή \")} απαιτείται.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} είναι υποχρεωτικό.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} δεν αρχίζει με ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Παρακαλώ εισάγετε ένα έγκυρο URL.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Η επιλεγμένη ημερομηνία δεν είναι έγκυρη.\"\n};\nvar el = { ui: ui9, validation: validation9 };\nvar ui10 = {\n  /**\n   * Shown on a button for adding additional items.\n   */\n  add: \"Add\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Remove\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Remove all\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Sorry, not all fields are filled out correctly.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Submit\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"No file chosen\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Move up\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Move down\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Loading...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Load more\",\n  /**\n   * Show on buttons that navigate state forward\n   */\n  next: \"Next\",\n  /**\n   * Show on buttons that navigate state backward\n   */\n  prev: \"Previous\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Add all values\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Add selected values\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Remove all values\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Remove selected values\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Choose date\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Change date\",\n  /**\n   * Shown above error summaries when someone attempts to submit a form with\n   * errors and the developer has implemented `<FormKitSummary />`.\n   */\n  summaryHeader: \"There were errors in your form.\",\n  /*\n   * Shown when there is something to close\n   */\n  close: \"Close\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Open\"\n};\nvar validation10 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Please accept the ${name}.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} must be after ${date(args[0])}.`;\n    }\n    return `${sentence(name)} must be in the future.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} can only contain alphabetical characters.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} can only contain letters and numbers.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} can only contain letters and spaces.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} must contain alphabetical characters.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} must contain letters or numbers.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} must contain letters or spaces.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} must contain a symbol.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} must contain an uppercase letter.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} must contain a lowercase letter.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} must contain numbers.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} must be a symbol.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} can only contain uppercase letters.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name, args }) {\n    let postfix = \"\";\n    if (Array.isArray(args) && args.length) {\n      if (args[0] === \"allow_non_alpha\")\n        postfix = \", numbers and symbols\";\n      if (args[0] === \"allow_numeric\")\n        postfix = \" and numbers\";\n      if (args[0] === \"allow_numeric_dashes\")\n        postfix = \", numbers and dashes\";\n    }\n    return `${sentence(name)} can only contain lowercase letters${postfix}.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} must be before ${date(args[0])}.`;\n    }\n    return `${sentence(name)} must be in the past.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `This field was configured incorrectly and can’t be submitted.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} must be between ${a} and ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} does not match.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} is not a valid date, please use the format ${args[0]}`;\n    }\n    return \"This field was configured incorrectly and can’t be submitted\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} must be between ${date(args[0])} and ${date(args[1])}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Please enter a valid email address.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} doesn’t end with ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} is not an allowed value.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} must be at least one character.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} must be less than or equal to ${max} characters.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} should be ${max} characters long.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} must be greater than or equal to ${min} characters.`;\n    }\n    return `${sentence(name)} must be between ${min} and ${max} characters.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} is not an allowed value.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Cannot have more than ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} must be no more than ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"No file formats allowed.\";\n    }\n    return `${sentence(name)} must be of the type: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Cannot have fewer than ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} must be at least ${args[0]}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” is not an allowed ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} must be a number.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" or \")} is required.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} is required.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} doesn’t start with ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Please enter a valid URL.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"The selected date is invalid.\"\n};\nvar en = { ui: ui10, validation: validation10 };\nvar ui11 = {\n  /**\n   * Shown on buttons for adding new items.\n   */\n  add: \"Añadir\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Quitar\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Quitar todos\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Discúlpe, los campos no fueron completados correctamente.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Enviar\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Archivo no seleccionado\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Moverse hacia arriba\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Moverse hacia abajo\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Cargando...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Cargar más\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"Próximo\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"Anterior\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Añadir todos los valores\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Añadir valores seleccionados\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Eliminar todos los valores\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Eliminar los valores seleccionados\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Elige fecha\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Cambiar fecha\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Cerrar\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Abrir\"\n};\nvar validation11 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Acepte el ${name} por favor.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} debe ser posterior a ${date(args[0])}.`;\n    }\n    return `${sentence(name)} debe ser una fecha futura.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} debe contener solo caractéres alfabéticos.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} debe ser alfanumérico.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} espacios alfa solo pueden contener letras y espacios.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} debe contener caracteres alfabéticos.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} debe contener letras o números.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} debe contener letras o espacios.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} debe contener un símbolo.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} debe estar en mayúsculas.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} debe contener minúsculas.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} debe contener números.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} debe ser un símbolo.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} solo puede contener letras mayúsculas.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} solo puede contener letras minúsculas.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} debe ser anterior a ${date(args[0])}.`;\n    }\n    return `${sentence(name)} debe ser una fecha pasada.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `El campo no fue completado correctamente y no puede ser enviado.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} debe estar entre ${a} y ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} no coincide.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} no es una fecha válida, por favor utilice el formato ${args[0]}`;\n    }\n    return \"El campo no fue completado correctamente y no puede ser enviado.\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} debe estar entre ${date(args[0])} y ${date(args[1])}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Ingrese una dirección de correo electrónico válida por favor.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} no termina con ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} no es un valor permitido.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} debe tener al menos una letra.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} debe tener como máximo ${max} caractéres.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} debe tener ${max} caracteres.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} debe tener como mínimo ${min} caractéres.`;\n    }\n    return `${sentence(name)} debe tener entre ${min} y ${max} caractéres.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} no es un valor permitido.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `No puede tener más de ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} debe ser menor o igual a ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"No existen formatos de archivos permitidos.\";\n    }\n    return `${sentence(name)} debe ser del tipo: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `No puede tener menos de ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} debe ser de al menos ${args[0]}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” no es un valor permitido de ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} debe ser un número.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" o \")} se requiere estar.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} es requerido.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} debe comenzar con ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Introduce una URL válida.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"La fecha seleccionada no es válida.\"\n};\nvar es = { ui: ui11, validation: validation11 };\nvar ui12 = {\n  /**\n   * Shown on buttons for adding new items.\n   */\n  add: \"افزودن\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"حذف\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"همه را حذف کنید\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"همه فیلدها به‌درستی پر نشده‌اند\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"ثبت\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"هیچ فایلی انتخاب نشده است\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"حرکت به بالا\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"حرکت به پایین\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"در حال بارگذاری...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"بارگذاری بیشتر\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"بعدی\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"قبلی\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"تمام مقادیر را اضافه کنید\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"مقادیر انتخاب شده را اضافه کنید\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"تمام مقادیر را حذف کنید\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"حذف مقادیر انتخاب شده\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"تاریخ را انتخاب کنید\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"تغییر تاریخ\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"بستن\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"باز کردن\"\n};\nvar validation12 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `لطفاً ${name} را بپذیرید.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} باید بعد از تاریخ ${date(args[0])} باشد.`;\n    }\n    return `${sentence(name)} باید مربوط به آینده باشد.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} فقط میتواند شامل حروف الفبا باشد.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} فقط میتواند شامل حروف و اعداد باشد.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} فقط می تواند شامل حروف و فاصله باشد.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} باید حاوی حروف الفبا باشد.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} باید حاوی حروف یا اعداد باشد.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} باید حاوی حروف یا فاصله باشد.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} باید حاوی نماد باشد.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} باید دارای حروف بزرگ باشد.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} باید حاوی حروف کوچک باشد.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} باید حاوی اعداد باشد.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} باید یک نماد باشد.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} تنها می‌تواند شامل حروف بزرگ باشد.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} تنها می‌تواند شامل حروف کوچک باشد.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} باید قبل از تاریخ ${date(args[0])} باشد.`;\n    }\n    return `${sentence(name)} باید مربوط به گذشته باشد.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `این فیلد به اشتباه پیکربندی شده است و قابل ارسال نیست`;\n    }\n    return `${sentence(name)} باید بین ${args[0]} و ${args[1]} باشد.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} مطابقت ندارد.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} تاریخ معتبری نیست، لطفاً از قالب ${args[0]} استفاده کنید\n`;\n    }\n    return \"این فیلد به اشتباه پیکربندی شده است و قابل ارسال نیست\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} باید بین ${date(args[0])} و ${date(args[1])} باشد.`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"لطفا آدرس ایمیل معتبر وارد کنید.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} باید به ${list(args)} ختم شود.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} مجاز نیست.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = first <= second ? first : second;\n    const max = second >= first ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} باید حداقل یک کاراکتر باشد.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} باید کمتر یا برابر با ${max} کاراکتر باشد.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} باید ${max} کاراکتر طولانی باشد.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} باید بزرگتر یا برابر با ${min} کاراکتر باشد.`;\n    }\n    return `${sentence(name)} باید بین ${min} و ${max} کاراکتر باشد.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} مجاز نیست.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `${name} نمی تواند بیش از ${args[0]} باشد.`;\n    }\n    return `${sentence(name)} باید کمتر یا برابر با ${args[0]} باشد.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"فرمت فایل مجاز نیست.\";\n    }\n    return `${sentence(name)} باید از این نوع باشد: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `${name} نمی تواند کمتر از ${args[0]} باشد.\n`;\n    }\n    return `${sentence(name)} باید حداقل ${args[0]} باشد.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `\"${value}\" یک ${name} مجاز نیست.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} باید عدد باشد.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" یا \")} مورد نیاز است.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `پر کردن ${sentence(name)} اجباری است.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} باید با ${list(args)} شروع شود.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `لطفا یک URL معتبر وارد کنید.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"تاریخ انتخاب شده نامعتبر است\"\n};\nvar fa = { ui: ui12, validation: validation12 };\nvar ui13 = {\n  /**\n   * Shown on buttons for adding new items.\n   */\n  add: \"Lisää\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Poista\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Poista kaikki\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Kaikkia kenttiä ei ole täytetty oikein.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Tallenna\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Ei valittuja tiedostoja\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Siirrä ylös\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Siirrä alas\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Ladataan...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Lataa lisää\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"Seuraava\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"Edellinen\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Lisää kaikki arvot\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Lisää valitut arvot\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Poista kaikki arvot\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Poista valitut arvot\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Valitse päivämäärä\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Vaihda päivämäärä\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Sulje\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Avoinna\"\n};\nvar validation13 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Ole hyvä ja hyväksy ${name}`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} tulee olla ${date(args[0])} jälkeen.`;\n    }\n    return `${sentence(name)} on oltava tulevaisuudessa.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} saa sisältää vain kirjaimia.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} saa sisältää vain kirjaimia ja numeroita.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} voivat sisältää vain kirjaimia ja välilyöntejä.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} on sisällettävä aakkoselliset merkit.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} täytyy sisältää kirjaimia tai numeroita.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} täytyy sisältää kirjaimia tai välilyöntejä.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} täytyy sisältää symboli.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} täytyy sisältää isoja kirjaimia.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} täytyy sisältää pieniä kirjaimia.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} täytyy sisältää numeroita.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} on oltava symboli.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} voi sisältää vain isoja kirjaimia.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} voi sisältää vain pieniä kirjaimia.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} tulee olla ennen: ${date(args[0])}.`;\n    }\n    return `${sentence(name)} on oltava menneisyydessä.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Tämä kenttä on täytetty virheellisesti joten sitä ei voitu lähettää.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} on oltava välillä ${a} - ${b} `;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} ei täsmää.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(\n        name\n      )} ei ole validi päivämäärä, ole hyvä ja syötä muodossa: ${args[0]}`;\n    }\n    return \"Tämä kenttä on täytetty virheellisesti joten sitä ei voitu lähettää.\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} on oltava välillä ${date(args[0])} - ${date(args[1])}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Syötä validi sähköpostiosoite.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} tulee päättyä ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} ei ole sallittu vaihtoehto.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} on oltava vähintään yksi merkki.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} on oltava ${max} tai alle merkkiä.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} pitäisi olla ${max} merkkiä pitkä.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} on oltava vähintään ${min} merkkiä.`;\n    }\n    return `${sentence(name)} on oltava vähintään ${min}, enintään ${max} merkkiä.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} ei ole sallittu arvo.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Valitse enintään ${args[0]} ${name} vaihtoehtoa.`;\n    }\n    return `${sentence(name)} on oltava ${args[0]} tai alle.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Tiedostoja ei sallita.\";\n    }\n    return `${sentence(name)} tulee olla ${args[0]}-tiedostotyyppiä.`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Valitse vähintään ${args[0]} ${name} vaihtoehtoa.`;\n    }\n    return `${sentence(name)} tulee olla ${args[0]} tai suurempi.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” ei ole sallittu ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `Kentän ${sentence(name)} tulee olla numero.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" tai \")} vaaditaan.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} vaaditaan.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} on alettava ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Anna kelvollinen URL-osoite.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Valittu päivämäärä on virheellinen.\"\n};\nvar fi = { ui: ui13, validation: validation13 };\nvar ui14 = {\n  /**\n   * Shown on buttons for adding new items.\n   */\n  add: \"Ajouter\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Supprimer\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Enlever tout\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Désolé, tous les champs ne sont pas remplis correctement.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Valider\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Aucun fichier choisi\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Déplacez-vous\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Déplacez-vous\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Chargement...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Chargez plus\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"Suivant\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"Précédent\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Ajouter toutes les valeurs\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Ajouter les valeurs sélectionnées\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Supprimer toutes les valeurs\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Supprimer les valeurs sélectionnées\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Choisissez la date\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Modifier la date\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Fermer\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Ouvrir\"\n};\nvar validation14 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Veuillez accepter le ${name}.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} doit être postérieure au ${date(args[0])}.`;\n    }\n    return `${sentence(name)} doit être dans le futur.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} ne peut contenir que des caractères alphabétiques.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} ne peut contenir que des lettres et des chiffres.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} ne peuvent contenir que des lettres et des espaces.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} doit contenir des caractères alphabétiques.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} doit contenir au moins un lettre ou nombre.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} doit contenir des lettres ou des espaces.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} doit contenir un symbole.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} doit contenir au moins une majuscule.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} doit contenir au moins une minuscule.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} doit contenir des chiffres.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} doit être un symbole.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} ne peuvent contenir que des majuscules.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} ne peut contenir que des lettres minuscules.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} doit être antérieure au ${date(args[0])}.`;\n    }\n    return `${sentence(name)} doit être dans le passé.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Ce champ a été configuré de manière incorrecte et ne peut pas être soumis.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} doit être comprise entre ${a} et ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} ne correspond pas.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(\n        name\n      )} n'est pas une date valide, veuillez utiliser le format ${args[0]}`;\n    }\n    return \"Ce champ a été configuré de manière incorrecte et ne peut pas être soumis.\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} doit être comprise entre ${date(args[0])} et ${date(\n      args[1]\n    )}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Veuillez saisir une adresse email valide.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} ne se termine pas par ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} n'est pas une valeur autorisée.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} doit comporter au moins un caractère.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} doit être inférieur ou égal à ${max} caractères.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} doit contenir ${max} caractères.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} doit être supérieur ou égal à ${min} caractères.`;\n    }\n    return `${sentence(name)} doit être comprise entre ${min} et ${max} caractères.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} n'est pas une valeur autorisée.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Ne peut pas avoir plus de ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} doit être inférieur ou égal à ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Aucun format de fichier n’est autorisé\";\n    }\n    return `${sentence(name)} doit être du type: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Ne peut pas avoir moins de ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} doit être au moins de ${args[0]}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” n'est pas un ${name} autorisé.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} doit être un nombre.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" ou \")} est requis.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} est requis.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} ne commence pas par ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Entrez une URL valide.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: `La date sélectionnée n'est pas valide.`\n};\nvar fr = { ui: ui14, validation: validation14 };\nvar ui15 = {\n  /**\n   * Shown on a button for adding additional items.\n   */\n  add: \"Foeg ta\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Ferwider\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Ferwider alles\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Sorry, net alle fjilden binne korrekt ynfolle.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Ferstjoere\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Gjin bestân keazen\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Gean omheech\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Nei ûnderen\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Lade…\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Mear lade\",\n  /**\n   * Show on buttons that navigate state forward\n   */\n  next: \"Folgende\",\n  /**\n   * Show on buttons that navigate state backward\n   */\n  prev: \"Foarige\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Foegje alle wearden ta\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Foegje selektearre wearden ta\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Fuortsmite alle wearden\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Fuortsmite selektearre wearden\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Kies datum\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Feroarje datum\"\n};\nvar validation15 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Akseptearje de ${name}.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} moat nei ${date(args[0])} wêze.`;\n    }\n    return `${sentence(name)} moat yn de takomst lizze.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} mei allinne alfabetyske tekens befetsje.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} mei allinne letters en sifers befetsje.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} mei allinne letters en spaasjes befetsje.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} must contain alphabetical characters.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} must contain letters and numbers.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} must contain letters and spaces.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} must contain symbol.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} must contain uppercase.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} must contain lowercase.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} must contain number.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} can only contain symbol.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} can only contain uppercase.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} can only contain lowercase.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} moat foar ${date(args[0])} falle.`;\n    }\n    return `${sentence(name)} moat yn it ferline wêze.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Dit fjild is ferkeard konfigurearre en kin net ferstjoerd wurde.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} moat tusken ${a} en ${b} lizze.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} komt net oerien.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} is gjin jildige datum, brûk de notaasje ${args[0]}`;\n    }\n    return \"Dit fjild is ferkeard konfigurearre en kin net ferstjoerd wurde\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} moat tusken ${date(args[0])} en ${date(args[1])} lizze`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Folje in jildich e-mailadres yn.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} einiget net mei ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} is gjin tastiene wearde.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} moat minimaal ien teken wêze.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} moat lytser wêze as of gelyk wêze oan ${max} tekens.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} moat ${max} tekens lang wêze.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} moat grutter wêze as of gelyk wêze oan ${min} tekens.`;\n    }\n    return `${sentence(name)} moat tusken de ${min} en ${max} tekens befetsje.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} is gjin tastiene wearde.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Mei net mear as ${args[0]} ${name} hawwe.`;\n    }\n    return `${sentence(name)} moat lytser wêze as of gelyk wêze oan ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Gjin bestânsnotaasjes tastien.\";\n    }\n    return `${sentence(name)} moat fan it type: ${args[0]} wêze`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Mei net minder as ${args[0]} ${name} hawwe.`;\n    }\n    return `${sentence(name)} moat minimaal ${args[0]} wêze.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `\"${value}\" is gjin tastiene ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} moat in getal wêze.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" of \")} is ferplichte.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} is ferplicht.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} begjint net mei ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Doch der in jildige url by.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"De selektearre datum is ûnjildich.\"\n};\nvar fy = { ui: ui15, validation: validation15 };\nvar ui16 = {\n  /**\n   * Shown on a button for adding additional items.\n   */\n  add: \"הוסף\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"מחק\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"מחק הכל\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"שים לב, לא כל השדות מלאים כראוי.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"שלח\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"לא נבחר קובץ..\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"הזז למעלה\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"הזז למטה\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"טוען...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"טען יותר\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"הבא\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"הקודם\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"הוסף את כל הערכים\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"הוספת ערכים נבחרים\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"הסר את כל הערכים\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"הסר ערכים נבחרים\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"בחר תאריך\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"שינוי תאריך\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"סגור\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"פתוח\"\n};\nvar validation16 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `אנא אשר את ${name}.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} חייב להיות אחרי ${date(args[0])}.`;\n    }\n    return `${sentence(name)} חייב להיות בעתיד.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} חייב להכיל אותיות אלפבת.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} יכול להכיל רק מספרים ואותיות.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} יכול להכיל רק אותיות ורווחים.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} חייב להכיל תווים אלפביתיים.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} חייב להכיל אותיות או מספרים.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} חייב להכיל אותיות או רווחים.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} חייב להכיל סמל.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} חייב להכיל אותיות רישיות.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} חייב להכיל אותיות קטנות.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} חייב להכיל מספרים.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} חייב להיות סמל.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} יכול להכיל אותיות רישיות בלבד.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} יכול להכיל רק אותיות קטנות.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} חייב להיות לפני ${date(args[0])}.`;\n    }\n    return `${sentence(name)} חייב להיות בעבר`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `שדה זה לא הוגדר כראוי ולא יכול להישלח.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} חייב להיות בין ${a} ו- ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} לא מתאים.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} הוא לא תאריך תקין, אנא השתמש בפורמט ${args[0]}`;\n    }\n    return \"שדה זה לא הוגדר כראוי ולא יכול להישלח.\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} חייב להיות בין ${date(args[0])} ו- ${date(args[1])}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"אנא הקלד אימייל תקין.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} לא מסתיים ב- ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} הוא לא ערך מורשה.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} חייב להיות לפחות תו אחד.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} חייב להיות פחות או שווה ל- ${max} תווים.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} צריך להיות ${max} תווים ארוכים.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} חייב להיות גדול או שווה ל- ${min} תווים.`;\n    }\n    return `${sentence(name)} חייב להיות בין ${min} ו- ${max} תווים.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} הוא לא ערך תקין.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `${name} לא יכול להיות עם יותר מ- ${args[0]}.`;\n    }\n    return `${sentence(name)} חייב להיות פחות או שווה ל- ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"פורמט הקובץ לא מורשה.\";\n    }\n    return `${sentence(name)} חייב להיות מסוג: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `${name} לא יכול להיות עם פחות מ- ${args[0]}.`;\n    }\n    return `${sentence(name)} חייב להיות לפחות ${args[0]}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” לא מתאים ל- ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} חייב להיות מספר.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" או \")} נדרש.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} הינו חובה.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} לא מתחיל ב- ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `הזן כתובת URL חוקית.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"התאריך שנבחר אינו חוקי.\"\n};\nvar he = { ui: ui16, validation: validation16 };\nvar ui17 = {\n  /**\n   * Shown on buttons for adding new items.\n   */\n  add: \"Dodaj\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Ukloni\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Pojedina polja nisu ispravno ispunjena.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Predaj\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Pomaknite se gore\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Pomakni se dolje\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Učitavanje...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Učitaj više\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"Sljedeći\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"prijašnji\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Dodajte sve vrijednosti\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Dodavanje odabranih vrijednosti\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Ukloni sve vrijednosti\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Ukloni odabrane vrijednosti\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Odaberite datum\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Promijeni datum\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Zatvoriti\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Otvori\"\n};\nvar validation17 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Potrebno je potvrditi ${name}.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} mora biti u periodu poslije ${date(args[0])}.`;\n    }\n    return `${sentence(name)} mora biti u budućnosti.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} mora sadržavati samo slova.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} mora sadržavati slova i brojeve.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} mogu sadržavati samo slova i razmake..`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} mora sadržavati abecedne znakove.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} mora sadržavati slova ili brojeve.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} mora sadržavati slova ili razmake.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} mora sadržavati simbol.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} mora sadržavati velika slova.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} mora sadržavati mala slova.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} mora sadržavati brojeve.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} mora biti simbol.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} može sadržavati samo velika slova.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} može sadržavati samo mala slova.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} mora biti prije ${date(args[0])}.`;\n    }\n    return `${sentence(name)} mora biti u prošlosti.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Format sadržaja nije ispravan i ne može biti predan.`;\n    }\n    return `${sentence(name)} mora biti između ${args[0]} i ${args[1]}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} ne odgovara zadanoj vrijednosti.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(\n        name\n      )} nije ispravan format datuma. Molimo koristite sljedeći format: ${args[0]}`;\n    }\n    return \"Ovo polje nije ispravno postavljeno i ne može biti predano.\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} mora biti vrijednost između ${date(args[0])} i ${date(\n      args[1]\n    )}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Molimo upišite ispravnu email adresu.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} ne završava s ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} nije dopuštena vrijednost.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = first <= second ? first : second;\n    const max = second >= first ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} mora sadržavati barem jedan znak.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} mora imati ${max} ili manje znakova.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} trebao bi biti dugačak ${max} znakova.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} mora imati barem ${min} znakova.`;\n    }\n    return `Broj znakova za polje ${sentence(name)} mora biti između ${min} i ${max}.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} nije dozvoljena vrijednost.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Ne smije imati više od ${args[0]} ${name} polja.`;\n    }\n    return `${sentence(name)} mora imati vrijednost manju ili jednaku ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Format datoteke nije dozvoljen.\";\n    }\n    return `Format datoteke na polju ${sentence(name)} mora odgovarati: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Broj upisanih vrijednosti na polju ${name} mora biti barem ${args[0]}.`;\n    }\n    return `${sentence(name)} mora biti barem ${args[0]}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” nije dozvoljena vrijednost na polju ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} mora biti broj.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" ili \")} je potreban.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} je obavezno.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} ne počinje s ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Unesite valjanu URL adresu.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Odabrani datum je nevažeći.\"\n};\nvar hr = { ui: ui17, validation: validation17 };\nvar ui18 = {\n  /**\n   * Shown on a button for adding additional items.\n   */\n  add: \"Hozzáadás\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Eltávolítás\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Összes eltávolítása\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Sajnáljuk, nem minden mező lett helyesen kitöltve.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Beküldés\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Nincs fájl kiválasztva\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Mozgás felfelé\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Mozgás lefelé\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Betöltés...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Töltsön be többet\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"Következő\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"Előző\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Adja hozzá az összes értéket\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Kiválasztott értékek hozzáadása\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Távolítsa el az összes értéket\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"A kiválasztott értékek eltávolítása\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Válassza ki a dátumot\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Dátum módosítása\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Bezárás\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Nyitott\"\n};\nvar validation18 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Fogadja el a ${name} mezőt.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} mezőnek ${date(args[0])} után kell lennie.`;\n    }\n    return `${sentence(name)} mezőnek a jövőben kell lennie.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} csak alfanumerikus karaktereket tartalmazhat.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} csak betűket és számokat tartalmazhat.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} csak betűket és szóközöket tartalmazhat.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `A ${sentence(name)} betűrendes karaktereket kell tartalmaznia.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `A ${sentence(name)} betűket vagy számokat kell tartalmaznia.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `A ${sentence(name)} betűket vagy szóközöket kell tartalmaznia.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `A ${sentence(name)} szimbólumot kell tartalmaznia.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `A ${sentence(name)} nagybetűt kell tartalmaznia.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `A ${sentence(name)} kisbetűt kell tartalmaznia.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `A ${sentence(name)} számot kell tartalmaznia.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `A ${sentence(name)} szimbólumnak kell lennie.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `A ${sentence(name)} csak nagybetűket tartalmazhat.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `A ${sentence(name)} csak kisbetűket tartalmazhat.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} mezőnek ${date(args[0])} előtt kell lennie.`;\n    }\n    return `${sentence(name)} mezőnek a múltban kell lennie.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Ez a mező hibásan lett konfigurálva, így nem lehet beküldeni.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `A ${sentence(name)} mezőnek ${a} és ${b} között kell lennie.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} nem egyezik.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} nem érvényes dátum, ${args[0]} formátumot használj`;\n    }\n    return \"Ez a mező hibásan lett konfigurálva, így nem lehet beküldeni.\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} mezőnek ${date(args[0])} és ${args[1]} között kell lennie`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Kérjük, érvényes email címet adjon meg.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} mező nem a kijelölt (${list(args)}) módon ér véget.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} nem engedélyezett érték.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} mezőnek legalább egy karakteresnek kell lennie.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} mezőnek maximum ${max} karakteresnek kell lennie.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} ${max} karakter hosszúnak kell lennie.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} mezőnek minimum ${min} karakteresnek kell lennie.`;\n    }\n    return `${sentence(name)} mezőnek ${min} és ${max} karakter között kell lennie.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} nem engedélyezett érték.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Nem lehet több mint ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} nem lehet nagyobb, mint ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Nincsenek támogatott fájlformátumok.\";\n    }\n    return `${sentence(name)}-nak/nek a következőnek kell lennie: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Nem lehet kevesebb, mint ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)}-nak/nek minimum ${args[0]}-nak/nek kell lennie.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `\"${value}\" nem engedélyezett ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} mezőnek számnak kell lennie.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" vagy \")} szükséges.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} mező kötelező.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} nem a következővel kezdődik: ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Kérjük, adjon meg egy érvényes URL-t.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"A kiválasztott dátum érvénytelen.\"\n};\nvar hu = { ui: ui18, validation: validation18 };\nvar ui19 = {\n  /**\n   * Shown on buttons for adding new items.\n   */\n  add: \"Tambah\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Hapus\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Hapus semua\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Maaf, tidak semua bidang formulir terisi dengan benar\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Kirim\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Tidak ada file yang dipilih\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Pindah ke atas\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Pindah ke bawah\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Memuat...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Muat lebih\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"Berikutnya\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"Sebelumnya\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Tambahkan semua nilai\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Tambahkan nilai yang dipilih\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Hapus semua nilai\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Hapus nilai yang dipilih\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Pilih tanggal\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Ubah tanggal\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Tutup\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Buka\"\n};\nvar validation19 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Tolong terima kolom ${name}.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} nilainya harus lebih dari waktu ${date(args[0])}.`;\n    }\n    return `${sentence(name)} harus berisi waktu di masa depan.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} hanya bisa diisi huruf alfabet.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} hanya bisa diisi huruf dan angka.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} hanya boleh berisi huruf dan spasi..`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} harus berisi karakter abjad.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} harus mengandung huruf atau angka.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} harus berisi huruf atau spasi.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} harus berisi simbol.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} harus berisi huruf besar.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} harus berisi huruf kecil.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} harus berisi angka.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} harus berupa simbol.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} hanya dapat berisi huruf besar.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} hanya dapat berisi huruf kecil.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} nilainya harus kurang dari waktu ${date(args[0])}.`;\n    }\n    return `${sentence(name)} harus berisi waktu yang sudah lampau.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Kolom ini tidak diisi dengan benar sehingga tidak bisa dikirim`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} harus bernilai diantara ${a} dan ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} nilainya tidak cocok.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} waktu tidak cocok, mohon gunakan format waktu ${args[0]}`;\n    }\n    return \"Kolom ini tidak diisi dengan benar sehingga tidak bisa dikirim\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} harus diantara waktu ${date(args[0])} dan waktu ${date(\n      args[1]\n    )}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Tolong tulis alamat email yang benar.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} nilainya tidak berakhiran dengan ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} adalah nilai yang tidak diizinkan.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} nilainya setidaknya berisi satu karakter.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(\n        name\n      )} jumlah karakternya harus kurang dari atau sama dengan ${max} karakter.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} harus ${max} karakter panjang.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(\n        name\n      )} jumlah karakternya harus lebih dari atau sama dengan ${min} karakter.`;\n    }\n    return `${sentence(\n      name\n    )} jumlah karakternya hanya bisa antara ${min} dan ${max} karakter.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} nilainya tidak diizinkan.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Tidak bisa memiliki lebih dari ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} harus lebih kecil atau sama dengan ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Format file tidak diizinkan\";\n    }\n    return `${sentence(name)} hanya bisa bertipe: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Tidak boleh kurang dari ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} setidaknya harus berisi ${args[0]}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” adalah nilai yang tidak diperbolehkan untuk ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} harus berupa angka.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" atau \")} diperlukan`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} harus diisi.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} tidak dimulai dengan ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Harap masukkan URL yang valid.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Tanggal yang dipilih tidak valid.\"\n};\nvar id = { ui: ui19, validation: validation19 };\nvar ui20 = {\n  /**\n   * Shown on a button for adding additional items.\n   */\n  add: \"Bæta við\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Fjarlægja\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Fjarlægja allt\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Því miður, það er ekki búið að fylla rétt inn í alla reiti.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Senda\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Engin skrá valin\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Færa upp\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Færa niður\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Hleðsla...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Sækja meira\",\n  /**\n   * Show on buttons that navigate state forward\n   */\n  next: \"Áfram\",\n  /**\n   * Show on buttons that navigate state backward\n   */\n  prev: \"Til baka\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Bæta við öllum gildum\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Bæta við völdum gildum\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Fjarlægja öll gildi\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Fjarlægja valin gildi\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Velja dagsetningu\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Breyta dagsetningu\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Loka\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Opið\"\n};\nvar validation20 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Vinsamlegast samþykktu ${name}`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} þarf að vera eftir ${date(args[0])}.`;\n    }\n    return `${sentence(name)} þarf að vera í framtíðinni.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} má einungis innihalda bókstafi.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} má einungis innihalda bókstafi og tölur.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} má einungis innihalda bókstafi og bil.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} verður að innihalda bókstafi.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} verður að innihalda bókstafi eða tölur.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} verður að innihalda bókstafi eða bil.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} verður að innihalda tákn.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} verður að innihalda hástaf.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} verður að innihalda lágstaf.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} verður að innihalda tölur.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} verður að vera tákn.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} má einungis innihalda hástafi.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} má einungis innihalda lágstafi.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} þarf að vera á undan ${date(args[0])}.`;\n    }\n    return `${sentence(name)} þarf að vera liðin.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Þessi reitur var ekki rétt stilltur.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} þarf að vera á milli ${a} og ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} passar ekki.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(\n        name\n      )} er ekki gild dagsetning, vinsamlegast hafið dagsetninguna í formi ${args[0]}`;\n    }\n    return \"Þessi reitur var ekki rétt stilltur\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} þarf að vera á milli ${date(args[0])} og ${date(\n      args[1]\n    )}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Vinsamlegast sláðu inn gilt netfang.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} endar ekki á ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} er ekki leyfilegt gildi.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} þarf að vera að minnsta kosti einn stafur.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} þarf að vera færri en eða nákvæmlega ${max} stafir.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} þarf að vera ${max} stafir að lengd.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} þarf að vera fleiri en eða nákvæmlega ${min} stafir.`;\n    }\n    return `${sentence(name)} þarf að vera á milli ${min} og ${max} stafir.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} er ekki leyfilegt gildi.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Ekki hægt að hafa fleiri en ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} þarf að vera minna en eða nákvæmlega ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Ekki leyfileg tegund skráar.\";\n    }\n    return `${sentence(name)} þarf að vera af tegundinni: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Ekki hægt að hafa færri en ${args[0]} ${name}.`;\n    }\n    return `Þarf að vera að minnsta kosti ${args[0]} ${name}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” er ekki leyfilegt fyrir ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} þarf að vera tala.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" or \")} is required.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} er skilyrt.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} byrjar ekki á ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Vinsamlegast sláðu inn gilda slóð.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Valin dagsetning er ógild\"\n};\nvar is = { ui: ui20, validation: validation20 };\nvar ui21 = {\n  /**\n   * Shown on buttons for adding new items.\n   */\n  add: \"Inserisci\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Rimuovi\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Rimuovi tutti\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Ci dispiace, non tutti i campi sono compilati correttamente.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Invia\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Nessun file selezionato\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Sposta in alto\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Sposta giù\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Caricamento...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Carica altro\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"Prossimo\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"Precedente\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Aggiungi tutti i valori\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Aggiungi valori selezionati\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Rimuovi tutti i valori\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Rimuovi i valori selezionati\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Scegli la data\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Cambia data\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Chiudi\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Aperta\"\n};\nvar validation21 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Si prega di accettare ${name}.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `la data ${sentence(name)} deve essere successiva ${date(args[0])}.`;\n    }\n    return `la data ${sentence(name)} deve essere nel futuro.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} può contenere solo caratteri alfanumerici.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} può contenere solo lettere e numeri.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} può contenere solo lettere e spazi.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} deve contenere caratteri alfabetici.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} deve contenere lettere o numeri.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} deve contenere lettere o spazi.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} deve contenere un simbolo.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} must contain uppercase.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} deve contenere lettere minuscole.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} deve contenere numeri.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} deve essere un simbolo.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} può contenere solo lettere maiuscole.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} può contenere solo lettere minuscole.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `la data ${sentence(name)} deve essere antecedente ${date(args[0])}.`;\n    }\n    return `${sentence(name)} deve essere nel passato.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Questo campo è stato configurato male e non può essere inviato.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} deve essere tra ${a} e ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} non corrisponde.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} non è una data valida, per favore usa il formato ${args[0]}`;\n    }\n    return \"Questo campo è stato configurato in modo errato e non può essere inviato.\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} deve essere tra ${date(args[0])} e ${date(args[1])}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Per favore inserire un indirizzo email valido.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} non termina con ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} non è un valore consentito.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} deve contenere almeno un carattere.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} deve essere minore o uguale a ${max} caratteri.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} deve contenere ${max} caratteri.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} deve essere maggiore o uguale a ${min} caratteri.`;\n    }\n    return `${sentence(name)} deve essere tra ${min} e ${max} caratteri.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} non è un valore consentito.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Non può avere più di ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} deve essere minore o uguale a ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Formato file non consentito.\";\n    }\n    return `${sentence(name)} deve essere di tipo: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Non può avere meno di ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} deve essere almeno ${args[0]}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `\"${value}\" non è un ${name} consentito.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} deve essere un numero.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" o \")} è richiesto.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} è richiesto.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} non inizia con ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Inserisci un URL valido.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"La data selezionata non è valida.\"\n};\nvar it = { ui: ui21, validation: validation21 };\nvar ui22 = {\n  /**\n   * Shown on buttons for adding new items.\n   */\n  add: \"追加\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"削除\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"全て削除\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"項目が正しく入力されていません。\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"送信\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"ファイルが選択されていません\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"上に移動\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"下へ移動\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"読み込み中...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"さらに読み込む\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"[次へ]\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"前へ\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"すべての値を追加\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"選択した値を追加\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"すべての値を削除\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"選択した値を削除\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"日付を選択\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"日付を変更\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"閉じる\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"[開く]\"\n};\nvar validation22 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `${name}の同意が必要です。`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)}は${date(args[0])}より後の日付である必要があります。`;\n    }\n    return `${sentence(name)}は将来の日付でなければなりません。`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)}には英字のみを含めることができます。`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)}には、文字と数字のみを含めることができます。`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)}には、文字とスペースのみを含めることができます。`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} にはアルファベット文字が含まれている必要があります。`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} には文字または数字を含める必要があります。`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} には文字またはスペースを含める必要があります。`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} には記号が含まれている必要があります。`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} には大文字を含める必要があります。`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} には小文字を含める必要があります。`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} には数字が含まれている必要があります。`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} はシンボルでなければなりません。`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} には大文字しか使用できません`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} には小文字しか使用できません。`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)}は${date(args[0])}より前の日付である必要があります。`;\n    }\n    return `${sentence(name)}は過去の日付である必要があります。`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `このフィールドは正しく構成されていないため、送信できません。`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)}は${a}と${b}の間にある必要があります。`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)}が一致しません。`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)}は有効な日付ではありません。${args[0]}の形式を使用してください。`;\n    }\n    return \"このフィールドは正しく構成されておらず、送信できません。\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)}は${date(args[0])}と${date(\n      args[1]\n    )}の間にある必要があります。`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"有効なメールアドレスを入力してください。\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)}は${list(args)}で終わっていません。`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)}は許可された値ではありません。`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)}は少なくとも1文字である必要があります。`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)}は${max}文字以下である必要があります。`;\n    }\n    if (min === max) {\n      return `${sentence(name)} の長さは ${max} 文字でなければなりません。`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)}は${min}文字以上である必要があります。`;\n    }\n    return `${sentence(name)}は${min}から${max}文字の間でなければなりません。`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)}は許可された値ではありません。`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `${name}は${args[0]}を超えることはできません。`;\n    }\n    return `${sentence(name)}は${args[0]}以下である必要があります。`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"ファイル形式は許可されていません。\";\n    }\n    return `${sentence(name)}は${args[0]}である必要があります。`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `${name}は${args[0]}未満にすることはできません。`;\n    }\n    return `${sentence(name)}は少なくとも${args[0]}である必要があります。`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}”は許可された${name}ではありません。`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)}は数値でなければなりません。`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\"または\")}${labels}が必要です。`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)}は必須です。`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)}は${list(args)}で始まっていません。`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `有効な URL を入力してください。`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"選択した日付は無効です。\"\n};\nvar ja = { ui: ui22, validation: validation22 };\nvar ui23 = {\n  /**\n   * Shown on a button for adding additional items.\n   */\n  add: \"қосу\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Жою\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Барлығын жою\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Кешіріңіз, барлық өрістер дұрыс толтырылмаған.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Жіберу\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Ешбір файл таңдалмады\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Жоғары жылжу\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Төмен жылжытыңыз\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Жүктеу...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Көбірек жүктеңіз\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"Келесі\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"Алдыңғы\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Барлық мәндерді қосыңыз\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Таңдалған мәндерді қосыңыз\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Барлық мәндерді алып тастаңыз\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Таңдалған мәндерді алып тастаңыз\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Күнді таңдаңыз\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Өзгерту күні\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Жабу\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Ашық\"\n};\nvar validation23 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `қабылдаңыз ${name}.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} кейін болуы керек ${date(args[0])}.`;\n    }\n    return `${sentence(name)} болашақта болуы керек.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} тек алфавиттік таңбаларды қамтуы мүмкін.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} тек әріптер мен сандардан тұруы мүмкін.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} тек әріптер мен бос орындар болуы мүмкін.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} алфавиттік таңбалардан тұруы керек.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} құрамында әріптер немесе сандар болуы керек.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} құрамында әріптер немесе бос орындар болуы керек.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} символы болуы керек.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} құрамында бас әріптер болуы керек.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} кіші әріп болуы керек.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} сандардан тұруы керек.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} символы болуы керек.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} тек бас әріптерден тұруы мүмкін.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} құрамында тек кіші әріптер болуы мүмкін.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} бұрын болуы керек ${date(args[0])}.`;\n    }\n    return `${sentence(name)} өткенде болуы керек.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Бұл өріс қате конфигурацияланған және оны жіберу мүмкін емес.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} арасында болуы керек ${a} және ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} сәйкес келмейді.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} жарамды күн емес, пішімді пайдаланыңыз ${args[0]}`;\n    }\n    return \"Бұл өріс қате конфигурацияланған және оны жіберу мүмкін емес\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} арасында болуы керек ${date(args[0])} және ${date(\n      args[1]\n    )}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Өтінеміз қолданыстағы электронды пошта адресін енгізіңіз.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} -мен бітпейді ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} рұқсат етілген мән емес.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} кем дегенде бір таңба болуы керек.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} кем немесе тең болуы керек ${max} кейіпкерлер.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} ${max} таңбалары болуы керек.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} артық немесе тең болуы керек ${min} кейіпкерлер.`;\n    }\n    return `${sentence(name)} арасында болуы керек ${min} және ${max} кейіпкерлер.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} рұқсат етілген мән емес.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `артық болуы мүмкін емес ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} кем немесе тең болуы керек ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Файл пішімдері рұқсат етілмейді.\";\n    }\n    return `${sentence(name)} типте болуы керек: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `кем болуы мүмкін емес ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} кем дегенде болуы керек ${args[0]}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” рұқсат етілмейді ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} сан болуы керек.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" не \")} қажет.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} талап етіледі.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} -ден басталмайды ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Жарамды URL мекенжайын енгізіңіз.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Таңдалған күн жарамсыз.\"\n};\nvar kk = { ui: ui23, validation: validation23 };\nvar ui24 = {\n  /**\n   * Shown on buttons for adding new items.\n   */\n  add: \"추가\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"제거\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"모두 제거\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"모든 값을 채워주세요\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"제출하기\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"선택된 파일이 없습니다\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"위로 이동\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"아래로 이동\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"로드 중...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"더 불러오기\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"다음\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"이전\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"모든 값 추가\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"선택한 값 추가\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"모든 값 제거\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"선택한 값 제거\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"날짜 선택\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"날짜 변경\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"닫기\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"열기\"\n};\nvar validation24 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `${name} 올바른 값을 선택 해주세요`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} ${date(args[0])} 이후여야 합니다`;\n    }\n    return `${sentence(name)} 미래의 날짜여야합니다`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} 알파벳 문자만 포함할 수 있습니다`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} 문자와 숫자만 포함될 수 있습니다`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} 문자와 공백만 포함할 수 있습니다.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} 에는 알파벳 문자가 포함되어야 합니다.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} 에는 문자나 숫자가 포함되어야 합니다.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} 에는 문자나 공백이 포함되어야 합니다.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} 에는 기호를 포함해야 합니다.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} 는 대문자를 포함해야 합니다.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} 는 소문자를 포함해야 합니다.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} 에는 숫자가 포함되어야 합니다.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} 는 기호여야 합니다.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} 는 대문자만 포함할 수 있습니다.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} 는 소문자만 포함할 수 있습니다.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} ${date(args[0])} 이전여야 합니다`;\n    }\n    return `${sentence(name)} 과거의 날짜여야합니다`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `잘못된 구성으로 제출할 수 없습니다`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} ${a}와 ${b} 사이여야 합니다`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} 일치하지 않습니다`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} 유효한 날짜가 아닙니다. ${args[0]}과 같은 형식을 사용해주세요`;\n    }\n    return \"잘못된 구성으로 제출할 수 없습니다\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} ${date(args[0])}에서 ${date(args[1])} 사이여야 합니다`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"올바른 이메일 주소를 입력해주세요\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} ${list(args)}로 끝나지 않습니다`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} 허용되는 값이 아닙니다`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} 하나 이상의 문자여야 합니다`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} ${max}자 이하여야 합니다`;\n    }\n    if (min === max) {\n      return `${sentence(name)} 는 ${max} 자 길이여야 합니다.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} ${min} 문자보다 크거나 같아야 합니다`;\n    }\n    return `${sentence(name)} ${min}에서 ${max}자 사이여야 합니다`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} 허용되는 값이 아닙니다`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `${args[0]} ${name} 초과할 수 없습니다`;\n    }\n    return `${sentence(name)} ${args[0]}보다 작거나 같아야 합니다`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"파일 형식이 허용되지 않습니다\";\n    }\n    return `${sentence(name)} ${args[0]} 유형이어야 합니다`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `${args[0]} ${name}보다 작을 수 없습니다`;\n    }\n    return `${sentence(name)} ${args[0]} 이상이어야 합니다`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `${value}\" 허용되지 않는 ${name}입니다`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} 숫자여야 합니다`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" 또는 \")}가 필요합니다.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} 필수 값입니다`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} ${list(args)}로 시작하지 않습니다`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `유효한 URL을 입력하십시오.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"선택한 날짜가 잘못되었습니다.\"\n};\nvar ko = { ui: ui24, validation: validation24 };\nfunction getByQuantity(quantity, vienetas, vienetai, vienetu) {\n  const lastTwoDigits = quantity.toString().slice(-2);\n  const parsedQuantity = parseInt(lastTwoDigits);\n  if (parsedQuantity > 10 && parsedQuantity < 20 || parsedQuantity % 10 === 0) {\n    return vienetu;\n  }\n  if (parsedQuantity === 1 || parsedQuantity % 10 === 1) {\n    return vienetas;\n  }\n  return vienetai;\n}\nvar ui25 = {\n  /**\n   * Shown on a button for adding additional items.\n   */\n  add: \"Pridėti\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Pašalinti\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Pašalinti visus\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Atsiprašome, ne visi laukai užpildyti teisingai.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Pateikti\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Nepasirinktas joks failas\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Aukštyn\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Žemyn\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Kraunama...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Daugiau\",\n  /**\n   * Show on buttons that navigate state forward\n   */\n  next: \"Kitas\",\n  /**\n   * Show on buttons that navigate state backward\n   */\n  prev: \"Ankstesnis\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Pridėti visas reikšmes\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Pridėti pasirinktas reikšmes\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Pašalinti visas reikšmes\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Pašalinti pasirinktas reikšmes\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Pasirinkti datą\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Pakeisti datą\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Uždaryti\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Atidaryti\"\n};\nvar validation25 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Prašome priimti ${name}.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} turi būti po ${date(args[0])}.`;\n    }\n    return `${sentence(name)} turi būti ateityje.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} gali būti tik abėcėlės simboliai.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} gali būti tik raidės ir skaičiai.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} gali būti tik raidės ir tarpai.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} turi būti abėcėlės simbolių.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} turi būti raidžių arba skaičių.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} turi būti raidžių arba tarpų.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} turi būti simbolių.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} turi būti didžioji raidė.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} turi būti mažoji raidė.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} turi būti skaičių.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} turi būti simbolis.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} turi būti tik didžiosios raidės.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} turi būti tik mažosios raidės.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} turi būti prieš ${date(args[0])}.`;\n    }\n    return `${sentence(name)} turi būti praeityje.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Šis laukas buvo sukonfigūruotas neteisingai ir jo negalima pateikti.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} turi būti tarp ${a} ir ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} nesutampa.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} nėra tinkama data, naudokite formatą ${args[0]}`;\n    }\n    return \"Šis laukas buvo sukonfigūruotas neteisingai ir jo negalima pateikti\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} turi būti tarp ${date(args[0])} ir ${date(args[1])}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Įveskite teisingą el. pašto adresą.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} nesibaigia su ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} nėra leistina reikšmė.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} turi būti bent vienas simbolis.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} turi būti mažiau arba lygiai ${max} ${getByQuantity(\n        max,\n        \"simbolis\",\n        \"simboliai\",\n        \"simbolių\"\n      )}.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} turi būti iš ${max} ${getByQuantity(\n        max,\n        \"simbolio\",\n        \"simbolių\",\n        \"simbolių\"\n      )}.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} turi būti daugiau arba lygiai ${min} ${getByQuantity(\n        min,\n        \"simbolis\",\n        \"simboliai\",\n        \"simbolių\"\n      )}.`;\n    }\n    return `${sentence(name)} turi būti tarp ${min} ir ${max} simbolių.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} nėra leistina reikšmė.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Negali turėti daugiau nei ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} turi būti mažiau arba lygiai ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Neleidžiami jokie failų formatai.\";\n    }\n    return `${sentence(name)} turi būti tokio tipo: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Negali turėti mažiau nei ${args[0]} ${name}.`;\n    }\n    return `Turi būti bent ${args[0]} ${name} .`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” nėra leidžiamas ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} turi būti skaičius.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" arba \")} yra privaloma.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} yra privaloma.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} neprasideda su ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Įveskite teisingą URL.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Pasirinkta data yra netinkama.\"\n};\nvar lt = { ui: ui25, validation: validation25 };\n\n// packages/i18n/src/locales/lv.ts\nvar ui26 = {\n  /**\n   * Shown on a button for adding additional items.\n   */\n  add: \"Pievienot\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Noņemt\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Noņemt visus\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Piedodiet, visi lauki nav aizpildīti.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Iesniegt\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Nav izvēlēts fails\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Uz augšu\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Uz leju\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Ielādējas...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Ielādēt vēl\",\n  /**\n   * Show on buttons that navigate state forward\n   */\n  next: \"Tālāk\",\n  /**\n   * Show on buttons that navigate state backward\n   */\n  prev: \"Atpakaļ\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Pievienot visas vērtības\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Pievienojiet izvēlēto vērtību\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Noņemt visas vērtības\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Noņemt izvēlētās vērtības\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Izvēlieties datumu\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Mainīt datumu\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Aizvērt\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Atvērt\"\n};\nvar validation26 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Lūdzu apstipriniet ${name}`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${name} jābūt pēc ${date(args[0])}.`;\n    }\n    return `${name} jābūt pēc šodienas datuma.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${name} var saturēt tikai alfabētiskās rakstzīmes.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${name} var saturēt tikai burtus un ciparus.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${name} var saturēt tikai burtus un atstarpes.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${name} jābūt pirms ${date(args[0])}.`;\n    }\n    return `${name} jābūt pirms šodienas datuma.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Šis lauks tika aizpildīts nepareizi un nevar tikt iesniegts.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${name} jābūt starp ${a} un ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${name} nesakrīt.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${name} nav pareizs datums, lūdzu lietojiet formātu ${args[0]}`;\n    }\n    return \"Šis lauks tika aizpildīts nepareizi un nevar tikt iesniegts.\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${name} jābūt starp ${date(args[0])} un ${date(args[1])}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Lūdzu ierakstiet pareizu e-pasta adresi.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${name} nebeidzas ar ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${name} nav atļauta vērtība.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${name} jābūt vismaz vienam simbolam.`;\n    }\n    if (min == 0 && max) {\n      return `${name} jābūt mazāk par vai ${max} simboliem.`;\n    }\n    if (min === max) {\n      return `${name} jābūt ${max} simbolu garumā.`;\n    }\n    if (min && max === Infinity) {\n      return `${name} jābūt vismaz ${min} simboliem.`;\n    }\n    return `${name} jābūt starp ${min} un ${max} simboliem.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${name} nav atļauta vērtība.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Nevar būt vairāk par ${args[0]} ${name}.`;\n    }\n    return `${name} nevar būt mazāk par ${args[0]} vai ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Atļauti nenoteikti faila formāti.\";\n    }\n    return `${sentence(name)} faila formāti var būt šādi: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Nevar būt mazāk par ${args[0]} ${name}.`;\n    }\n    return `Jābūt vismaz ${args[0]} ${name}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” nav atļauta vērtība iekš ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${name} jābūt ciparam.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${name} ir obligāti jāaizpilda`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${name} nesākas ar ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Lūdzu pievienojiet pareizu URL.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Izvēlētais datums ir nepareizs.\"\n};\nvar lv = { ui: ui26, validation: validation26 };\n\n// packages/i18n/src/locales/mn.ts\nvar ui27 = {\n  /**\n   * Shown on a button for adding additional items.\n   */\n  add: \"Нэмэх\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Хасах\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Бүгдийг хасах\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Уучлраарай, зарим нүдэн дахь өгөгдөл дутуу байна.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Илгээх\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Файл сонгоогүй байна\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Дээшээ\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Доошоо\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Ачааллаж байна...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Нэмж ачааллах\",\n  /**\n   * Show on buttons that navigate state forward\n   */\n  next: \"Дараагийн\",\n  /**\n   * Show on buttons that navigate state backward\n   */\n  prev: \"Өмнөх\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Бүх утгуудыг нэмэх\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Сонгогдсон утгуудыг нэмэх\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Бүх утгуудыг устгах\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Сонгогдсон утгуудыг хасах\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Огноо сонгох\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Огноо өөрчлөх\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Хаах\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Нээлттэй\"\n};\nvar validation27 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `${name} утгыг зөвшөөрнө үү.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} нь ${date(args[0])}-ны дараа орох ёстой.`;\n    }\n    return `${sentence(name)} утга ирээдүйг заах ёстой.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} зөвхөн үсэг агуулах ёстой.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} зөвхөн үсэг болон тоог агуулах ёстой.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} зөвхөн үсэг болон зай агуулах ёстой.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} нь ${date(args[0])}-ны өмнө байх ёстой.`;\n    }\n    return `${sentence(name)} өнгөрсөн огноо байх ёстой.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Энэ нүдэн дэхь өгөгдөл буруу учраас илгээх боломжгүй.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} нь заавал ${a}, ${b} хоёрын дунд байх ёстой.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} таарахгүй байна.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} нь хүчинтэй огноо биш тул ${args[0]} гэсэн огноог ашиглаарай.`;\n    }\n    return \"Энэхүү нүд буруу тул цааш илгээх боломжгүй.\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} нь заавал ${date(args[0])}, ${date(\n      args[1]\n    )} хоёр огноон дунд байх ёстой.`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Та хүчинтэй имейл хаягаа оруулна уу.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} нь ${list(args)} гэсэн утгаар төгсөөгүй байна.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} нь зөвшөөрөгдөх утга биш.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} дээр хаяж нэг үсэг байх ёстой`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)}-н урт нь ${max}-ээс ихгүй байх ёстой.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} нь ${max} урт байвал зүгээр.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)}-н урт нь ${min}-ээс их буюу тэнцүү байж болно.`;\n    }\n    return `${sentence(name)}-н урт нь ${min}, ${max} хоёрын дунд байх ёстой.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} нь зөвшөөрөгдөх утга биш.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `${name} нь ${args[0]}-аас их байж болохгүй.`;\n    }\n    return `${sentence(name)} нь ${args[0]}-тай тэнцүү эсвэл бага байх ёстой.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Файлын формат буруу.\";\n    }\n    return `${sentence(name)} төрөл нь ${args[0]} байх ёстой.`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `${name} нь ${args[0]}-аас их байж болохгүй.`;\n    }\n    return `${name} нь дор хаяж ${args[0]}-тай тэнцүү байх ёстой.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” бол зөвшөөрөгдөх ${name} гэсэн утга биш.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} зөвхөн тоо байх ёстой.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} байх ёстой.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} нь ${list(args)}-ээр эхлээгүй байна.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Хүчннтай URL оруулна уу.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Сонгосон огноо буруу байна.\"\n};\nvar mn = { ui: ui27, validation: validation27 };\nvar ui28 = {\n  /**\n   * Shown on a button for adding additional items.\n   */\n  add: \"Legg til\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Fjern\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Fjern alle\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Beklager, noen felter er ikke fylt ut korrekt.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Send inn\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Ingen fil valgt\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Flytt opp\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Flytt ned\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Laster...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Last mer\",\n  /**\n   * Show on buttons that navigate state forward\n   */\n  next: \"Neste\",\n  /**\n   * Show on buttons that navigate state backward\n   */\n  prev: \"Forrige\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Legg til alle verdier\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Legg til valgte verdier\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Fjern alle verdier\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Fjern valgte verdier\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Velg dato\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Endre dato\"\n};\nvar validation28 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Vennligst aksepter ${name}.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} må være senere enn ${date(args[0])}.`;\n    }\n    return `${sentence(name)} må være i fremtiden.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} kan bare inneholde alfabetiske tegn.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} kan bare inneholde bokstaver og tall.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} kan bare inneholde bokstaver og mellomrom.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} must contain alphabetical characters.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} must contain letters and numbers.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} must contain letters and spaces.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} must contain symbol.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} must contain uppercase.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} must contain lowercase.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} must contain number.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} can only contain symbol.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} can only contain uppercase.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} can only contain lowercase.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} må være tidligere enn ${date(args[0])}.`;\n    }\n    return `${sentence(name)} må være i fortiden.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Dette feltet er feilkonfigurert og kan ikke innsendes.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} må være mellom ${a} og ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} stemmer ikke overens.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} er ikke en gyldig dato, vennligst bruk formatet ${args[0]}`;\n    }\n    return \"Dette feltet er feilkonfigurert og kan ikke innsendes.\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} må være mellom ${date(args[0])} og ${date(args[1])}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Vennligst oppgi en gyldig epostadresse.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} slutter ikke med ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} er ikke en tillatt verdi.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} må ha minst ett tegn.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} må ha mindre enn eller nøyaktig ${max} tegn.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} skal være ${max} tegn langt.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} må ha mer enn eller nøyaktig ${min} tegn.`;\n    }\n    return `${sentence(name)} må ha mellom ${min} og ${max} tegn.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} er ikke en tillatt verdi.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Kan ikke ha mer enn ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} må være mindre enn eller nøyaktig ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Ingen tillatte filformater.\";\n    }\n    return `${sentence(name)} må være av typen: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Kan ikke ha mindre enn ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} må være minst ${args[0]}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” er ikke en tillatt ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} må være et tall.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" eller \")} er nødvendig.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} er påkrevd.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} starter ikke med ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Vennligst inkluder en gyldig url.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Den valgte datoen er ugyldig.\"\n};\nvar nb = { ui: ui28, validation: validation28 };\nvar ui29 = {\n  /**\n   * Shown on buttons for adding new items.\n   */\n  add: \"Toevoegen\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Verwijderen\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Alles verwijderen\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Sorry, niet alle velden zijn correct ingevuld.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Versturen\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Geen bestand gekozen\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Naar boven gaan\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Naar beneden verplaatsen\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Aan het laden...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Meer laden\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"Vervolgens\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"Voorgaand\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Alle waarden toevoegen\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Geselecteerde waarden toevoegen\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Alle waarden verwijderen\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Geselecteerde waarden verwijderen\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Kies een datum\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Datum wijzigen\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Sluiten\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Open\"\n};\nvar validation29 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Accepteer de ${name}.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} moet na ${date(args[0])} zijn.`;\n    }\n    return `${sentence(name)} moet in de toekomst liggen.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} mag alleen alfabetische tekens bevatten.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} mag alleen letters en cijfers bevatten.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} mag alleen letters en spaties bevatten.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} moet alfabetische tekens bevatten.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} moet letters of cijfers bevatten.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} moet letters of spaties bevatten.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} moet een symbool bevatten.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} moet hoofdletters bevatten.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} moet kleine letters bevatten.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} moet cijfers bevatten.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} moet een symbool zijn.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} mag alleen hoofdletters bevatten.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} mag alleen kleine letters bevatten.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} moet vóór ${date(args[0])} vallen.`;\n    }\n    return `${sentence(name)} moet in het verleden liggen.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Dit veld is onjuist geconfigureerd en kan niet worden verzonden.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} moet tussen ${a} en ${b} liggen.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} komt niet overeen.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} is geen geldige datum, gebruik de notatie ${args[0]}`;\n    }\n    return \"Dit veld is onjuist geconfigureerd en kan niet worden verzonden\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} moet tussen ${date(args[0])} en ${date(args[1])} liggen`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Vul een geldig e-mailadres in.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} eindigt niet met ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} is geen toegestane waarde.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} moet minimaal één teken zijn.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} mag maximaal ${max} tekens lang zijn.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} moet ${max} tekens lang zijn.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} moet minimaal ${min} tekens lang zijn.`;\n    }\n    return `${sentence(name)} moet tussen de ${min} en ${max} tekens zijn.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} is geen toegestane waarde.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Mag niet meer dan ${args[0]} ${name} hebben.`;\n    }\n    return `${sentence(name)} moet kleiner zijn dan of gelijk zijn aan ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Geen bestandsformaten toegestaan.\";\n    }\n    return `${sentence(name)} moet van het type: ${args[0]} zijn`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Mag niet minder dan ${args[0]} ${name} hebben.`;\n    }\n    return `${sentence(name)} moet minimaal ${args[0]} zijn.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `\"${value}\" is geen toegestane ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} moet een getal zijn.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" of \")} is vereist.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} is verplicht.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} begint niet met ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Voer een geldige URL in.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"De geselecteerde datum is ongeldig.\"\n};\nvar nl = { ui: ui29, validation: validation29 };\nvar ui30 = {\n  /**\n   * Shown on buttons for adding new items.\n   */\n  add: \"Dodaj\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Usuń\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Usuń wszystko\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Nie wszystkie pola zostały wypełnione poprawnie.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Wyślij\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Nie wybrano pliku\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Przesuń w górę\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Przesuń w dół\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Ładowanie...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Załaduj więcej\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"Kolejny\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"Poprzednia\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Dodaj wszystkie wartości\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Dodaj wybrane wartości\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Usuń wszystkie wartości\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Usuń wybrane wartości\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Wybierz datę\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Zmień datę\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Zamknij\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Otwórz\"\n};\nvar validation30 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Proszę zaakceptować ${name}.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} musi być po ${date(args[0])}.`;\n    }\n    return `${sentence(name)} musi być w przyszłości.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `Pole ${sentence(name)} może zawierać tylko znaki alfabetyczne.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `Pole ${sentence(name)} może zawierać tylko znaki alfanumeryczne.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `Pole ${sentence(name)} mogą zawierać tylko litery i spacje.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} musi zawierać znaki alfabetyczne.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} musi zawierać litery lub cyfry.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} musi zawierać litery lub spacje.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} musi zawierać symbol.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} musi zawierać wielkie litery.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} musi zawierać małe litery.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} musi zawierać liczby.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} musi być symbolem.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} może zawierać tylko wielkie litery.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} może zawierać tylko małe litery.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} musi być przed ${date(args[0])}.`;\n    }\n    return `${sentence(name)} musi być w przeszłości.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Pole zostało wypełnione niepoprawnie i nie może zostać wysłane.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `Wartość pola ${sentence(name)} musi być pomiędzy ${a} i ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} nie pokrywa się.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `Wartość pola ${sentence(\n        name\n      )} nie jest poprawną datą, proszę użyć formatu ${args[0]}`;\n    }\n    return \"To pole zostało wypełnione niepoprawnie i nie może zostać wysłane\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `Data w polu ${sentence(name)} musi być pomiędzy ${date(args[0])} i ${date(\n      args[1]\n    )}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Proszę wpisać poprawny adres email.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `Pole ${sentence(name)} nie kończy się na ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `Pole ${sentence(name)} nie jest dozwoloną wartością.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `Pole ${sentence(name)} musi posiadać minimum jeden znak.`;\n    }\n    if (min == 0 && max) {\n      return `Pole ${sentence(name)} musi zawierać ${max} lub mniej znaków.`;\n    }\n    if (min && max === Infinity) {\n      return `Pole ${sentence(name)} musi zawierać ${min} lub więcej znaków.`;\n    }\n    if (min === max) {\n      return `Pole ${sentence(name)} musi mieć ${min} znaków.`;\n    }\n    return `Pole ${sentence(name)} musi mieć ${min}-${max} znaków.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `Pole ${sentence(name)} zawiera niedozwolone znaki.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Nie można mieć więcej niż ${args[0]} ${name}.`;\n    }\n    return `Wartość pola ${sentence(name)} musi być mniejsza lub równa ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Nie podano dozwolonych typów plików.\";\n    }\n    return `${sentence(name)} musi być typem: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Musisz podać więcej niż ${args[0]} ${name}.`;\n    }\n    return ` Musisz podać conajmniej ${args[0]} ${sentence(name)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name }) {\n    return `Wartość pola ${name} jest niedozwolona.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} musi być numerem.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" lub \")} wymagany jest.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `Pole ${sentence(name)} jest wymagane.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `Wartośc pola ${sentence(name)} nie zaczyna się od ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Wprowadź prawidłowy adres URL.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Wybrana data jest nieprawidłowa.\"\n};\nvar pl = { ui: ui30, validation: validation30 };\nvar ui31 = {\n  /**\n   * Shown on buttons for adding new items.\n   */\n  add: \"Incluir\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Remover\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Remover todos\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Desculpe, alguns campos não foram preenchidos corretamente.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Enviar\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Nenhum arquivo selecionado.\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Mover para cima\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Mover para baixo\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Carregando...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Carregar mais\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"Próximo\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"Anterior\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Adicione todos os valores\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Adicionar valores selecionados\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Remover todos os valores\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Remover valores selecionados\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Escolha a data\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Data da alteração\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Fechar\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Aberto\"\n};\nvar validation31 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Por favor aceite o ${name}.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} precisa ser depois de ${date(args[0])}.`;\n    }\n    return `${sentence(name)} precisa ser no futuro.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} precisa conter apenas letras.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} pode conter apenas letras e números.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} pode conter apenas números e espaços.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} deve conter caracteres alfabéticos.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} deve conter letras ou números.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} deve conter letras ou espaços.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} deve conter um símbolo.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} deve conter letras maiúsculas.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} deve conter letras minúsculas.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} deve conter números.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} deve ser um símbolo.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} só pode conter letras maiúsculas.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} só pode conter letras minúsculas.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} precisa ser antes de ${date(args[0])}.`;\n    }\n    return `${sentence(name)} precisa ser no passado.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Este campo não foi configurado corretamente e não pode ser submetido.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} precisa ser entre ${a} e ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} não é igual.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} não é uma data válida, por favor use este formato ${args[0]}`;\n    }\n    return \"Este campo não foi configurado corretamente e não pode ser submetido.\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} precisa ser entre ${date(args[0])} e ${date(args[1])}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Por favor, insira um endereço de email válido.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} não termina com ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} não é um valor permitido.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = first <= second ? first : second;\n    const max = second >= first ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} precisa conter ao menos um caractere.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} precisa ser menor ou igual a ${max} caracteres.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} precisa conter ${max} caracteres.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} precisa ser maior ou igual a ${min} caracteres.`;\n    }\n    return `${sentence(name)} precisa ter entre ${min} e ${max} caracteres.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} não é um valor permitido.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Não pode ter mais de ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} precisa ser menor ou igual a ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Não há formatos de arquivos permitidos.\";\n    }\n    return `${sentence(name)} precisa ser do tipo: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Não pode ter menos de ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} precisa ser pelo menos ${args[0]}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” não é um(a) ${name} permitido(a).`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} precisa ser um número.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" ou \")} é necessário.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} é obrigatório.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} não começa com ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Por favor, insira uma url válida.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"A data selecionada é inválida.\"\n};\nvar pt = { ui: ui31, validation: validation31 };\nvar ui32 = {\n  /**\n   * Shown on buttons for adding new items.\n   */\n  add: \"Adăugare\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Elimină\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Elimină tot\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Pare rău, unele câmpuri nu sunt corect completate.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Trimite\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Nu este selectat nici un fișier\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Mutare în sus\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Mutare în jos\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Se încarcă...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Încărcați mai mult\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"Urmatorul\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"Precedent\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Adăugați toate valorile\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Adăugarea valorilor selectate\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Eliminați toate valorile\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Eliminați valorile selectate\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Alege data\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Modificați data\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Închide\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Deschis\"\n};\nvar validation32 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Te rog acceptă ${name}.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} trebuie să fie după ${date(args[0])}.`;\n    }\n    return `${sentence(name)} trebuie sa fie în viitor.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} poate conține doar caractere alafetice.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} poate conține doar litere și numere.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} poate conține doar litere și spații.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} trebuie să conțină caractere alfabetice.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} trebuie să conțină litere sau numere.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} trebuie să conțină litere sau spații.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} trebuie să conțină simbol.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} trebuie să conțină majuscule.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} trebuie să conțină litere mici.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} trebuie să conțină numere.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} trebuie să fie un simbol.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} poate conține doar litere mari.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} poate conține doar litere mici.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} trebuie să preceadă ${date(args[0])}.`;\n    }\n    return `${sentence(name)} trebuie să fie în trecut.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Câmpul a fost configurat incorect și nu poate fi trimis.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} trebuie să fie între ${a} și ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} nu se potrivește.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} nu este validă, te rog foloște formatul ${args[0]}`;\n    }\n    return \"Câmpul a fost incorect configurat și nu poate fi trimis.\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} trebuie să fie între ${date(args[0])} și ${date(\n      args[1]\n    )}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Te rog folosește o adresă de email validă.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} nu se termină cu ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} nu este o valoare acceptată.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} trebuie sa conțină cel puțin un caracter.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} trebuie sa aibă cel mult ${max} caractere.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} ar trebui să aibă ${max} caractere lungi.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} trebuie să aibă cel puțin ${min} caractere.`;\n    }\n    return `${sentence(name)} trebuie să aibă între ${min} și ${max} caractere.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} nu este o valoare acceptată.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Nu poate avea mai mult decat ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} trebuie să fie cel mult egal cu ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Tipul de fișier neacceptat.\";\n    }\n    return `${sentence(name)} trebuie să fie de tipul: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Nu poate avea mai puțin decât ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} trebuie să fie cel puțin ${args[0]}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” nu este o valoare acceptă pentru ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} trebuie să fie un număr.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" sau \")} este necesar.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} este necesar.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} nu începe cu ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Introduceți o adresă URL validă.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Data selectată este nevalidă.\"\n};\nvar ro = { ui: ui32, validation: validation32 };\nvar ui33 = {\n  /**\n   * Shown on buttons for adding new items.\n   */\n  add: \"Добавить\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Удалить\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Убрать все\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Извините, не все поля заполнены верно.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Отправить\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Файл не выбран\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Переместить вверх\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Переместить вниз\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Загрузка...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Загрузить больше\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"Следующий\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"Предыдущий\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Добавить все значения\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Добавить выбранные значения\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Удалить все значения\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Удалить выбранные значения\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Выберите дату\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Изменить дату\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Закрыть\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Открыть\"\n};\nvar validation33 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Пожалуйста, примите ${name}.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `Дата ${sentence(name)} должна быть позже ${date(args[0])}.`;\n    }\n    return `Дата ${sentence(name)} должна быть в будущем.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `Поле ${sentence(name)} может содержать только буквы.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `Поле ${sentence(name)} может содержать только буквы и цифры.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} могут содержать только буквы и пробелы.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} должен содержать алфавитные символы.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} должен содержать буквы или цифры.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} должно содержать буквы или пробелы.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} должен содержать символ.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} должно содержать прописные буквы.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} должно содержать строчные буквы.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} должен содержать числа.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} должен быть символом.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} может содержать только прописные буквы.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} может содержать только буквы нижнего регистра.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `Дата ${sentence(name)} должна быть раньше ${date(args[0])}.`;\n    }\n    return `Дата ${sentence(name)} должна быть в прошлом.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Это поле заполнено неверно и не может быть отправлено.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `Поле ${sentence(name)} должно быть между ${a} и ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `Поле ${sentence(name)} не совпадает.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `Поле ${sentence(\n        name\n      )} имеет неверную дату. Пожалуйста, используйте формат ${args[0]}`;\n    }\n    return \"Это поле заполнено неверно и не может быть отправлено.\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `Дата ${sentence(name)} должна быть между ${date(args[0])} и ${date(\n      args[1]\n    )}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Пожалуйста, введите действительный электронный адрес.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `Поле ${sentence(name)} не должно заканчиваться на ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `Поле ${sentence(name)} имеет неподустимое значение.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `Поле ${sentence(name)} должно содержать минимум один символ.`;\n    }\n    if (min == 0 && max) {\n      return `Длина поля ${sentence(\n        name\n      )} должна быть меньше или равна ${max} символам.`;\n    }\n    if (min === max) {\n      return `Длина ${sentence(name)} должна составлять ${max} символов.`;\n    }\n    if (min && max === Infinity) {\n      return `Длина поля ${sentence(\n        name\n      )} должна быть больше или равна ${min} символам.`;\n    }\n    return `Длина поля ${sentence(name)} должна быть между ${min} и ${max} символами.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `Поле ${sentence(name)} имеет недопустимое значение.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Не может быть выбрано больше, чем ${args[0]} ${name}.`;\n    }\n    return `Поле ${sentence(name)} должно быть меньше или равно ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Не указаны поддержиавемые форматы файла.\";\n    }\n    return `Формат файла в поле ${sentence(name)} должен быть: ${args[0]}.`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Не может быть выбрано меньше, чем ${args[0]} ${name}.`;\n    }\n    return `Поле ${sentence(name)} должно быть не менее, чем ${args[0]}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” не поддерживается в поле ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `Поле ${sentence(name)} должно быть числом.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" или \")} требуется.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `Поле ${sentence(name)} обязательно для заполнения.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `Поле ${sentence(name)} должно начинаться с ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Пожалуйста, введите действительный URL-адрес.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Выбранная дата недействительна.\"\n};\nvar ru = { ui: ui33, validation: validation33 };\nvar ui34 = {\n  /**\n   * Shown on a button for adding additional items.\n   */\n  add: \"Pridať\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Odstrániť\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Odstrániť všetko\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Prepáčte, ale nie všetky polia sú vyplnené správne.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Odoslať\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Nebol vybraný žiadny súbor\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Posunúť hore\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Posunúť dole\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Načítavanie...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Načítať viac\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"Ďalšie\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"Predošlý\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Pridajte všetky hodnoty\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Pridajte vybrané hodnoty\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Odstrániť všetky hodnoty\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Odstrániť vybrané hodnoty\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Vyberte dátum\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Zmena dátumu\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Zavrieť\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Otvorené\"\n};\nvar validation34 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Prosím zaškrtnite ${name}.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} musí byť za ${date(args[0])}.`;\n    }\n    return `${sentence(name)} musí byť v budúcnosti.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} môže obsahovať iba písmená.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} môže obsahovať iba písmená a čísla.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} môže obsahovať iba písmená a medzery.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} musí obsahovať abecedné znaky.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} musí obsahovať písmená alebo číslice.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} musí obsahovať písmená alebo medzery.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} musí obsahovať symbol.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} musí obsahovať veľké písmená.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} musí obsahovať malé písmená.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} musí obsahovať čísla.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} musí byť symbol.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} môže obsahovať iba veľké písmená.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} môže obsahovať len malé písmená.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} musí byť pred ${date(args[0])}.`;\n    }\n    return `${sentence(name)} musí byť v minulosti.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Toto pole bolo nesprávne nakonfigurované a nemôže byť odoslané.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} musí byť medzi ${a} and ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} does not match.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} nie je platným dátumom, prosím, použite formát ${args[0]}`;\n    }\n    return \"Toto pole bolo nesprávne nakonfigurované a nemôže byť odoslané.\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} musí byť medzi ${date(args[0])} a ${date(args[1])}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Prosím, zadajte platnú emailovú adresu.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} nekončí na ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} nie je povolená hodnota.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} musí mať najmenej jeden znak.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} musí byť menšie alebo rovné ako ${max} znakov.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} by mala mať dĺžku ${max} znakov.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} musí byť väčšie alebo rovné ako ${min} znakov.`;\n    }\n    return `${sentence(name)} musí byť medzi ${min} až ${max} znakov.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} nie je povolená hodnota.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Nie je možné použiť viac než ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} musí byť menšie alebo rovné ako ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Nie sú povolené formáty súborov.\";\n    }\n    return `${sentence(name)} musí byť typu: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Nemôže byť menej než ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} musí byť minimálne ${args[0]}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” nie je povolené hodnota pre ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} musí byť číslo.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" alebo \")} je potrebný.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} je povinné.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} nezačíná s ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Zadajte platnú adresu URL.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Vybraný dátum je neplatný.\"\n};\nvar sk = { ui: ui34, validation: validation34 };\nvar ui35 = {\n  /**\n   * Shown on buttons for adding new items.\n   */\n  add: \"Dodaj\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Odstrani\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Odstrani vse\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Nekatera polja niso pravilno izpolnjena.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Pošlji\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Nobena datoteka ni izbrana\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Premakni se navzgor\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Premakni se navzdol\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Nalaganje...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Naloži več\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"Naslednji\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"Prejšnji\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Dodajte vse vrednosti\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Dodajanje izbranih vrednosti\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Odstranite vse vrednosti\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Odstrani izbrane vrednosti\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Izberite datum\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Spremeni datum\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Zapri\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Odpri\"\n};\nvar validation35 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Prosimo popravite ${name}.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} mora biti po ${date(args[0])}.`;\n    }\n    return `${sentence(name)} mora biti v prihodnosti.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} lahko vsebuje samo znake abecede.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} lahko vsebuje samo črke in številke.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} lahko vsebuje samo črke in presledke.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} mora vsebovati abecedne znake.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} mora vsebovati črke ali številke.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} mora vsebovati črke ali presledke.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} mora vsebovati simbol.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} mora vsebovati velike črke.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} mora vsebovati male črke.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} mora vsebovati številke.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} mora biti simbol.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} lahko vsebuje le velike črke.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} lahko vsebuje le male črke.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} mora biti pred ${date(args[0])}.`;\n    }\n    return `${sentence(name)} mora biti v preteklosti.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `To polje je narobe nastavljeno in ne mora biti izpolnjeno.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} mora biti med ${a} in ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} se ne ujema.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} ni pravilen datum, prosimo uporabite format ${args[0]}`;\n    }\n    return \"To polje je narobe nastavljeno in ne mora biti izpolnjeno.\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} mora biti med ${date(args[0])} in ${date(args[1])}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Vnesite veljaven e-poštni naslov.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} se mora kočati z ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} ni dovoljena vrednost.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} mora vsebovati vsaj en znak.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} mora vsebovati največ ${max} znakov.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} mora biti dolg ${max} znakov.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} mora vsebovati vsaj ${min} znakov.`;\n    }\n    return `${sentence(name)} mora vsebovati med ${min} in ${max} znakov.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} ni dovoljena vrednost.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Največ je ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} je lahko največ ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Nobena vrsta datoteke ni dovoljena.\";\n    }\n    return `${sentence(name)} mora biti tipa: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Najmanj ${args[0]} ${name} je dovoljenih.`;\n    }\n    return `${sentence(name)} mora biti vsaj ${args[0]}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” ni dovoljen(a/o) ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} mora biti številka.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" ali \")} zahtevan je.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} je zahtevan(o/a).`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} se mora začeti z ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Vnesite veljaven URL.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Izbrani datum je neveljaven.\"\n};\nvar sl = { ui: ui35, validation: validation35 };\nvar ui36 = {\n  /**\n   * Shown on a button for adding additional items.\n   */\n  add: \"Dodaj\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Ukloni\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Ukloni sve\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Pojedina polja nisu ispravno ispunjena.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Pošalji\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Fajl nije odabran\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Pomerite se gore\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Pomeri se dole\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Učitavanje...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Učitaj više\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"Sledeća\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"Prethodna\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Dodajte sve vrednosti\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Dodajte izabrane vrednosti\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Uklonite sve vrednosti\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Uklonite izabrane vrednosti\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Izaberite datum\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Promenite datum\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Zatvori\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Otvori\"\n};\nvar validation36 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Molimo prihvatite ${name}`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} mora biti posle ${date(args[0])}.`;\n    }\n    return `${sentence(name)} mora biti u budućnosti.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} može da sadrži samo abecedne znakove.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} može da sadrži samo slova i brojeve.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} može da sadrži samo slova i razmake.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} mora da sadrži abecedne znakove.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} mora da sadrži slova ili brojeve.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} mora da sadrži slova ili razmake.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} mora da sadrži simbol.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} mora da sadrži velika slova.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} mora da sadrži mala slova.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} mora da sadrži brojeve.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} mora biti simbol.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} može da sadrži samo velika slova.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} može da sadrži samo mala slova.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} mora biti pre ${date(args[0])}.`;\n    }\n    return `${sentence(name)} mora biti u prošlosti.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Ovo polje je pogrešno konfigurisano i ne može se poslati.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} mora biti između ${a} i ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} se ne podudara.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} nije važeći datum, molimo Vas koristite format ${args[0]}`;\n    }\n    return \"Ovo polje je pogrešno konfigurisano i ne može se poslati\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} mora biti između ${date(args[0])} i ${date(args[1])}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Unesite ispravnu e-mail adresu.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} se ne završava sa ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} nije dozvoljena vrednost`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} mora biti najmanje jedan karakter.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} mora biti manji ili jednaki od ${max} karaktera.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} treba da bude ${max} znakova dugačak.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} mora biti veći ili jednaki od ${min} karaktera.`;\n    }\n    return `${sentence(name)} mora biti između ${min} i ${max} karaktera.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} nije dozvoljena vrednost.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Ne može imati više od ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} mora biti manji ili jednaki od ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Nisu dozvoljeni formati datoteka.\";\n    }\n    return `${sentence(name)} mora biti tipa: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Ne može imati manje od ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} mora da ima najmanje ${args[0]}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” nije dozvoljeno ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} mora biti broj.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" или \")} потребан је.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} je obavezno polje.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} ne počinje sa ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Unesite važeću URL adresu.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Izabrani datum je nevažeći.\"\n};\nvar sr = { ui: ui36, validation: validation36 };\nvar ui37 = {\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Ta bort\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Ta bort alla\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Tyvärr är inte alla fält korrekt ifyllda\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Skicka\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Ingen fil vald\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Flytta upp\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Flytta ner\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Laddar...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Ladda mer\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"Nästa\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"Föregående\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Lägg till alla värden\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Lägg till valda värden\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Ta bort alla värden\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Ta bort valda värden\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Välj datum\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Ändra datum\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Stäng\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Öppna\"\n};\nvar validation37 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Var god acceptera ${name}.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} måste vara efter ${date(args[0])}.`;\n    }\n    return `${sentence(name)} måste vara framåt i tiden.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} kan enbart innehålla bokstäver i alfabetet.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} kan bara innehålla bokstäver och siffror.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} kan bara innehålla bokstäver och blanksteg.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} måste innehålla alfabetiska tecken.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} måste innehålla bokstäver eller siffror.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} måste innehålla bokstäver eller mellanslag.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} måste innehålla symbol.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} måste innehålla versaler.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} måste innehålla gemener.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} måste innehålla siffror.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} måste vara en symbol.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} kan bara innehålla versaler.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} kan bara innehålla små bokstäver.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} måste vara före ${date(args[0])}.`;\n    }\n    return `${sentence(name)} måste vara bakåt i tiden.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Det här fältet ställdes inte in korrekt och kan inte användas.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} måste vara mellan ${a} och ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} matchar inte.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} är inte ett giltigt datum, var god använd formatet ${args[0]}`;\n    }\n    return \"Det här fältet ställdes inte in korrekt och kan inte användas\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} måste vara mellan ${date(args[0])} och ${date(args[1])}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Var god fyll i en giltig e-postadress.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} slutar inte med ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} är inte ett godkänt värde.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} måste ha minst ett tecken.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} måste vara ${max} tecken eller färre.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} bör vara ${max} tecken långa.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} måste vara ${min} tecken eller fler.`;\n    }\n    return `${sentence(name)} måste vara mellan ${min} och ${max} tecken.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} är inte ett godkänt värde.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Kan inte ha mer än ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} måste vara ${args[0]} eller mindre.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Inga filtyper tillåtna.\";\n    }\n    return `${sentence(name)} måste vara av filtypen: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Kan inte ha mindre än ${args[0]} ${name}.`;\n    }\n    return `${sentence(name)} måste vara minst ${args[0]}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” är inte ett godkänt ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} måste vara en siffra.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" eller \")} krävs.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} är obligatoriskt.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} börjar inte med ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Ange en giltig URL.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Det valda datumet är ogiltigt.\"\n};\nvar sv = { ui: ui37, validation: validation37 };\n\n// packages/i18n/src/locales/tet.ts\nvar ui38 = {\n  /**\n   * Shown on a button for adding additional items.\n   */\n  add: \"Aumenta\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Hasai\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Hasai Hotu\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Deskulpa, iha informasaun neebe sala iha formuláriu\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Submete\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Seidauk hili file\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Muda ba leten\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Muda ba kotuk\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Hein lai...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Foti tan\",\n  /**\n   * Show on buttons that navigate state forward\n   */\n  next: \"Ba oin\",\n  /**\n   * Show on buttons that navigate state backward\n   */\n  prev: \"Ba kotuk\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Aumenta hotu\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Aumenta buat neebe hili ona\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Hasai hotu\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Hasai buat neebe hili ona\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Hili data\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Troka data\"\n};\nvar validation38 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Favor ida simu ${name}.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} tenki depoid ${date(args[0])}.`;\n    }\n    return `${sentence(name)} tenki iha futuru.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} bele uza letra deit.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} bele uza letra ka numeru deit.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} bele uza letra ka numeru deit.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} tenki antes ${date(args[0])}.`;\n    }\n    return `${sentence(name)} tenki antes ohin loron.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Informasaun nee la loos no la bele submete.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} tenki iha klaran entre ${a} no ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} la hanesan.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} la loos, favor ida hakerek tuir ${args[0]}`;\n    }\n    return \"Informasaun nee la loos no la bele submete.\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} tenki iha ${date(args[0])} no ${date(\n      args[1]\n    )} nia klaran`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Favor hakerek endresu email neebe loos.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} la remata ho ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `la bele uza ${sentence(name)}.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} tenki iha letra ida ka liu.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} tenki badak liu ${max} letra.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} tenki iha letra ${max}.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} tenki iha letra ${min} ka liu.`;\n    }\n    return `${sentence(name)} tenki iha letra ${min} too ${max}.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `la bele uza ${sentence(name)}.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `La bele iha ${args[0]} ka liu ${name}.`;\n    }\n    return `${sentence(name)} tenki kiik liu ka hanesan ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return `La bele simu 'format' ida.`;\n    }\n    return `${sentence(name)} tenki iha tipo: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Presiza ${args[0]} ${name} ka liu.`;\n    }\n    return `${name} tenki ${args[0]} ka liu.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `La bele uza “${value}” ba ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} tenki numeru.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `Presiza ${sentence(name)}.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} la komesa ho ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Favor hakerek URL neebe loos.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Data la loos.\"\n};\nvar tet = { ui: ui38, validation: validation38 };\nvar ui39 = {\n  /**\n   * Shown on a button for adding additional items.\n   */\n  add: \"Илова кардан\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Хориҷ кардан\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Ҳамаро хориҷ кунед\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Бубахшед, на ҳама майдонҳо дуруст пур карда шудаанд.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Пешниҳод кунед\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Ягон файл интихоб нашудааст\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Ба боло ҳаракат кунед\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Ба поён ҳаракат кунед\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Дар ҳоли боргузорӣ\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Бештар бор кунед\",\n  /**\n   * Show on buttons that navigate state forward\n   */\n  next: \"Баъдӣ\",\n  /**\n   * Show on buttons that navigate state backward\n   */\n  prev: \"Гузашта\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Ҳама арзишҳоро илова кунед\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Илова кардани арзишҳои интихобшуда\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Ҳама арзишҳоро хориҷ кунед\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Арзишҳои интихобшударо хориҷ кунед\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Сана интихоб кунед\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Тағйир додани сана\"\n};\nvar validation39 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Лутфан ${name}-ро қабул кунед`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} бояд пас аз ${date(args[0])} бошад.`;\n    }\n    return `${sentence(name)} бояд дар оянда бошад.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} метавонад танҳо аломатҳои алифборо дар бар гирад.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} метавонад танҳо ҳарфҳо ва рақамҳоро дар бар гирад.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} метавонад танҳо ҳарфҳо ва фосилаҳоро дар бар гирад.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} must contain alphabetical characters.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} must contain letters and numbers.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} must contain letters and spaces.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} must contain symbol.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} must contain uppercase.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} must contain lowercase.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} must contain number.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} can only contain symbol.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} can only contain uppercase.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} can only contain lowercase.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} бояд пеш аз ${date(args[0])} бошад.`;\n    }\n    return `${sentence(name)} бояд дар гузашта бошад.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Ин майдон нодуруст танзим шудааст ва онро пешниҳод кардан ғайриимкон аст.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} бояд дар байни ${a} ва ${b} бошад.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} мувофиқат намекунад.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} санаи дуруст нест, лутфан формати ${args[0]}-ро истифода баред`;\n    }\n    return \"Ин майдон нодуруст танзим шудааст ва онро пешниҳод кардан ғайриимкон аст\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} бояд дар байни ${date(args[0])} ва ${date(\n      args[1]\n    )} бошад`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Лутфан нишонаи имейли амалкунандаро ворид намоед.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} бо ${list(args)} ба охир намерасад.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} арзиши иҷозатдодашуда нест.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} бояд ҳадди аққал як аломат бошад.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} бояд аз ${max} аломат камтар ё баробар бошад.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} бояд ${max} аломат бошад.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} бояд аз ${min} аломат зиёд ё баробар бошад.`;\n    }\n    return `${sentence(name)} бояд дар байни ${min} ва ${max} аломат бошад.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} арзиши иҷозатдодашуда нест.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Зиёда аз ${args[0]} ${name} дошта наметавонад.`;\n    }\n    return `${sentence(name)} бояд аз ${args[0]} камтар ё баробар бошад.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Ягон формати файл иҷозат дода намешавад.\";\n    }\n    return `${sentence(name)} бояд чунин намуд бошад: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Камтар аз ${args[0]} ${name} дошта наметавонад.`;\n    }\n    return `${sentence(name)} бояд ҳадди аққал ${args[0]} бошад.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `\"${value}\" ${name} иҷозат дода намешавад.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} бояд рақам бошад.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" ё \")} зарур а`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} лозим аст.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} бо ${list(args)} оғоз намешавад.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Лутфан URL-и дурустро дохил кунед.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Санаи интихобшуда нодуруст аст.\"\n};\nvar tg = { ui: ui39, validation: validation39 };\nvar ui40 = {\n  /**\n   * Shown on buttons for adding new items.\n   */\n  add: \"เพิ่ม\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"เอาออก\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"เอาออกทั้งหมด\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"ขออภัย ข้อมูลบางช่องที่กรอกไม่ถูกต้อง\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"ส่ง\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"ยังไม่ได้เลือกไฟล์\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"เลื่อนขึ้น\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"เลื่อนลง\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"กำลังโหลด...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"โหลดเพิ่มเติม\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"ถัดไป\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"ก่อนหน้า\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"เพิ่มค่าทั้งหมด\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"เพิ่มค่าที่เลือก\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"ลบค่าทั้งหมด\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"ลบค่าที่เลือก\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"เลือกวันที่\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"เปลี่ยนวันที่\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"ปิด\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"เปิด\"\n};\nvar validation40 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `กรุณายอมรับ ${name}`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} จะต้องเป็นวันที่หลังจาก ${date(args[0])}`;\n    }\n    return `${sentence(name)} จะต้องเป็นวันที่ที่ยังไม่มาถึง`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} สามารถเป็นได้แค่ตัวอักษรเท่านั้น`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} สามารถเป็นได้แค่ตัวอักษรและตัวเลขเท่านั้น`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} สามารถเป็นได้แค่ตัวอักษรและเว้นวรรคเท่านั้น`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} ต้องมีตัวอักษรตัวอักษร`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} ต้องมีตัวอักษรหรือตัวเลข`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} ต้องมีตัวอักษรหรือช่องว่าง`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} ต้องมีสัญลักษณ์`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} ต้องมีตัวพิมพ์ใหญ่`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} ต้องมีตัวพิมพ์เล็ก`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} ต้องมีตัวเลข`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} จะต้องเป็นสัญลักษณ์`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} เท่านั้นที่สามารถมีตัวอักษรตัวพิมพ์ใหญ่`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} เท่านั้นที่สามารถมีตัวอักษรตัวพิมพ์เล็ก`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} จะต้องเป็นวันที่ที่มาก่อน ${date(args[0])}`;\n    }\n    return `${sentence(name)} จะต้องเป็นวันที่ที่ผ่านมาแล้ว`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `ช่องนี้ถูกตั้งค่าอย่างไม่ถูกต้อง และจะไม่สามารถส่งข้อมูลได้`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} จะต้องเป็นค่าระหว่าง ${a} และ ${b}`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} ไม่ตรงกัน`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} ไม่อยู่ในรูปแบบวันที่ที่ถูกต้อง กรุณากรอกตามรูปแบบ ${args[0]}`;\n    }\n    return \"ช่องนี้ถูกตั้งค่าอย่างไม่ถูกต้อง และจะไม่สามารถส่งข้อมูลได้\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} จะต้องเป็นวันที่ระหว่าง ${date(args[0])} และ ${date(\n      args[1]\n    )}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"กรุณากรอกที่อยู่อีเมลทีถูกต้อง\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} จะต้องลงท้ายด้วย ${list(args)}`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} ไม่ใช่ค่าที่อนุญาตให้กรอก`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} จะต้องมีความยาวอย่างน้อยหนึ่งตัวอักษร`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} จะต้องมีความยาวไม่เกิน ${max} ตัวอักษร`;\n    }\n    if (min === max) {\n      return `${sentence(name)} ควรจะเป็น ${max} ตัวอักษรยาว`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} จะต้องมีความยาว ${min} ตัวอักษรขึ้นไป`;\n    }\n    return `${sentence(name)} จะต้องมีความยาวระหว่าง ${min} และ ${max} ตัวอักษร`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} ไม่ใช่ค่าที่อนุญาตให้กรอก`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `ไม่สามารถเลือกมากกว่า ${args[0]} ${name} ได้`;\n    }\n    return `${sentence(name)} จะต้องมีค่าไม่เกิน ${args[0]}`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"ไม่มีประเภทของไฟล์ที่อนุญาต\";\n    }\n    return `${sentence(name)} จะต้องเป็นไฟล์ประเภท ${args[0]} เท่านั้น`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `ไม่สามารถเลือกน้อยกว่า ${args[0]} ${name} ได้`;\n    }\n    return `${sentence(name)} จะต้องมีค่าอย่างน้อย ${args[0]}`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” ไม่ใช่ค่า ${name} ที่อนุญาตให้กรอก`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} จะต้องเป็นตัวเลขเท่านั้น`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" หรือ \")} ต้องการ.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `กรุณากรอก ${sentence(name)}`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} จะต้องเริ่มต้นด้วย ${list(args)}`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `กรุณาระบุที่อยู่ลิงก์ให้ถูกต้อง`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"วันที่ที่เลือกไม่ถูกต้อง\"\n};\nvar th = { ui: ui40, validation: validation40 };\nvar ui41 = {\n  /**\n   * Shown on buttons for adding new items.\n   */\n  add: \"Ekle\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Kaldır\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Hepsini kaldır\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Maalesef, tüm alanlar doğru doldurulmadı.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Gönder\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Dosya yok\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Yukarı Taşı\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Aşağı taşı\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Yükleniyor...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Daha fazla yükle\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"Sonraki\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"Önceki\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Tüm değerleri ekle\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Seçili değerleri ekle\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Tüm değerleri kaldır\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Seçili değerleri kaldır\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Tarih seçin\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Tarihi değiştir\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Kapat\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Açık\"\n};\nvar validation41 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Lütfen ${name}'yi kabul edin.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} ${date(args[0])}'den sonra olmalıdır.`;\n    }\n    return `${sentence(name)} gelecekte bir zaman olmalıdır.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} sadece alfabetik karakterler içerebilir.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} sadece alfabetik karakterler ve sayı içerebilir.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} yalnızca harf ve boşluk içerebilir.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} alfabetik karakterler içermelidir.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} harf veya rakamı içermelidir.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} harf veya boşluk içermelidir.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} sembol içermelidir.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} büyük harf içermelidir.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} küçük harf içermelidir.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} sayı içermelidir.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} bir sembol olmalıdır.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} yalnızca büyük harfler içerebilir.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} yalnızca küçük harfler içerebilir.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} ${date(args[0])} tarihinden önce olmalı.`;\n    }\n    return `${sentence(name)} geçmişte olmalı.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Alan yanlış yapılandırılmış ve gönderilemez.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} ${a} ve ${b} aralığında olmalı.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} eşleşmiyor.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} geçerli bir tarih değil, lütfen ${args[0]} biçimini kullanın.`;\n    }\n    return \"Alan yanlış yapılandırılmış ve gönderilemez.\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)}, ${date(args[0])} ve ${date(args[1])} aralığında olmalı.`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Lütfen geçerli bir e-mail adresi girin.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} ${list(args)} ile bitmiyor.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} izin verilen bir değer değil.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} en azından bir karakter uzunluğunda olmalı.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} ${max}'e eşit veya daha küçük olmalı.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} ${max} karakter uzunluğunda olmalıdır.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} ${min}'e eşit veya daha büyük olmalı.`;\n    }\n    return `${sentence(name)}, ${min} ve ${max} karakter uzunluğu aralığında olmalı.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} izin verilen bir değer değil.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `${name}'in uzunluğu ${args[0]}'dan daha uzun olamaz.`;\n    }\n    return `${sentence(name)} en azından ${args[0]} uzunluğunda veya ona eşit olmalı.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Hiçbir dosya türüne izin verilmez.\";\n    }\n    return `${sentence(name)} şu tiplerden biri olmalı: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `${name}'in uzunluğu ${args[0]}'dan daha kısa olamaz.`;\n    }\n    return `${sentence(name)} en azından ${args[0]} uzunluğunda olmalı.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” ${name} olamaz.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} sayı olmalı.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" veya \")} gereklidir.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} gerekli.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} ${list(args)} ile başlamıyor.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Lütfen geçerli bir URL girin.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Seçilen tarih geçersiz.\"\n};\nvar tr = { ui: ui41, validation: validation41 };\nvar ui42 = {\n  /**\n   * Shown on a button for adding additional items.\n   */\n  add: \"Додати\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Видалити\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Видалити все\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Вибачте, не всі поля заповнені правильно.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Відправити\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Файл не вибрано\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Рухатися вгору\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Пересунути вниз\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Завантаження...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Завантажте більше\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"Наступний\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"Попередній\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Додати всі значення\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Додати вибрані значення\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Вилучити всі значення\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Вилучити вибрані значення\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Виберіть дату\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Змінити дату\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Закрити\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Відкрити\"\n};\nvar validation42 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Будь ласка, прийміть ${name}.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `Дата ${sentence(name)} повинна бути пізніше за ${date(args[0])}.`;\n    }\n    return `Дата ${sentence(name)} має бути в майбутньому.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `Поле ${sentence(name)} може містити лише літери.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `Поле ${sentence(name)} може містити лише літери та цифри.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `Поле ${sentence(name)} може містити лише літери та пробіли.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} повинен містити алфавітні символи.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} повинен містити букви або цифри.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} повинен містити літери або пробіли.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} повинен містити символ.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} повинен містити великі регістри.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} повинен містити малі регістри.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} повинен містити цифри.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} має бути символом.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} може містити лише великі літери.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} може містити лише малі літери.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `Дата ${sentence(name)} повинна бути раніше за ${date(args[0])}.`;\n    }\n    return `Дата ${sentence(name)} повинна бути в минулому.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Це поле заповнено неправильно і не може бути надіслано.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `Поле ${sentence(name)} повинно бути між ${a} та ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `Поле ${sentence(name)} не збігається.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `Поле ${sentence(\n        name\n      )} має неправильну дату. Будь ласка, використовуйте формат ${args[0]}.`;\n    }\n    return \"Це поле заповнено неправильно і не може бути надіслано.\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `Дата ${sentence(name)} повинна бути між ${date(args[0])} та ${date(\n      args[1]\n    )}.`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Будь ласка, введіть дійсну електронну адресу.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `Поле ${sentence(name)} не повинно закінчуватися на ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `Поле ${sentence(name)} має неприпустиме значення.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `Поле ${sentence(name)} має містити щонайменше один символ.`;\n    }\n    if (min == 0 && max) {\n      return `Довжина поля ${sentence(\n        name\n      )} повинна бути меншою або дорівнювати ${max} символам.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} має бути довжиною ${max} символів.`;\n    }\n    if (min && max === Infinity) {\n      return `Довжина поля ${sentence(\n        name\n      )} повинна бути більшою або дорівнювати ${min} символам.`;\n    }\n    return `Довжина поля ${sentence(\n      name\n    )} повинна бути між ${min} та ${max} символами.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `Поле ${sentence(name)} має неприпустиме значення.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Не може бути вибрано більше ніж ${args[0]} ${name}.`;\n    }\n    return `Поле ${sentence(name)} має бути менше або дорівнювати ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Не вказано дозволені типи файлів.\";\n    }\n    return `Тип файлу в полі ${sentence(name)} має бути: ${args[0]}.`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `Не може бути вибрано менше ніж ${args[0]} ${name}.`;\n    }\n    return `Поле ${sentence(name)} має бути не менше ніж ${args[0]}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” не дозволено в полі ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `Поле ${sentence(name)} має бути числом.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" або \")} потрібно.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `Поле ${sentence(name)} є обов'язковим.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `Поле ${sentence(name)} має починатися з ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Будь ласка, введіть коректну URL-адресу.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Вибрана дата недійсна.\"\n};\nvar uk = { ui: ui42, validation: validation42 };\nvar ui43 = {\n  /**\n   * Shown on a button for adding additional items.\n   */\n  add: \"Qo'shish\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"O'chirish\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Hammasini o'chirish\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Kechirasiz, barcha maydonlar to'g'ri to'ldirilmagan.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Yuborish\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Hech qanday fayl tanlanmagan\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Yuqoriga ko’taring\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Pastga siljish\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Yuklanmoqda...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Ko’proq yuklang\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"Keyingi\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"Oldingi\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: `Barcha qiymatlarni qo'shish`,\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: `Tanlangan qiymatlarni qoʻshish`,\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Barcha qiymatlarni olib tashlang\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Tanlangan qiymatlarni olib tashlash\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Sanani tanlang\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: `O'zgartirish sanasi`,\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Yopish\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Ochiq\"\n};\nvar validation43 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `${name} ni qabul qiling.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} ${date(args[0])} dan keyin bo'lishi kerak.`;\n    }\n    return `${sentence(name)} kelajakda bo'lishi kerak.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(\n      name\n    )} faqat alifbo tartibidagi belgilardan iborat bo'lishi mumkin.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} faqat harflar va raqamlardan iborat bo'lishi mumkin.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} faqat harf va bo'shliqlardan iborat bo'lishi mumkin.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} alfavit belgilarini o'z ichiga olishi kerak.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} harflar yoki raqamlarni o'z ichiga olishi kerak.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} harflar yoki bo'shliqlar bo'lishi kerak.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} belgisi bo'lishi kerak.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} katta harfni o'z ichiga olishi kerak.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} kichik harflarni o'z ichiga olishi kerak.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} raqamlarini o'z ichiga olishi kerak.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} belgisi bo'lishi kerak.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} faqat katta harflarni o'z ichiga olishi mumkin.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} faqat kichik harflarni o'z ichiga olishi mumkin.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} ${date(args[0])} dan oldin bo'lishi kerak`;\n    }\n    return `${sentence(name)} o'tmishda bo'lishi kerak.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Bu maydon noto'g'ri sozlangan va uni yuborib bo'lmaydi.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} ${a} va ${b} orasida bo'lishi kerak.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} mos emas.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} haqiqiy sana emas, iltimos ${args[0]} formatidan foydalaning`;\n    }\n    return \"Bu maydon noto'g'ri sozlangan va uni yuborib bo'lmaydi\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} ${date(args[0])} va ${date(\n      args[1]\n    )} oralig'ida bo'lishi kerak`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Iltimos amaldagi e-mail manzilingizni kiriting.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} ${list(args)} bilan tugamaydi.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} ruxsat etilgan qiymat emas.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} kamida bitta belgidan iborat bo'lishi kerak.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} ${max} ta belgidan kam yoki teng bo'lishi kerak.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} bo'lishi kerak ${max} belgilar uzun.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} ${min} ta belgidan ko'p yoki teng bo'lishi kerak.`;\n    }\n    return `${sentence(\n      name\n    )} ${min} va ${max} gacha belgilardan iborat bo'lishi kerak.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} ruxsat etilgan qiymat emas.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `${args[0]} ${name} dan ortiq bo'lishi mumkin emas.`;\n    }\n    return `${sentence(name)} ${args[0]} dan kichik yoki teng bo'lishi kerak.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Fayl formatlariga ruxsat berilmagan.\";\n    }\n    return `${sentence(name)} quyidagi turdagi bo'lishi kerak: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `${args[0]} ${name} dan kam bo'lmasligi kerak.`;\n    }\n    return `${sentence(name)} kamida ${args[0]} bo'lishi kerak.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `\"${value}\" ruxsat berilmagan ${name}.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} raqam bo'lishi kerak.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" yoki \")} kerak.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} talab qilinadi.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} ${list(args)} bilan boshlanmaydi.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Iltimos, tegishli URL manzilini kiriting.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Tanlangan sana yaroqsiz.\"\n};\nvar uz = { ui: ui43, validation: validation43 };\nvar ui44 = {\n  /**\n   * Shown on buttons for adding new items.\n   */\n  add: \"Thêm\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"Xoá\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"Xoá tất cả\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"Xin lỗi, không phải tất cả các trường đều được nhập đúng.\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"Gửi\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"Chưa chọn file\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"Di chuyển lên\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"Di chuyển xuống\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"Đang tải...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"Tải thêm\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"Tiếp\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"Trước\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"Thêm tất cả các giá trị\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"Thêm các giá trị đã chọn\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"Loại bỏ tất cả các giá trị\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"Loại bỏ các giá trị đã chọn\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"Chọn ngày\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"Thay đổi ngày\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"Đóng\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"Mở\"\n};\nvar validation44 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `Hãy đồng ý với ${name}.`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} phải sau ${date(args[0])}.`;\n    }\n    return `${sentence(name)} phải trong tương lai.`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} có thể chỉ bao gồm các chữ cái alphabet.`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} có thể chỉ bao gồm các chữ cái và chữ số.`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} chỉ có thể chứa các chữ cái và khoảng trắng.`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} phải chứa các ký tự chữ cái.`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} phải chứa chữ cái hoặc số.`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} phải chứa chữ cái hoặc dấu cách.`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} phải chứa ký hiệu.`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} phải chứa chữ hoa.`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} phải chứa chữ thường.`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} phải chứa số.`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} phải là một ký hiệu.`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} chỉ có thể chứa chữ hoa.`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} chỉ có thể chứa chữ thường.`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} phải trước ${date(args[0])}.`;\n    }\n    return `${sentence(name)} phải trong quá khứ.`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `Trường này đã được thiết lập sai và không thể gửi.`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} phải ở giữa ${a} và ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} không khớp.`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} không phải ngày hợp lệ, hãy sử dụng định dạng ${args[0]}`;\n    }\n    return \"Trường này đã được thiết lập sai và không thể gửi.\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} phải ở giữa khoảng từ ${date(args[0])} đến ${date(\n      args[1]\n    )}.`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"Hãy nhập một địa chỉ email hợp lệ.\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} không kết thúc với ${list(args)}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} không phải một giá trị được cho phép.`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} phải có độ dài tối thiểu một ký tự.`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} phải có độ dài tối đa ${max} ký tự.`;\n    }\n    if (min === max) {\n      return `${sentence(name)} nên dài ${max} ký tự.`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} phải có độ dài tối thiểu ${min} ký tự.`;\n    }\n    return `${sentence(\n      name\n    )} phải có độ dài tối đa trong khoảng từ ${min} đến ${max} ký tự.`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} không phải một giá trị được cho phép.`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `${name} không thể lớn hơn ${args[0]}.`;\n    }\n    return `${sentence(name)} phải tối đa bằng ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"Định dạng tệp tin này không được phép.\";\n    }\n    return `${sentence(name)} phải là một trong các dạng: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `${name} không thể nhỏ hơn ${args[0]}.`;\n    }\n    return `${sentence(name)} phải tối thiểu bằng ${args[0]}.`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `\"${value}\" không phải giá trị ${name} được phép.`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} phải là một số.`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\" hoặc \")} cần có.`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} là bắt buộc.`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} không bắt đầu với ${list(args)}.`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `Vui lòng nhập một URL hợp lệ.`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"Ngày đã chọn không hợp lệ.\"\n};\nvar vi = { ui: ui44, validation: validation44 };\nvar ui45 = {\n  /**\n   * Shown on a button for adding additional items.\n   */\n  add: \"添加\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"移除\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"移除全部\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"抱歉，部分字段未被正确填写。\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"提交\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"未选择文件\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"上移\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"下移\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"加载中...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"加载更多\",\n  /**\n   * Shown on buttons that navigate state forward\n   */\n  next: \"下一步\",\n  /**\n   * Shown on buttons that navigate state backward\n   */\n  prev: \"上一步\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"添加所有值\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"添加所选值\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"移除所有值\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"移除所选值\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"选择日期\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"更改日期\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"关闭\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"打开\"\n};\nvar validation45 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `请接受${name}。`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)}必须晚于${date(args[0])}。`;\n    }\n    return `${sentence(name)}必须是未来的日期。`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)}只能包含英文字母。`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)}只能包含字母和数字。`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)}只能包含字母和空格。`;\n  },\n  /**\n   * The value have no letter.\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha}\n   */\n  contains_alpha({ name }) {\n    return `${sentence(name)} 必须包含字母字符`;\n  },\n  /**\n   * The value have no alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#contains_alphanumeric}\n   */\n  contains_alphanumeric({ name }) {\n    return `${sentence(name)} 必须包含字母或数字。`;\n  },\n  /**\n   * The value have no letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#contains_alpha-spaces}\n   */\n  contains_alpha_spaces({ name }) {\n    return `${sentence(name)} 必须包含字母或空格。`;\n  },\n  /**\n   * The value have no symbol\n   * @see {@link https://formkit.com/essentials/validation#contains_symbol}\n   */\n  contains_symbol({ name }) {\n    return `${sentence(name)} 必须包含符号。`;\n  },\n  /**\n   * The value have no uppercase\n   * @see {@link https://formkit.com/essentials/validation#contains_uppercase}\n   */\n  contains_uppercase({ name }) {\n    return `${sentence(name)} 必须包含大写字母。`;\n  },\n  /**\n   * The value have no lowercase\n   * @see {@link https://formkit.com/essentials/validation#contains_lowercase}\n   */\n  contains_lowercase({ name }) {\n    return `${sentence(name)} 必须包含小写字母。`;\n  },\n  /**\n   *  The value have no numeric\n   * @see {@link https://formkit.com/essentials/validation#contains_numeric}\n   */\n  contains_numeric({ name }) {\n    return `${sentence(name)} 必须包含数字。`;\n  },\n  /**\n   * The value is not symbol\n   * @see {@link https://formkit.com/essentials/validation#symbol}\n   */\n  symbol({ name }) {\n    return `${sentence(name)} 必须是符号。`;\n  },\n  /**\n   * The value is not uppercase\n   * @see {@link https://formkit.com/essentials/validation#uppercase}\n   */\n  uppercase({ name }) {\n    return `${sentence(name)} 只能包含大写字母。`;\n  },\n  /**\n   * The value is not lowercase\n   * @see {@link https://formkit.com/essentials/validation#lowercase}\n   */\n  lowercase({ name }) {\n    return `${sentence(name)} 只能包含小写字母。`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)}必须早于${date(args[0])}。`;\n    }\n    return `${sentence(name)}必须是过去的日期。`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `该字段未被正确设置而无法提交。`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)}必须在${a}和${b}之间。`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)}不匹配。`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)}不是合法日期，请使用 ${args[0]} 格式`;\n    }\n    return \"该字段未被正确设置而无法提交\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)}必须在${date(args[0])}和${date(args[1])}之间`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"请输入合法的电子邮件地址。\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)}必须以${list(args)}结尾。`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)}是不允许的。`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)}至少要有一个字符。`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)}必须少于或等于${max}个字符。`;\n    }\n    if (min === max) {\n      return `${sentence(name)}必须包含${max}个字符。`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)}必须多于或等于${min}个字符。`;\n    }\n    return `${sentence(name)}必须介于${min}和${max}个字符之间。`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)}是不允许的。`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `${name}不得多于${args[0]}个值。`;\n    }\n    return `${name}不得大于${args[0]}。`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"没有允许的文件格式。\";\n    }\n    return `${sentence(name)}的类型必须为：${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `${name}不得少于${args[0]}个值。`;\n    }\n    return `${sentence(name)}不得小于${args[0]}。`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `\"${value}\"不是一个合法的${name}。`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)}必须为数字。`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\"或\")}${labels}需要。`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)}不得留空。`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)}必须以${list(args)}开头。`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `请输入有效的 URL。`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"所选日期无效。\"\n};\nvar zh = { ui: ui45, validation: validation45 };\nvar ui46 = {\n  /**\n   * Shown on a button for adding additional items.\n   */\n  add: \"新增\",\n  /**\n   * Shown when a button to remove items is visible.\n   */\n  remove: \"移除\",\n  /**\n   * Shown when there are multiple items to remove at the same time.\n   */\n  removeAll: \"移除全部\",\n  /**\n   * Shown when all fields are not filled out correctly.\n   */\n  incomplete: \"很抱歉，部分欄位填寫錯誤\",\n  /**\n   * Shown in a button inside a form to submit the form.\n   */\n  submit: \"提交\",\n  /**\n   * Shown when no files are selected.\n   */\n  noFiles: \"尚未選取檔案\",\n  /**\n   * Shown on buttons that move fields up in a list.\n   */\n  moveUp: \"上移\",\n  /**\n   * Shown on buttons that move fields down in a list.\n   */\n  moveDown: \"下移\",\n  /**\n   * Shown when something is actively loading.\n   */\n  isLoading: \"載入中...\",\n  /**\n   * Shown when there is more to load.\n   */\n  loadMore: \"載入更多\",\n  /**\n   * Show on buttons that navigate state forward\n   */\n  next: \"下一個\",\n  /**\n   * Show on buttons that navigate state backward\n   */\n  prev: \"上一個\",\n  /**\n   * Shown when adding all values.\n   */\n  addAllValues: \"加入全部的值\",\n  /**\n   * Shown when adding selected values.\n   */\n  addSelectedValues: \"加入選取的值\",\n  /**\n   * Shown when removing all values.\n   */\n  removeAllValues: \"移除全部的值\",\n  /**\n   * Shown when removing selected values.\n   */\n  removeSelectedValues: \"移除選取的值\",\n  /**\n   * Shown when there is a date to choose.\n   */\n  chooseDate: \"選擇日期\",\n  /**\n   * Shown when there is a date to change.\n   */\n  changeDate: \"變更日期\",\n  /**\n   * Shown when there is something to close\n   */\n  close: \"關閉\",\n  /**\n   * Shown when there is something to open.\n   */\n  open: \"開放\"\n};\nvar validation46 = {\n  /**\n   * The value is not an accepted value.\n   * @see {@link https://formkit.com/essentials/validation#accepted}\n   */\n  accepted({ name }) {\n    return `請接受 ${name}`;\n  },\n  /**\n   * The date is not after\n   * @see {@link https://formkit.com/essentials/validation#date-after}\n   */\n  date_after({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} 必須晚於 ${date(args[0])}`;\n    }\n    return `${sentence(name)} 必須晚於今日`;\n  },\n  /**\n   * The value is not a letter.\n   * @see {@link https://formkit.com/essentials/validation#alpha}\n   */\n  alpha({ name }) {\n    return `${sentence(name)} 欄位儘能填寫英文字母`;\n  },\n  /**\n   * The value is not alphanumeric\n   * @see {@link https://formkit.com/essentials/validation#alphanumeric}\n   */\n  alphanumeric({ name }) {\n    return `${sentence(name)} 欄位僅能填寫英文字母與數字`;\n  },\n  /**\n   * The value is not letter and/or spaces\n   * @see {@link https://formkit.com/essentials/validation#alpha-spaces}\n   */\n  alpha_spaces({ name }) {\n    return `${sentence(name)} 欄位儘能填寫英文字母與空白`;\n  },\n  /**\n   * The date is not before\n   * @see {@link https://formkit.com/essentials/validation#date-before}\n   */\n  date_before({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} 必須早於 ${date(args[0])}.`;\n    }\n    return `${sentence(name)} 必須早於今日`;\n  },\n  /**\n   * The value is not between two numbers\n   * @see {@link https://formkit.com/essentials/validation#between}\n   */\n  between({ name, args }) {\n    if (isNaN(args[0]) || isNaN(args[1])) {\n      return `欄位值錯誤，無法提交`;\n    }\n    const [a, b] = order(args[0], args[1]);\n    return `${sentence(name)} 必須介於 ${a} 和 ${b}.`;\n  },\n  /**\n   * The confirmation field does not match\n   * @see {@link https://formkit.com/essentials/validation#confirm}\n   */\n  confirm({ name }) {\n    return `${sentence(name)} 與目標不一致`;\n  },\n  /**\n   * The value is not a valid date\n   * @see {@link https://formkit.com/essentials/validation#date-format}\n   */\n  date_format({ name, args }) {\n    if (Array.isArray(args) && args.length) {\n      return `${sentence(name)} 不是有效的日期，請使用 ${args[0]} 格式`;\n    }\n    return \"欄位值錯誤，無法提交\";\n  },\n  /**\n   * Is not within expected date range\n   * @see {@link https://formkit.com/essentials/validation#date-between}\n   */\n  date_between({ name, args }) {\n    return `${sentence(name)} 必須介於 ${date(args[0])} 和 ${date(args[1])}`;\n  },\n  /**\n   * Shown when the user-provided value is not a valid email address.\n   * @see {@link https://formkit.com/essentials/validation#email}\n   */\n  email: \"請輸入有效的 email\",\n  /**\n   * Does not end with the specified value\n   * @see {@link https://formkit.com/essentials/validation#ends-with}\n   */\n  ends_with({ name, args }) {\n    return `${sentence(name)} 的結尾必須是 ${list(args)}`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#is}\n   */\n  is({ name }) {\n    return `${sentence(name)} 欄位的值不合規則`;\n  },\n  /**\n   * Does not match specified length\n   * @see {@link https://formkit.com/essentials/validation#length}\n   */\n  length({ name, args: [first = 0, second = Infinity] }) {\n    const min = Number(first) <= Number(second) ? first : second;\n    const max = Number(second) >= Number(first) ? second : first;\n    if (min == 1 && max === Infinity) {\n      return `${sentence(name)} 欄位必須至少包含一個字`;\n    }\n    if (min == 0 && max) {\n      return `${sentence(name)} 的字數必須小於等於 ${max}`;\n    }\n    if (min === max) {\n      return `${sentence(name)} 的字數必須為 ${max}`;\n    }\n    if (min && max === Infinity) {\n      return `${sentence(name)} 的字數必須大於等於 ${min}`;\n    }\n    return `${sentence(name)} 的字數必須介於 ${min} 和 ${max}`;\n  },\n  /**\n   * Value is not a match\n   * @see {@link https://formkit.com/essentials/validation#matches}\n   */\n  matches({ name }) {\n    return `${sentence(name)} 欄位的值無效`;\n  },\n  /**\n   * Exceeds maximum allowed value\n   * @see {@link https://formkit.com/essentials/validation#max}\n   */\n  max({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `不能超過 ${args[0]} 個 ${name}.`;\n    }\n    return `${sentence(name)} 必須小於等於 ${args[0]}.`;\n  },\n  /**\n   * The (field-level) value does not match specified mime type\n   * @see {@link https://formkit.com/essentials/validation#mime}\n   */\n  mime({ name, args }) {\n    if (!args[0]) {\n      return \"非有效的檔案格式\";\n    }\n    return `${sentence(name)} 可接受的檔案格式為: ${args[0]}`;\n  },\n  /**\n   * Does not fulfill minimum allowed value\n   * @see {@link https://formkit.com/essentials/validation#min}\n   */\n  min({ name, node: { value }, args }) {\n    if (Array.isArray(value)) {\n      return `不可少於 ${args[0]} 個 ${name}`;\n    }\n    return `${name} 必須大於等於 ${args[0]}`;\n  },\n  /**\n   * Is not an allowed value\n   * @see {@link https://formkit.com/essentials/validation#not}\n   */\n  not({ name, node: { value } }) {\n    return `“${value}” 不是 ${name} 欄位可接受的值`;\n  },\n  /**\n   *  Is not a number\n   * @see {@link https://formkit.com/essentials/validation#number}\n   */\n  number({ name }) {\n    return `${sentence(name)} 欄位必須是數字`;\n  },\n  /**\n   * Require one field.\n   * @see {@link https://formkit.com/essentials/validation#require-one}\n   */\n  require_one: ({ name, node, args: inputNames }) => {\n    const labels = inputNames.map((name2) => {\n      const dependentNode = node.at(name2);\n      if (dependentNode) {\n        return createMessageName(dependentNode);\n      }\n      return false;\n    }).filter((name2) => !!name2);\n    labels.unshift(name);\n    return `${labels.join(\"或\")}${labels}需要。`;\n  },\n  /**\n   * Required field.\n   * @see {@link https://formkit.com/essentials/validation#required}\n   */\n  required({ name }) {\n    return `${sentence(name)} 是必要欄位`;\n  },\n  /**\n   * Does not start with specified value\n   * @see {@link https://formkit.com/essentials/validation#starts-with}\n   */\n  starts_with({ name, args }) {\n    return `${sentence(name)} 的開頭必須是 ${list(args)}`;\n  },\n  /**\n   * Is not a url\n   * @see {@link https://formkit.com/essentials/validation#url}\n   */\n  url() {\n    return `請輸入有效的 url`;\n  },\n  /**\n   * Shown when the date is invalid.\n   */\n  invalidDate: \"選取的日期無效\"\n};\nvar zhTW = { ui: ui46, validation: validation46 };\nvar i18nNodes = /* @__PURE__ */ new Set();\nfunction createI18nPlugin(registry) {\n  return function i18nPlugin(node) {\n    i18nNodes.add(node);\n    node.on(\"destroying\", () => i18nNodes.delete(node));\n    let localeKey = parseLocale(node.config.locale, registry);\n    let locale = localeKey ? registry[localeKey] : {};\n    node.on(\"prop:locale\", ({ payload: lang }) => {\n      localeKey = parseLocale(lang, registry);\n      locale = localeKey ? registry[localeKey] : {};\n      node.store.touch();\n    });\n    node.on(\"prop:label\", () => node.store.touch());\n    node.on(\"prop:validationLabel\", () => node.store.touch());\n    node.hook.text((fragment, next) => {\n      const key = fragment.meta?.messageKey || fragment.key;\n      if (has(locale, fragment.type) && has(locale[fragment.type], key)) {\n        const t = locale[fragment.type][key];\n        if (typeof t === \"function\") {\n          fragment.value = Array.isArray(fragment.meta?.i18nArgs) ? t(...fragment.meta.i18nArgs) : t(fragment);\n        } else {\n          fragment.value = t;\n        }\n      }\n      return next(fragment);\n    });\n  };\n}\nfunction parseLocale(locale, availableLocales) {\n  if (has(availableLocales, locale)) {\n    return locale;\n  }\n  const [lang] = locale.split(\"-\");\n  if (has(availableLocales, lang)) {\n    return lang;\n  }\n  for (const locale2 in availableLocales) {\n    return locale2;\n  }\n  return false;\n}\nfunction changeLocale(locale) {\n  for (const node of i18nNodes) {\n    node.config.locale = locale;\n  }\n}\n\n// packages/i18n/src/index.ts\nvar locales = {\n  ar,\n  az,\n  bg,\n  bs,\n  ca,\n  cs,\n  da,\n  de,\n  el,\n  en,\n  es,\n  fa,\n  fi,\n  fr,\n  fy,\n  he,\n  hr,\n  hu,\n  id,\n  it,\n  ja,\n  kk,\n  ko,\n  lt,\n  lv,\n  nb,\n  nl,\n  pl,\n  pt,\n  ro,\n  ru,\n  sk,\n  sl,\n  sr,\n  sv,\n  tet,\n  tg,\n  th,\n  tr,\n  uk,\n  uz,\n  vi,\n  zh,\n  \"zh-TW\": zhTW,\n  is,\n  mn\n};\n\nexport { ar, az, bg, bs, ca, changeLocale, createI18nPlugin, cs, da, date, de, el, en, es, fa, fi, fr, fy, he, hr, hu, id, is, it, ja, kk, ko, list, locales, lt, lv, mn, nb, nl, order, pl, pt, ro, ru, sentence, sk, sl, sr, sv, tet, tg, th, tr, uk, uz, vi, zh, zhTW };\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=index.mjs.map",
      "start": 1709718916284,
      "end": 1709718916362,
      "sourcemaps": null
    },
    {
      "name": "unplugin-formkit",
      "start": 1709718916362,
      "end": 1709718916363,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709718916363,
      "end": 1709718916363,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709718916363,
      "end": 1709718916363,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709718916363,
      "end": 1709718916363,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709718916363,
      "end": 1709718916363,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709718916363,
      "end": 1709718916363,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709718916363,
      "end": 1709718916363,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709718916363,
      "end": 1709718916363,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709718916363,
      "end": 1709718916363,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709718916363,
      "end": 1709718916363,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709718916363,
      "end": 1709718916363,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709718916363,
      "end": 1709718916363,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709718916363,
      "end": 1709718916363,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709718916363,
      "end": 1709718916363,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709718916363,
      "end": 1709718916363,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709718916363,
      "end": 1709718916363,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709718916363,
      "end": 1709718916364,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709718916364,
      "end": 1709718916364,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709718916364,
      "end": 1709718916364,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709718916364,
      "end": 1709718916364,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709718916364,
      "end": 1709718916365,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709718916365,
      "end": 1709718916365,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709718916365,
      "end": 1709718916365,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709718916365,
      "end": 1709718916365,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709718916365,
      "end": 1709718916365,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709718916365,
      "end": 1709718916365,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709718916365,
      "end": 1709718916366,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709718916366,
      "end": 1709718916366,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709718916366,
      "end": 1709718916366,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1709718916366,
      "end": 1709718916366,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709718916366,
      "end": 1709718916366,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709718916366,
      "end": 1709718916366,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709718916366,
      "end": 1709718916366,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709718916366,
      "end": 1709718916367,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709718916367,
      "end": 1709718916367,
      "order": "normal"
    }
  ]
}
