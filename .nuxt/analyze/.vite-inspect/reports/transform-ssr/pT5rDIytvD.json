{
  "resolvedId": "/Users/sebastianwessel/projekte/voyage/node_modules/element-plus/es/components/upload/src/ajax.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { isNil } from 'lodash-unified';\nimport '../../../utils/index.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nimport { isArray } from '@vue/shared';\n\nconst SCOPE = \"ElUpload\";\nclass UploadAjaxError extends Error {\n  constructor(message, status, method, url) {\n    super(message);\n    this.name = \"UploadAjaxError\";\n    this.status = status;\n    this.method = method;\n    this.url = url;\n  }\n}\nfunction getError(action, option, xhr) {\n  let msg;\n  if (xhr.response) {\n    msg = `${xhr.response.error || xhr.response}`;\n  } else if (xhr.responseText) {\n    msg = `${xhr.responseText}`;\n  } else {\n    msg = `fail to ${option.method} ${action} ${xhr.status}`;\n  }\n  return new UploadAjaxError(msg, xhr.status, option.method, action);\n}\nfunction getBody(xhr) {\n  const text = xhr.responseText || xhr.response;\n  if (!text) {\n    return text;\n  }\n  try {\n    return JSON.parse(text);\n  } catch (e) {\n    return text;\n  }\n}\nconst ajaxUpload = (option) => {\n  if (typeof XMLHttpRequest === \"undefined\")\n    throwError(SCOPE, \"XMLHttpRequest is undefined\");\n  const xhr = new XMLHttpRequest();\n  const action = option.action;\n  if (xhr.upload) {\n    xhr.upload.addEventListener(\"progress\", (evt) => {\n      const progressEvt = evt;\n      progressEvt.percent = evt.total > 0 ? evt.loaded / evt.total * 100 : 0;\n      option.onProgress(progressEvt);\n    });\n  }\n  const formData = new FormData();\n  if (option.data) {\n    for (const [key, value] of Object.entries(option.data)) {\n      if (isArray(value) && value.length)\n        formData.append(key, ...value);\n      else\n        formData.append(key, value);\n    }\n  }\n  formData.append(option.filename, option.file, option.file.name);\n  xhr.addEventListener(\"error\", () => {\n    option.onError(getError(action, option, xhr));\n  });\n  xhr.addEventListener(\"load\", () => {\n    if (xhr.status < 200 || xhr.status >= 300) {\n      return option.onError(getError(action, option, xhr));\n    }\n    option.onSuccess(getBody(xhr));\n  });\n  xhr.open(option.method, action, true);\n  if (option.withCredentials && \"withCredentials\" in xhr) {\n    xhr.withCredentials = true;\n  }\n  const headers = option.headers || {};\n  if (headers instanceof Headers) {\n    headers.forEach((value, key) => xhr.setRequestHeader(key, value));\n  } else {\n    for (const [key, value] of Object.entries(headers)) {\n      if (isNil(value))\n        continue;\n      xhr.setRequestHeader(key, String(value));\n    }\n  }\n  xhr.send(formData);\n  return xhr;\n};\n\nexport { UploadAjaxError, ajaxUpload };\n//# sourceMappingURL=ajax.mjs.map\n",
      "start": 1709718918747,
      "end": 1709718918765,
      "sourcemaps": null
    },
    {
      "name": "unplugin-formkit",
      "start": 1709718918765,
      "end": 1709718918765,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709718918765,
      "end": 1709718918765,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709718918765,
      "end": 1709718918765,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709718918765,
      "end": 1709718918765,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709718918765,
      "end": 1709718918765,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709718918765,
      "end": 1709718918765,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709718918765,
      "end": 1709718918765,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709718918765,
      "end": 1709718918765,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709718918765,
      "end": 1709718918765,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709718918765,
      "end": 1709718918765,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709718918765,
      "end": 1709718918765,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709718918765,
      "end": 1709718918765,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709718918765,
      "end": 1709718918765,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709718918765,
      "end": 1709718918765,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709718918765,
      "end": 1709718918765,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709718918765,
      "end": 1709718918765,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709718918765,
      "end": 1709718918765,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709718918765,
      "end": 1709718918765,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709718918765,
      "end": 1709718918765,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { isNil } from \"lodash-unified\";\nimport \"../../../utils/index.mjs\";\nimport { throwError } from \"../../../utils/error.mjs\";\nimport { isArray } from \"@vue/shared\";\nconst SCOPE = \"ElUpload\";\nclass UploadAjaxError extends Error {\n  constructor(message, status, method, url) {\n    super(message);\n    this.name = \"UploadAjaxError\";\n    this.status = status;\n    this.method = method;\n    this.url = url;\n  }\n}\nfunction getError(action, option, xhr) {\n  let msg;\n  if (xhr.response) {\n    msg = `${xhr.response.error || xhr.response}`;\n  } else if (xhr.responseText) {\n    msg = `${xhr.responseText}`;\n  } else {\n    msg = `fail to ${option.method} ${action} ${xhr.status}`;\n  }\n  return new UploadAjaxError(msg, xhr.status, option.method, action);\n}\nfunction getBody(xhr) {\n  const text = xhr.responseText || xhr.response;\n  if (!text) {\n    return text;\n  }\n  try {\n    return JSON.parse(text);\n  } catch (e) {\n    return text;\n  }\n}\nconst ajaxUpload = (option) => {\n  if (true)\n    throwError(SCOPE, \"XMLHttpRequest is undefined\");\n  const xhr = new (void 0)();\n  const action = option.action;\n  if (xhr.upload) {\n    xhr.upload.addEventListener(\"progress\", (evt) => {\n      const progressEvt = evt;\n      progressEvt.percent = evt.total > 0 ? evt.loaded / evt.total * 100 : 0;\n      option.onProgress(progressEvt);\n    });\n  }\n  const formData = new FormData();\n  if (option.data) {\n    for (const [key, value] of Object.entries(option.data)) {\n      if (isArray(value) && value.length)\n        formData.append(key, ...value);\n      else\n        formData.append(key, value);\n    }\n  }\n  formData.append(option.filename, option.file, option.file.name);\n  xhr.addEventListener(\"error\", () => {\n    option.onError(getError(action, option, xhr));\n  });\n  xhr.addEventListener(\"load\", () => {\n    if (xhr.status < 200 || xhr.status >= 300) {\n      return option.onError(getError(action, option, xhr));\n    }\n    option.onSuccess(getBody(xhr));\n  });\n  xhr.open(option.method, action, true);\n  if (option.withCredentials && \"withCredentials\" in xhr) {\n    xhr.withCredentials = true;\n  }\n  const headers = option.headers || {};\n  if (headers instanceof Headers) {\n    headers.forEach((value, key) => xhr.setRequestHeader(key, value));\n  } else {\n    for (const [key, value] of Object.entries(headers)) {\n      if (isNil(value))\n        continue;\n      xhr.setRequestHeader(key, String(value));\n    }\n  }\n  xhr.send(formData);\n  return xhr;\n};\nexport { UploadAjaxError, ajaxUpload };\n",
      "start": 1709718918765,
      "end": 1709718919115,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/sebastianwessel/projekte/voyage/node_modules/element-plus/es/components/upload/src/ajax.mjs\"],\n  \"sourcesContent\": [\"import { isNil } from 'lodash-unified';\\nimport '../../../utils/index.mjs';\\nimport { throwError } from '../../../utils/error.mjs';\\nimport { isArray } from '@vue/shared';\\n\\nconst SCOPE = \\\"ElUpload\\\";\\nclass UploadAjaxError extends Error {\\n  constructor(message, status, method, url) {\\n    super(message);\\n    this.name = \\\"UploadAjaxError\\\";\\n    this.status = status;\\n    this.method = method;\\n    this.url = url;\\n  }\\n}\\nfunction getError(action, option, xhr) {\\n  let msg;\\n  if (xhr.response) {\\n    msg = `${xhr.response.error || xhr.response}`;\\n  } else if (xhr.responseText) {\\n    msg = `${xhr.responseText}`;\\n  } else {\\n    msg = `fail to ${option.method} ${action} ${xhr.status}`;\\n  }\\n  return new UploadAjaxError(msg, xhr.status, option.method, action);\\n}\\nfunction getBody(xhr) {\\n  const text = xhr.responseText || xhr.response;\\n  if (!text) {\\n    return text;\\n  }\\n  try {\\n    return JSON.parse(text);\\n  } catch (e) {\\n    return text;\\n  }\\n}\\nconst ajaxUpload = (option) => {\\n  if (typeof XMLHttpRequest === \\\"undefined\\\")\\n    throwError(SCOPE, \\\"XMLHttpRequest is undefined\\\");\\n  const xhr = new XMLHttpRequest();\\n  const action = option.action;\\n  if (xhr.upload) {\\n    xhr.upload.addEventListener(\\\"progress\\\", (evt) => {\\n      const progressEvt = evt;\\n      progressEvt.percent = evt.total > 0 ? evt.loaded / evt.total * 100 : 0;\\n      option.onProgress(progressEvt);\\n    });\\n  }\\n  const formData = new FormData();\\n  if (option.data) {\\n    for (const [key, value] of Object.entries(option.data)) {\\n      if (isArray(value) && value.length)\\n        formData.append(key, ...value);\\n      else\\n        formData.append(key, value);\\n    }\\n  }\\n  formData.append(option.filename, option.file, option.file.name);\\n  xhr.addEventListener(\\\"error\\\", () => {\\n    option.onError(getError(action, option, xhr));\\n  });\\n  xhr.addEventListener(\\\"load\\\", () => {\\n    if (xhr.status < 200 || xhr.status >= 300) {\\n      return option.onError(getError(action, option, xhr));\\n    }\\n    option.onSuccess(getBody(xhr));\\n  });\\n  xhr.open(option.method, action, true);\\n  if (option.withCredentials && \\\"withCredentials\\\" in xhr) {\\n    xhr.withCredentials = true;\\n  }\\n  const headers = option.headers || {};\\n  if (headers instanceof Headers) {\\n    headers.forEach((value, key) => xhr.setRequestHeader(key, value));\\n  } else {\\n    for (const [key, value] of Object.entries(headers)) {\\n      if (isNil(value))\\n        continue;\\n      xhr.setRequestHeader(key, String(value));\\n    }\\n  }\\n  xhr.send(formData);\\n  return xhr;\\n};\\n\\nexport { UploadAjaxError, ajaxUpload };\\n//# sourceMappingURL=ajax.mjs.map\\n\"],\n  \"mappings\": \"AAAA,SAAS,aAAa;AACtB,OAAO;AACP,SAAS,kBAAkB;AAC3B,SAAS,eAAe;AAExB,MAAM,QAAQ;AACd,MAAM,wBAAwB,MAAM;AAAA,EAClC,YAAY,SAAS,QAAQ,QAAQ,KAAK;AACxC,UAAM,OAAO;AACb,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,SAAS;AACd,SAAK,MAAM;AAAA,EACb;AACF;AACA,SAAS,SAAS,QAAQ,QAAQ,KAAK;AACrC,MAAI;AACJ,MAAI,IAAI,UAAU;AAChB,UAAM,GAAG,IAAI,SAAS,SAAS,IAAI,QAAQ;AAAA,EAC7C,WAAW,IAAI,cAAc;AAC3B,UAAM,GAAG,IAAI,YAAY;AAAA,EAC3B,OAAO;AACL,UAAM,WAAW,OAAO,MAAM,IAAI,MAAM,IAAI,IAAI,MAAM;AAAA,EACxD;AACA,SAAO,IAAI,gBAAgB,KAAK,IAAI,QAAQ,OAAO,QAAQ,MAAM;AACnE;AACA,SAAS,QAAQ,KAAK;AACpB,QAAM,OAAO,IAAI,gBAAgB,IAAI;AACrC,MAAI,CAAC,MAAM;AACT,WAAO;AAAA,EACT;AACA,MAAI;AACF,WAAO,KAAK,MAAM,IAAI;AAAA,EACxB,SAAS,GAAG;AACV,WAAO;AAAA,EACT;AACF;AACA,MAAM,aAAa,CAAC,WAAW;AAC7B,MAAI;AACF,eAAW,OAAO,6BAA6B;AACjD,QAAM,MAAM,IAAI,SAAe;AAC/B,QAAM,SAAS,OAAO;AACtB,MAAI,IAAI,QAAQ;AACd,QAAI,OAAO,iBAAiB,YAAY,CAAC,QAAQ;AAC/C,YAAM,cAAc;AACpB,kBAAY,UAAU,IAAI,QAAQ,IAAI,IAAI,SAAS,IAAI,QAAQ,MAAM;AACrE,aAAO,WAAW,WAAW;AAAA,IAC/B,CAAC;AAAA,EACH;AACA,QAAM,WAAW,IAAI,SAAS;AAC9B,MAAI,OAAO,MAAM;AACf,eAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,OAAO,IAAI,GAAG;AACtD,UAAI,QAAQ,KAAK,KAAK,MAAM;AAC1B,iBAAS,OAAO,KAAK,GAAG,KAAK;AAAA;AAE7B,iBAAS,OAAO,KAAK,KAAK;AAAA,IAC9B;AAAA,EACF;AACA,WAAS,OAAO,OAAO,UAAU,OAAO,MAAM,OAAO,KAAK,IAAI;AAC9D,MAAI,iBAAiB,SAAS,MAAM;AAClC,WAAO,QAAQ,SAAS,QAAQ,QAAQ,GAAG,CAAC;AAAA,EAC9C,CAAC;AACD,MAAI,iBAAiB,QAAQ,MAAM;AACjC,QAAI,IAAI,SAAS,OAAO,IAAI,UAAU,KAAK;AACzC,aAAO,OAAO,QAAQ,SAAS,QAAQ,QAAQ,GAAG,CAAC;AAAA,IACrD;AACA,WAAO,UAAU,QAAQ,GAAG,CAAC;AAAA,EAC/B,CAAC;AACD,MAAI,KAAK,OAAO,QAAQ,QAAQ,IAAI;AACpC,MAAI,OAAO,mBAAmB,qBAAqB,KAAK;AACtD,QAAI,kBAAkB;AAAA,EACxB;AACA,QAAM,UAAU,OAAO,WAAW,CAAC;AACnC,MAAI,mBAAmB,SAAS;AAC9B,YAAQ,QAAQ,CAAC,OAAO,QAAQ,IAAI,iBAAiB,KAAK,KAAK,CAAC;AAAA,EAClE,OAAO;AACL,eAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,OAAO,GAAG;AAClD,UAAI,MAAM,KAAK;AACb;AACF,UAAI,iBAAiB,KAAK,OAAO,KAAK,CAAC;AAAA,IACzC;AAAA,EACF;AACA,MAAI,KAAK,QAAQ;AACjB,SAAO;AACT;AAEA,SAAS,iBAAiB;\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1709718919115,
      "end": 1709718919115,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709718919115,
      "end": 1709718919115,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709718919115,
      "end": 1709718919115,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709718919115,
      "end": 1709718919115,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709718919115,
      "end": 1709718919115,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709718919115,
      "end": 1709718919115,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709718919115,
      "end": 1709718919115,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709718919115,
      "end": 1709718919115,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709718919115,
      "end": 1709718919115,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709718919115,
      "end": 1709718919115,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709718919115,
      "end": 1709718919115,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709718919115,
      "end": 1709718919115,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709718919115,
      "end": 1709718919115,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709718919115,
      "end": 1709718919115,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709718919115,
      "end": 1709718919115,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1709718919115,
      "end": 1709718919115,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1709718919115,
      "end": 1709718919115,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709718919115,
      "end": 1709718919115,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709718919115,
      "end": 1709718919115,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709718919115,
      "end": 1709718919115,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709718919115,
      "end": 1709718919115,
      "order": "normal"
    }
  ]
}
