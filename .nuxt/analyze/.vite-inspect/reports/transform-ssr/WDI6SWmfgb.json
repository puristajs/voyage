{
  "resolvedId": "/Users/sebastianwessel/projekte/voyage/node_modules/element-plus/es/components/notification/src/notify.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { isVNode, createVNode, render } from 'vue';\nimport '../../../utils/index.mjs';\nimport NotificationConstructor from './notification.mjs';\nimport { notificationTypes } from './notification2.mjs';\nimport { isClient } from '@vueuse/core';\nimport { isElement } from '../../../utils/types.mjs';\nimport { isString } from '@vue/shared';\nimport { debugWarn } from '../../../utils/error.mjs';\n\nconst notifications = {\n  \"top-left\": [],\n  \"top-right\": [],\n  \"bottom-left\": [],\n  \"bottom-right\": []\n};\nconst GAP_SIZE = 16;\nlet seed = 1;\nconst notify = function(options = {}, context = null) {\n  if (!isClient)\n    return { close: () => void 0 };\n  if (typeof options === \"string\" || isVNode(options)) {\n    options = { message: options };\n  }\n  const position = options.position || \"top-right\";\n  let verticalOffset = options.offset || 0;\n  notifications[position].forEach(({ vm: vm2 }) => {\n    var _a;\n    verticalOffset += (((_a = vm2.el) == null ? void 0 : _a.offsetHeight) || 0) + GAP_SIZE;\n  });\n  verticalOffset += GAP_SIZE;\n  const id = `notification_${seed++}`;\n  const userOnClose = options.onClose;\n  const props = {\n    ...options,\n    offset: verticalOffset,\n    id,\n    onClose: () => {\n      close(id, position, userOnClose);\n    }\n  };\n  let appendTo = document.body;\n  if (isElement(options.appendTo)) {\n    appendTo = options.appendTo;\n  } else if (isString(options.appendTo)) {\n    appendTo = document.querySelector(options.appendTo);\n  }\n  if (!isElement(appendTo)) {\n    debugWarn(\"ElNotification\", \"the appendTo option is not an HTMLElement. Falling back to document.body.\");\n    appendTo = document.body;\n  }\n  const container = document.createElement(\"div\");\n  const vm = createVNode(NotificationConstructor, props, isVNode(props.message) ? {\n    default: () => props.message\n  } : null);\n  vm.appContext = context != null ? context : notify._context;\n  vm.props.onDestroy = () => {\n    render(null, container);\n  };\n  render(vm, container);\n  notifications[position].push({ vm });\n  appendTo.appendChild(container.firstElementChild);\n  return {\n    close: () => {\n      ;\n      vm.component.exposed.visible.value = false;\n    }\n  };\n};\nnotificationTypes.forEach((type) => {\n  notify[type] = (options = {}) => {\n    if (typeof options === \"string\" || isVNode(options)) {\n      options = {\n        message: options\n      };\n    }\n    return notify({\n      ...options,\n      type\n    });\n  };\n});\nfunction close(id, position, userOnClose) {\n  const orientedNotifications = notifications[position];\n  const idx = orientedNotifications.findIndex(({ vm: vm2 }) => {\n    var _a;\n    return ((_a = vm2.component) == null ? void 0 : _a.props.id) === id;\n  });\n  if (idx === -1)\n    return;\n  const { vm } = orientedNotifications[idx];\n  if (!vm)\n    return;\n  userOnClose == null ? void 0 : userOnClose(vm);\n  const removedHeight = vm.el.offsetHeight;\n  const verticalPos = position.split(\"-\")[0];\n  orientedNotifications.splice(idx, 1);\n  const len = orientedNotifications.length;\n  if (len < 1)\n    return;\n  for (let i = idx; i < len; i++) {\n    const { el, component } = orientedNotifications[i].vm;\n    const pos = Number.parseInt(el.style[verticalPos], 10) - removedHeight - GAP_SIZE;\n    component.props.offset = pos;\n  }\n}\nfunction closeAll() {\n  for (const orientedNotifications of Object.values(notifications)) {\n    orientedNotifications.forEach(({ vm }) => {\n      ;\n      vm.component.exposed.visible.value = false;\n    });\n  }\n}\nnotify.closeAll = closeAll;\nnotify._context = null;\n\nexport { close, closeAll, notify as default };\n//# sourceMappingURL=notify.mjs.map\n",
      "start": 1709718918764,
      "end": 1709718918788,
      "sourcemaps": null
    },
    {
      "name": "unplugin-formkit",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { isVNode, createVNode, render } from \"vue\";\nimport \"../../../utils/index.mjs\";\nimport NotificationConstructor from \"./notification.mjs\";\nimport { notificationTypes } from \"./notification2.mjs\";\nimport { isClient } from \"@vueuse/core\";\nimport { isElement } from \"../../../utils/types.mjs\";\nimport { isString } from \"@vue/shared\";\nimport { debugWarn } from \"../../../utils/error.mjs\";\nconst notifications = {\n  \"top-left\": [],\n  \"top-right\": [],\n  \"bottom-left\": [],\n  \"bottom-right\": []\n};\nconst GAP_SIZE = 16;\nlet seed = 1;\nconst notify = function(options = {}, context = null) {\n  if (!isClient)\n    return { close: () => void 0 };\n  if (typeof options === \"string\" || isVNode(options)) {\n    options = { message: options };\n  }\n  const position = options.position || \"top-right\";\n  let verticalOffset = options.offset || 0;\n  notifications[position].forEach(({ vm: vm2 }) => {\n    var _a;\n    verticalOffset += (((_a = vm2.el) == null ? void 0 : _a.offsetHeight) || 0) + GAP_SIZE;\n  });\n  verticalOffset += GAP_SIZE;\n  const id = `notification_${seed++}`;\n  const userOnClose = options.onClose;\n  const props = {\n    ...options,\n    offset: verticalOffset,\n    id,\n    onClose: () => {\n      close(id, position, userOnClose);\n    }\n  };\n  let appendTo = (void 0).body;\n  if (isElement(options.appendTo)) {\n    appendTo = options.appendTo;\n  } else if (isString(options.appendTo)) {\n    appendTo = (void 0).querySelector(options.appendTo);\n  }\n  if (!isElement(appendTo)) {\n    debugWarn(\"ElNotification\", \"the appendTo option is not an HTMLElement. Falling back to document.body.\");\n    appendTo = (void 0).body;\n  }\n  const container = (void 0).createElement(\"div\");\n  const vm = createVNode(NotificationConstructor, props, isVNode(props.message) ? {\n    default: () => props.message\n  } : null);\n  vm.appContext = context != null ? context : notify._context;\n  vm.props.onDestroy = () => {\n    render(null, container);\n  };\n  render(vm, container);\n  notifications[position].push({ vm });\n  appendTo.appendChild(container.firstElementChild);\n  return {\n    close: () => {\n      ;\n      vm.component.exposed.visible.value = false;\n    }\n  };\n};\nnotificationTypes.forEach((type) => {\n  notify[type] = (options = {}) => {\n    if (typeof options === \"string\" || isVNode(options)) {\n      options = {\n        message: options\n      };\n    }\n    return notify({\n      ...options,\n      type\n    });\n  };\n});\nfunction close(id, position, userOnClose) {\n  const orientedNotifications = notifications[position];\n  const idx = orientedNotifications.findIndex(({ vm: vm2 }) => {\n    var _a;\n    return ((_a = vm2.component) == null ? void 0 : _a.props.id) === id;\n  });\n  if (idx === -1)\n    return;\n  const { vm } = orientedNotifications[idx];\n  if (!vm)\n    return;\n  userOnClose == null ? void 0 : userOnClose(vm);\n  const removedHeight = vm.el.offsetHeight;\n  const verticalPos = position.split(\"-\")[0];\n  orientedNotifications.splice(idx, 1);\n  const len = orientedNotifications.length;\n  if (len < 1)\n    return;\n  for (let i = idx; i < len; i++) {\n    const { el, component } = orientedNotifications[i].vm;\n    const pos = Number.parseInt(el.style[verticalPos], 10) - removedHeight - GAP_SIZE;\n    component.props.offset = pos;\n  }\n}\nfunction closeAll() {\n  for (const orientedNotifications of Object.values(notifications)) {\n    orientedNotifications.forEach(({ vm }) => {\n      ;\n      vm.component.exposed.visible.value = false;\n    });\n  }\n}\nnotify.closeAll = closeAll;\nnotify._context = null;\nexport { close, closeAll, notify as default };\n",
      "start": 1709718918788,
      "end": 1709718919258,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/sebastianwessel/projekte/voyage/node_modules/element-plus/es/components/notification/src/notify.mjs\"],\n  \"sourcesContent\": [\"import { isVNode, createVNode, render } from 'vue';\\nimport '../../../utils/index.mjs';\\nimport NotificationConstructor from './notification.mjs';\\nimport { notificationTypes } from './notification2.mjs';\\nimport { isClient } from '@vueuse/core';\\nimport { isElement } from '../../../utils/types.mjs';\\nimport { isString } from '@vue/shared';\\nimport { debugWarn } from '../../../utils/error.mjs';\\n\\nconst notifications = {\\n  \\\"top-left\\\": [],\\n  \\\"top-right\\\": [],\\n  \\\"bottom-left\\\": [],\\n  \\\"bottom-right\\\": []\\n};\\nconst GAP_SIZE = 16;\\nlet seed = 1;\\nconst notify = function(options = {}, context = null) {\\n  if (!isClient)\\n    return { close: () => void 0 };\\n  if (typeof options === \\\"string\\\" || isVNode(options)) {\\n    options = { message: options };\\n  }\\n  const position = options.position || \\\"top-right\\\";\\n  let verticalOffset = options.offset || 0;\\n  notifications[position].forEach(({ vm: vm2 }) => {\\n    var _a;\\n    verticalOffset += (((_a = vm2.el) == null ? void 0 : _a.offsetHeight) || 0) + GAP_SIZE;\\n  });\\n  verticalOffset += GAP_SIZE;\\n  const id = `notification_${seed++}`;\\n  const userOnClose = options.onClose;\\n  const props = {\\n    ...options,\\n    offset: verticalOffset,\\n    id,\\n    onClose: () => {\\n      close(id, position, userOnClose);\\n    }\\n  };\\n  let appendTo = document.body;\\n  if (isElement(options.appendTo)) {\\n    appendTo = options.appendTo;\\n  } else if (isString(options.appendTo)) {\\n    appendTo = document.querySelector(options.appendTo);\\n  }\\n  if (!isElement(appendTo)) {\\n    debugWarn(\\\"ElNotification\\\", \\\"the appendTo option is not an HTMLElement. Falling back to document.body.\\\");\\n    appendTo = document.body;\\n  }\\n  const container = document.createElement(\\\"div\\\");\\n  const vm = createVNode(NotificationConstructor, props, isVNode(props.message) ? {\\n    default: () => props.message\\n  } : null);\\n  vm.appContext = context != null ? context : notify._context;\\n  vm.props.onDestroy = () => {\\n    render(null, container);\\n  };\\n  render(vm, container);\\n  notifications[position].push({ vm });\\n  appendTo.appendChild(container.firstElementChild);\\n  return {\\n    close: () => {\\n      ;\\n      vm.component.exposed.visible.value = false;\\n    }\\n  };\\n};\\nnotificationTypes.forEach((type) => {\\n  notify[type] = (options = {}) => {\\n    if (typeof options === \\\"string\\\" || isVNode(options)) {\\n      options = {\\n        message: options\\n      };\\n    }\\n    return notify({\\n      ...options,\\n      type\\n    });\\n  };\\n});\\nfunction close(id, position, userOnClose) {\\n  const orientedNotifications = notifications[position];\\n  const idx = orientedNotifications.findIndex(({ vm: vm2 }) => {\\n    var _a;\\n    return ((_a = vm2.component) == null ? void 0 : _a.props.id) === id;\\n  });\\n  if (idx === -1)\\n    return;\\n  const { vm } = orientedNotifications[idx];\\n  if (!vm)\\n    return;\\n  userOnClose == null ? void 0 : userOnClose(vm);\\n  const removedHeight = vm.el.offsetHeight;\\n  const verticalPos = position.split(\\\"-\\\")[0];\\n  orientedNotifications.splice(idx, 1);\\n  const len = orientedNotifications.length;\\n  if (len < 1)\\n    return;\\n  for (let i = idx; i < len; i++) {\\n    const { el, component } = orientedNotifications[i].vm;\\n    const pos = Number.parseInt(el.style[verticalPos], 10) - removedHeight - GAP_SIZE;\\n    component.props.offset = pos;\\n  }\\n}\\nfunction closeAll() {\\n  for (const orientedNotifications of Object.values(notifications)) {\\n    orientedNotifications.forEach(({ vm }) => {\\n      ;\\n      vm.component.exposed.visible.value = false;\\n    });\\n  }\\n}\\nnotify.closeAll = closeAll;\\nnotify._context = null;\\n\\nexport { close, closeAll, notify as default };\\n//# sourceMappingURL=notify.mjs.map\\n\"],\n  \"mappings\": \"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\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "normal"
    }
  ]
}
