{
  "resolvedId": "/Users/sebastianwessel/projekte/voyage/node_modules/element-plus/es/components/message-box/src/messageBox.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createVNode, isVNode, render } from 'vue';\nimport '../../../utils/index.mjs';\nimport MessageBoxConstructor from './index.mjs';\nimport { isString, isFunction, hasOwn, isObject } from '@vue/shared';\nimport { isElement, isUndefined } from '../../../utils/types.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nimport { isClient } from '@vueuse/core';\n\nconst messageInstance = /* @__PURE__ */ new Map();\nconst getAppendToElement = (props) => {\n  let appendTo = document.body;\n  if (props.appendTo) {\n    if (isString(props.appendTo)) {\n      appendTo = document.querySelector(props.appendTo);\n    }\n    if (isElement(props.appendTo)) {\n      appendTo = props.appendTo;\n    }\n    if (!isElement(appendTo)) {\n      debugWarn(\"ElMessageBox\", \"the appendTo option is not an HTMLElement. Falling back to document.body.\");\n      appendTo = document.body;\n    }\n  }\n  return appendTo;\n};\nconst initInstance = (props, container, appContext = null) => {\n  const vnode = createVNode(MessageBoxConstructor, props, isFunction(props.message) || isVNode(props.message) ? {\n    default: isFunction(props.message) ? props.message : () => props.message\n  } : null);\n  vnode.appContext = appContext;\n  render(vnode, container);\n  getAppendToElement(props).appendChild(container.firstElementChild);\n  return vnode.component;\n};\nconst genContainer = () => {\n  return document.createElement(\"div\");\n};\nconst showMessage = (options, appContext) => {\n  const container = genContainer();\n  options.onVanish = () => {\n    render(null, container);\n    messageInstance.delete(vm);\n  };\n  options.onAction = (action) => {\n    const currentMsg = messageInstance.get(vm);\n    let resolve;\n    if (options.showInput) {\n      resolve = { value: vm.inputValue, action };\n    } else {\n      resolve = action;\n    }\n    if (options.callback) {\n      options.callback(resolve, instance.proxy);\n    } else {\n      if (action === \"cancel\" || action === \"close\") {\n        if (options.distinguishCancelAndClose && action !== \"cancel\") {\n          currentMsg.reject(\"close\");\n        } else {\n          currentMsg.reject(\"cancel\");\n        }\n      } else {\n        currentMsg.resolve(resolve);\n      }\n    }\n  };\n  const instance = initInstance(options, container, appContext);\n  const vm = instance.proxy;\n  for (const prop in options) {\n    if (hasOwn(options, prop) && !hasOwn(vm.$props, prop)) {\n      vm[prop] = options[prop];\n    }\n  }\n  vm.visible = true;\n  return vm;\n};\nfunction MessageBox(options, appContext = null) {\n  if (!isClient)\n    return Promise.reject();\n  let callback;\n  if (isString(options) || isVNode(options)) {\n    options = {\n      message: options\n    };\n  } else {\n    callback = options.callback;\n  }\n  return new Promise((resolve, reject) => {\n    const vm = showMessage(options, appContext != null ? appContext : MessageBox._context);\n    messageInstance.set(vm, {\n      options,\n      callback,\n      resolve,\n      reject\n    });\n  });\n}\nconst MESSAGE_BOX_VARIANTS = [\"alert\", \"confirm\", \"prompt\"];\nconst MESSAGE_BOX_DEFAULT_OPTS = {\n  alert: { closeOnPressEscape: false, closeOnClickModal: false },\n  confirm: { showCancelButton: true },\n  prompt: { showCancelButton: true, showInput: true }\n};\nMESSAGE_BOX_VARIANTS.forEach((boxType) => {\n  ;\n  MessageBox[boxType] = messageBoxFactory(boxType);\n});\nfunction messageBoxFactory(boxType) {\n  return (message, title, options, appContext) => {\n    let titleOrOpts = \"\";\n    if (isObject(title)) {\n      options = title;\n      titleOrOpts = \"\";\n    } else if (isUndefined(title)) {\n      titleOrOpts = \"\";\n    } else {\n      titleOrOpts = title;\n    }\n    return MessageBox(Object.assign({\n      title: titleOrOpts,\n      message,\n      type: \"\",\n      ...MESSAGE_BOX_DEFAULT_OPTS[boxType]\n    }, options, {\n      boxType\n    }), appContext);\n  };\n}\nMessageBox.close = () => {\n  messageInstance.forEach((_, vm) => {\n    vm.doClose();\n  });\n  messageInstance.clear();\n};\nMessageBox._context = null;\n\nexport { MessageBox as default };\n//# sourceMappingURL=messageBox.mjs.map\n",
      "start": 1709718918763,
      "end": 1709718918787,
      "sourcemaps": null
    },
    {
      "name": "unplugin-formkit",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709718918788,
      "end": 1709718918788,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { createVNode, isVNode, render } from \"vue\";\nimport \"../../../utils/index.mjs\";\nimport MessageBoxConstructor from \"./index.mjs\";\nimport { isString, isFunction, hasOwn, isObject } from \"@vue/shared\";\nimport { isElement, isUndefined } from \"../../../utils/types.mjs\";\nimport { debugWarn } from \"../../../utils/error.mjs\";\nimport { isClient } from \"@vueuse/core\";\nconst messageInstance = /* @__PURE__ */ new Map();\nconst getAppendToElement = (props) => {\n  let appendTo = (void 0).body;\n  if (props.appendTo) {\n    if (isString(props.appendTo)) {\n      appendTo = (void 0).querySelector(props.appendTo);\n    }\n    if (isElement(props.appendTo)) {\n      appendTo = props.appendTo;\n    }\n    if (!isElement(appendTo)) {\n      debugWarn(\"ElMessageBox\", \"the appendTo option is not an HTMLElement. Falling back to document.body.\");\n      appendTo = (void 0).body;\n    }\n  }\n  return appendTo;\n};\nconst initInstance = (props, container, appContext = null) => {\n  const vnode = createVNode(MessageBoxConstructor, props, isFunction(props.message) || isVNode(props.message) ? {\n    default: isFunction(props.message) ? props.message : () => props.message\n  } : null);\n  vnode.appContext = appContext;\n  render(vnode, container);\n  getAppendToElement(props).appendChild(container.firstElementChild);\n  return vnode.component;\n};\nconst genContainer = () => {\n  return (void 0).createElement(\"div\");\n};\nconst showMessage = (options, appContext) => {\n  const container = genContainer();\n  options.onVanish = () => {\n    render(null, container);\n    messageInstance.delete(vm);\n  };\n  options.onAction = (action) => {\n    const currentMsg = messageInstance.get(vm);\n    let resolve;\n    if (options.showInput) {\n      resolve = { value: vm.inputValue, action };\n    } else {\n      resolve = action;\n    }\n    if (options.callback) {\n      options.callback(resolve, instance.proxy);\n    } else {\n      if (action === \"cancel\" || action === \"close\") {\n        if (options.distinguishCancelAndClose && action !== \"cancel\") {\n          currentMsg.reject(\"close\");\n        } else {\n          currentMsg.reject(\"cancel\");\n        }\n      } else {\n        currentMsg.resolve(resolve);\n      }\n    }\n  };\n  const instance = initInstance(options, container, appContext);\n  const vm = instance.proxy;\n  for (const prop in options) {\n    if (hasOwn(options, prop) && !hasOwn(vm.$props, prop)) {\n      vm[prop] = options[prop];\n    }\n  }\n  vm.visible = true;\n  return vm;\n};\nfunction MessageBox(options, appContext = null) {\n  if (!isClient)\n    return Promise.reject();\n  let callback;\n  if (isString(options) || isVNode(options)) {\n    options = {\n      message: options\n    };\n  } else {\n    callback = options.callback;\n  }\n  return new Promise((resolve, reject) => {\n    const vm = showMessage(options, appContext != null ? appContext : MessageBox._context);\n    messageInstance.set(vm, {\n      options,\n      callback,\n      resolve,\n      reject\n    });\n  });\n}\nconst MESSAGE_BOX_VARIANTS = [\"alert\", \"confirm\", \"prompt\"];\nconst MESSAGE_BOX_DEFAULT_OPTS = {\n  alert: { closeOnPressEscape: false, closeOnClickModal: false },\n  confirm: { showCancelButton: true },\n  prompt: { showCancelButton: true, showInput: true }\n};\nMESSAGE_BOX_VARIANTS.forEach((boxType) => {\n  ;\n  MessageBox[boxType] = messageBoxFactory(boxType);\n});\nfunction messageBoxFactory(boxType) {\n  return (message, title, options, appContext) => {\n    let titleOrOpts = \"\";\n    if (isObject(title)) {\n      options = title;\n      titleOrOpts = \"\";\n    } else if (isUndefined(title)) {\n      titleOrOpts = \"\";\n    } else {\n      titleOrOpts = title;\n    }\n    return MessageBox(Object.assign({\n      title: titleOrOpts,\n      message,\n      type: \"\",\n      ...MESSAGE_BOX_DEFAULT_OPTS[boxType]\n    }, options, {\n      boxType\n    }), appContext);\n  };\n}\nMessageBox.close = () => {\n  messageInstance.forEach((_, vm) => {\n    vm.doClose();\n  });\n  messageInstance.clear();\n};\nMessageBox._context = null;\nexport { MessageBox as default };\n",
      "start": 1709718918788,
      "end": 1709718919258,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/sebastianwessel/projekte/voyage/node_modules/element-plus/es/components/message-box/src/messageBox.mjs\"],\n  \"sourcesContent\": [\"import { createVNode, isVNode, render } from 'vue';\\nimport '../../../utils/index.mjs';\\nimport MessageBoxConstructor from './index.mjs';\\nimport { isString, isFunction, hasOwn, isObject } from '@vue/shared';\\nimport { isElement, isUndefined } from '../../../utils/types.mjs';\\nimport { debugWarn } from '../../../utils/error.mjs';\\nimport { isClient } from '@vueuse/core';\\n\\nconst messageInstance = /* @__PURE__ */ new Map();\\nconst getAppendToElement = (props) => {\\n  let appendTo = document.body;\\n  if (props.appendTo) {\\n    if (isString(props.appendTo)) {\\n      appendTo = document.querySelector(props.appendTo);\\n    }\\n    if (isElement(props.appendTo)) {\\n      appendTo = props.appendTo;\\n    }\\n    if (!isElement(appendTo)) {\\n      debugWarn(\\\"ElMessageBox\\\", \\\"the appendTo option is not an HTMLElement. Falling back to document.body.\\\");\\n      appendTo = document.body;\\n    }\\n  }\\n  return appendTo;\\n};\\nconst initInstance = (props, container, appContext = null) => {\\n  const vnode = createVNode(MessageBoxConstructor, props, isFunction(props.message) || isVNode(props.message) ? {\\n    default: isFunction(props.message) ? props.message : () => props.message\\n  } : null);\\n  vnode.appContext = appContext;\\n  render(vnode, container);\\n  getAppendToElement(props).appendChild(container.firstElementChild);\\n  return vnode.component;\\n};\\nconst genContainer = () => {\\n  return document.createElement(\\\"div\\\");\\n};\\nconst showMessage = (options, appContext) => {\\n  const container = genContainer();\\n  options.onVanish = () => {\\n    render(null, container);\\n    messageInstance.delete(vm);\\n  };\\n  options.onAction = (action) => {\\n    const currentMsg = messageInstance.get(vm);\\n    let resolve;\\n    if (options.showInput) {\\n      resolve = { value: vm.inputValue, action };\\n    } else {\\n      resolve = action;\\n    }\\n    if (options.callback) {\\n      options.callback(resolve, instance.proxy);\\n    } else {\\n      if (action === \\\"cancel\\\" || action === \\\"close\\\") {\\n        if (options.distinguishCancelAndClose && action !== \\\"cancel\\\") {\\n          currentMsg.reject(\\\"close\\\");\\n        } else {\\n          currentMsg.reject(\\\"cancel\\\");\\n        }\\n      } else {\\n        currentMsg.resolve(resolve);\\n      }\\n    }\\n  };\\n  const instance = initInstance(options, container, appContext);\\n  const vm = instance.proxy;\\n  for (const prop in options) {\\n    if (hasOwn(options, prop) && !hasOwn(vm.$props, prop)) {\\n      vm[prop] = options[prop];\\n    }\\n  }\\n  vm.visible = true;\\n  return vm;\\n};\\nfunction MessageBox(options, appContext = null) {\\n  if (!isClient)\\n    return Promise.reject();\\n  let callback;\\n  if (isString(options) || isVNode(options)) {\\n    options = {\\n      message: options\\n    };\\n  } else {\\n    callback = options.callback;\\n  }\\n  return new Promise((resolve, reject) => {\\n    const vm = showMessage(options, appContext != null ? appContext : MessageBox._context);\\n    messageInstance.set(vm, {\\n      options,\\n      callback,\\n      resolve,\\n      reject\\n    });\\n  });\\n}\\nconst MESSAGE_BOX_VARIANTS = [\\\"alert\\\", \\\"confirm\\\", \\\"prompt\\\"];\\nconst MESSAGE_BOX_DEFAULT_OPTS = {\\n  alert: { closeOnPressEscape: false, closeOnClickModal: false },\\n  confirm: { showCancelButton: true },\\n  prompt: { showCancelButton: true, showInput: true }\\n};\\nMESSAGE_BOX_VARIANTS.forEach((boxType) => {\\n  ;\\n  MessageBox[boxType] = messageBoxFactory(boxType);\\n});\\nfunction messageBoxFactory(boxType) {\\n  return (message, title, options, appContext) => {\\n    let titleOrOpts = \\\"\\\";\\n    if (isObject(title)) {\\n      options = title;\\n      titleOrOpts = \\\"\\\";\\n    } else if (isUndefined(title)) {\\n      titleOrOpts = \\\"\\\";\\n    } else {\\n      titleOrOpts = title;\\n    }\\n    return MessageBox(Object.assign({\\n      title: titleOrOpts,\\n      message,\\n      type: \\\"\\\",\\n      ...MESSAGE_BOX_DEFAULT_OPTS[boxType]\\n    }, options, {\\n      boxType\\n    }), appContext);\\n  };\\n}\\nMessageBox.close = () => {\\n  messageInstance.forEach((_, vm) => {\\n    vm.doClose();\\n  });\\n  messageInstance.clear();\\n};\\nMessageBox._context = null;\\n\\nexport { MessageBox as default };\\n//# sourceMappingURL=messageBox.mjs.map\\n\"],\n  \"mappings\": \"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\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709718919258,
      "end": 1709718919258,
      "order": "normal"
    }
  ]
}
