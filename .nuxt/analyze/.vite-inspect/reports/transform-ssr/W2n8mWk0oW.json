{
  "resolvedId": "/Users/sebastianwessel/projekte/voyage/node_modules/element-plus/es/components/infinite-scroll/src/index.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { nextTick } from 'vue';\nimport { isFunction } from '@vue/shared';\nimport { throttle } from 'lodash-unified';\nimport '../../../utils/index.mjs';\nimport { getOffsetTopDistance } from '../../../utils/dom/position.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nimport { getScrollContainer } from '../../../utils/dom/scroll.mjs';\n\nconst SCOPE = \"ElInfiniteScroll\";\nconst CHECK_INTERVAL = 50;\nconst DEFAULT_DELAY = 200;\nconst DEFAULT_DISTANCE = 0;\nconst attributes = {\n  delay: {\n    type: Number,\n    default: DEFAULT_DELAY\n  },\n  distance: {\n    type: Number,\n    default: DEFAULT_DISTANCE\n  },\n  disabled: {\n    type: Boolean,\n    default: false\n  },\n  immediate: {\n    type: Boolean,\n    default: true\n  }\n};\nconst getScrollOptions = (el, instance) => {\n  return Object.entries(attributes).reduce((acm, [name, option]) => {\n    var _a, _b;\n    const { type, default: defaultValue } = option;\n    const attrVal = el.getAttribute(`infinite-scroll-${name}`);\n    let value = (_b = (_a = instance[attrVal]) != null ? _a : attrVal) != null ? _b : defaultValue;\n    value = value === \"false\" ? false : value;\n    value = type(value);\n    acm[name] = Number.isNaN(value) ? defaultValue : value;\n    return acm;\n  }, {});\n};\nconst destroyObserver = (el) => {\n  const { observer } = el[SCOPE];\n  if (observer) {\n    observer.disconnect();\n    delete el[SCOPE].observer;\n  }\n};\nconst handleScroll = (el, cb) => {\n  const { container, containerEl, instance, observer, lastScrollTop } = el[SCOPE];\n  const { disabled, distance } = getScrollOptions(el, instance);\n  const { clientHeight, scrollHeight, scrollTop } = containerEl;\n  const delta = scrollTop - lastScrollTop;\n  el[SCOPE].lastScrollTop = scrollTop;\n  if (observer || disabled || delta < 0)\n    return;\n  let shouldTrigger = false;\n  if (container === el) {\n    shouldTrigger = scrollHeight - (clientHeight + scrollTop) <= distance;\n  } else {\n    const { clientTop, scrollHeight: height } = el;\n    const offsetTop = getOffsetTopDistance(el, containerEl);\n    shouldTrigger = scrollTop + clientHeight >= offsetTop + clientTop + height - distance;\n  }\n  if (shouldTrigger) {\n    cb.call(instance);\n  }\n};\nfunction checkFull(el, cb) {\n  const { containerEl, instance } = el[SCOPE];\n  const { disabled } = getScrollOptions(el, instance);\n  if (disabled || containerEl.clientHeight === 0)\n    return;\n  if (containerEl.scrollHeight <= containerEl.clientHeight) {\n    cb.call(instance);\n  } else {\n    destroyObserver(el);\n  }\n}\nconst InfiniteScroll = {\n  async mounted(el, binding) {\n    const { instance, value: cb } = binding;\n    if (!isFunction(cb)) {\n      throwError(SCOPE, \"'v-infinite-scroll' binding value must be a function\");\n    }\n    await nextTick();\n    const { delay, immediate } = getScrollOptions(el, instance);\n    const container = getScrollContainer(el, true);\n    const containerEl = container === window ? document.documentElement : container;\n    const onScroll = throttle(handleScroll.bind(null, el, cb), delay);\n    if (!container)\n      return;\n    el[SCOPE] = {\n      instance,\n      container,\n      containerEl,\n      delay,\n      cb,\n      onScroll,\n      lastScrollTop: containerEl.scrollTop\n    };\n    if (immediate) {\n      const observer = new MutationObserver(throttle(checkFull.bind(null, el, cb), CHECK_INTERVAL));\n      el[SCOPE].observer = observer;\n      observer.observe(el, { childList: true, subtree: true });\n      checkFull(el, cb);\n    }\n    container.addEventListener(\"scroll\", onScroll);\n  },\n  unmounted(el) {\n    const { container, onScroll } = el[SCOPE];\n    container == null ? void 0 : container.removeEventListener(\"scroll\", onScroll);\n    destroyObserver(el);\n  },\n  async updated(el) {\n    if (!el[SCOPE]) {\n      await nextTick();\n    } else {\n      const { containerEl, cb, observer } = el[SCOPE];\n      if (containerEl.clientHeight && observer) {\n        checkFull(el, cb);\n      }\n    }\n  }\n};\n\nexport { CHECK_INTERVAL, DEFAULT_DELAY, DEFAULT_DISTANCE, SCOPE, InfiniteScroll as default };\n//# sourceMappingURL=index.mjs.map\n",
      "start": 1709718918760,
      "end": 1709718918786,
      "sourcemaps": null
    },
    {
      "name": "unplugin-formkit",
      "start": 1709718918786,
      "end": 1709718918786,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709718918786,
      "end": 1709718918786,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709718918786,
      "end": 1709718918786,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709718918786,
      "end": 1709718918786,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709718918786,
      "end": 1709718918786,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709718918786,
      "end": 1709718918786,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709718918786,
      "end": 1709718918786,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709718918786,
      "end": 1709718918786,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709718918786,
      "end": 1709718918786,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709718918786,
      "end": 1709718918786,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709718918786,
      "end": 1709718918786,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709718918786,
      "end": 1709718918786,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709718918786,
      "end": 1709718918786,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709718918786,
      "end": 1709718918786,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709718918786,
      "end": 1709718918786,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709718918786,
      "end": 1709718918786,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709718918786,
      "end": 1709718918786,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709718918786,
      "end": 1709718918786,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709718918786,
      "end": 1709718918786,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { nextTick } from \"vue\";\nimport { isFunction } from \"@vue/shared\";\nimport { throttle } from \"lodash-unified\";\nimport \"../../../utils/index.mjs\";\nimport { getOffsetTopDistance } from \"../../../utils/dom/position.mjs\";\nimport { throwError } from \"../../../utils/error.mjs\";\nimport { getScrollContainer } from \"../../../utils/dom/scroll.mjs\";\nconst SCOPE = \"ElInfiniteScroll\";\nconst CHECK_INTERVAL = 50;\nconst DEFAULT_DELAY = 200;\nconst DEFAULT_DISTANCE = 0;\nconst attributes = {\n  delay: {\n    type: Number,\n    default: DEFAULT_DELAY\n  },\n  distance: {\n    type: Number,\n    default: DEFAULT_DISTANCE\n  },\n  disabled: {\n    type: Boolean,\n    default: false\n  },\n  immediate: {\n    type: Boolean,\n    default: true\n  }\n};\nconst getScrollOptions = (el, instance) => {\n  return Object.entries(attributes).reduce((acm, [name, option]) => {\n    var _a, _b;\n    const { type, default: defaultValue } = option;\n    const attrVal = el.getAttribute(`infinite-scroll-${name}`);\n    let value = (_b = (_a = instance[attrVal]) != null ? _a : attrVal) != null ? _b : defaultValue;\n    value = value === \"false\" ? false : value;\n    value = type(value);\n    acm[name] = Number.isNaN(value) ? defaultValue : value;\n    return acm;\n  }, {});\n};\nconst destroyObserver = (el) => {\n  const { observer } = el[SCOPE];\n  if (observer) {\n    observer.disconnect();\n    delete el[SCOPE].observer;\n  }\n};\nconst handleScroll = (el, cb) => {\n  const { container, containerEl, instance, observer, lastScrollTop } = el[SCOPE];\n  const { disabled, distance } = getScrollOptions(el, instance);\n  const { clientHeight, scrollHeight, scrollTop } = containerEl;\n  const delta = scrollTop - lastScrollTop;\n  el[SCOPE].lastScrollTop = scrollTop;\n  if (observer || disabled || delta < 0)\n    return;\n  let shouldTrigger = false;\n  if (container === el) {\n    shouldTrigger = scrollHeight - (clientHeight + scrollTop) <= distance;\n  } else {\n    const { clientTop, scrollHeight: height } = el;\n    const offsetTop = getOffsetTopDistance(el, containerEl);\n    shouldTrigger = scrollTop + clientHeight >= offsetTop + clientTop + height - distance;\n  }\n  if (shouldTrigger) {\n    cb.call(instance);\n  }\n};\nfunction checkFull(el, cb) {\n  const { containerEl, instance } = el[SCOPE];\n  const { disabled } = getScrollOptions(el, instance);\n  if (disabled || containerEl.clientHeight === 0)\n    return;\n  if (containerEl.scrollHeight <= containerEl.clientHeight) {\n    cb.call(instance);\n  } else {\n    destroyObserver(el);\n  }\n}\nconst InfiniteScroll = {\n  async mounted(el, binding) {\n    const { instance, value: cb } = binding;\n    if (!isFunction(cb)) {\n      throwError(SCOPE, \"'v-infinite-scroll' binding value must be a function\");\n    }\n    await nextTick();\n    const { delay, immediate } = getScrollOptions(el, instance);\n    const container = getScrollContainer(el, true);\n    const containerEl = container === void 0 ? (void 0).documentElement : container;\n    const onScroll = throttle(handleScroll.bind(null, el, cb), delay);\n    if (!container)\n      return;\n    el[SCOPE] = {\n      instance,\n      container,\n      containerEl,\n      delay,\n      cb,\n      onScroll,\n      lastScrollTop: containerEl.scrollTop\n    };\n    if (immediate) {\n      const observer = new MutationObserver(throttle(checkFull.bind(null, el, cb), CHECK_INTERVAL));\n      el[SCOPE].observer = observer;\n      observer.observe(el, { childList: true, subtree: true });\n      checkFull(el, cb);\n    }\n    container.addEventListener(\"scroll\", onScroll);\n  },\n  unmounted(el) {\n    const { container, onScroll } = el[SCOPE];\n    container == null ? void 0 : container.removeEventListener(\"scroll\", onScroll);\n    destroyObserver(el);\n  },\n  async updated(el) {\n    if (!el[SCOPE]) {\n      await nextTick();\n    } else {\n      const { containerEl, cb, observer } = el[SCOPE];\n      if (containerEl.clientHeight && observer) {\n        checkFull(el, cb);\n      }\n    }\n  }\n};\nexport { CHECK_INTERVAL, DEFAULT_DELAY, DEFAULT_DISTANCE, SCOPE, InfiniteScroll as default };\n",
      "start": 1709718918786,
      "end": 1709718919148,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/sebastianwessel/projekte/voyage/node_modules/element-plus/es/components/infinite-scroll/src/index.mjs\"],\n  \"sourcesContent\": [\"import { nextTick } from 'vue';\\nimport { isFunction } from '@vue/shared';\\nimport { throttle } from 'lodash-unified';\\nimport '../../../utils/index.mjs';\\nimport { getOffsetTopDistance } from '../../../utils/dom/position.mjs';\\nimport { throwError } from '../../../utils/error.mjs';\\nimport { getScrollContainer } from '../../../utils/dom/scroll.mjs';\\n\\nconst SCOPE = \\\"ElInfiniteScroll\\\";\\nconst CHECK_INTERVAL = 50;\\nconst DEFAULT_DELAY = 200;\\nconst DEFAULT_DISTANCE = 0;\\nconst attributes = {\\n  delay: {\\n    type: Number,\\n    default: DEFAULT_DELAY\\n  },\\n  distance: {\\n    type: Number,\\n    default: DEFAULT_DISTANCE\\n  },\\n  disabled: {\\n    type: Boolean,\\n    default: false\\n  },\\n  immediate: {\\n    type: Boolean,\\n    default: true\\n  }\\n};\\nconst getScrollOptions = (el, instance) => {\\n  return Object.entries(attributes).reduce((acm, [name, option]) => {\\n    var _a, _b;\\n    const { type, default: defaultValue } = option;\\n    const attrVal = el.getAttribute(`infinite-scroll-${name}`);\\n    let value = (_b = (_a = instance[attrVal]) != null ? _a : attrVal) != null ? _b : defaultValue;\\n    value = value === \\\"false\\\" ? false : value;\\n    value = type(value);\\n    acm[name] = Number.isNaN(value) ? defaultValue : value;\\n    return acm;\\n  }, {});\\n};\\nconst destroyObserver = (el) => {\\n  const { observer } = el[SCOPE];\\n  if (observer) {\\n    observer.disconnect();\\n    delete el[SCOPE].observer;\\n  }\\n};\\nconst handleScroll = (el, cb) => {\\n  const { container, containerEl, instance, observer, lastScrollTop } = el[SCOPE];\\n  const { disabled, distance } = getScrollOptions(el, instance);\\n  const { clientHeight, scrollHeight, scrollTop } = containerEl;\\n  const delta = scrollTop - lastScrollTop;\\n  el[SCOPE].lastScrollTop = scrollTop;\\n  if (observer || disabled || delta < 0)\\n    return;\\n  let shouldTrigger = false;\\n  if (container === el) {\\n    shouldTrigger = scrollHeight - (clientHeight + scrollTop) <= distance;\\n  } else {\\n    const { clientTop, scrollHeight: height } = el;\\n    const offsetTop = getOffsetTopDistance(el, containerEl);\\n    shouldTrigger = scrollTop + clientHeight >= offsetTop + clientTop + height - distance;\\n  }\\n  if (shouldTrigger) {\\n    cb.call(instance);\\n  }\\n};\\nfunction checkFull(el, cb) {\\n  const { containerEl, instance } = el[SCOPE];\\n  const { disabled } = getScrollOptions(el, instance);\\n  if (disabled || containerEl.clientHeight === 0)\\n    return;\\n  if (containerEl.scrollHeight <= containerEl.clientHeight) {\\n    cb.call(instance);\\n  } else {\\n    destroyObserver(el);\\n  }\\n}\\nconst InfiniteScroll = {\\n  async mounted(el, binding) {\\n    const { instance, value: cb } = binding;\\n    if (!isFunction(cb)) {\\n      throwError(SCOPE, \\\"'v-infinite-scroll' binding value must be a function\\\");\\n    }\\n    await nextTick();\\n    const { delay, immediate } = getScrollOptions(el, instance);\\n    const container = getScrollContainer(el, true);\\n    const containerEl = container === window ? document.documentElement : container;\\n    const onScroll = throttle(handleScroll.bind(null, el, cb), delay);\\n    if (!container)\\n      return;\\n    el[SCOPE] = {\\n      instance,\\n      container,\\n      containerEl,\\n      delay,\\n      cb,\\n      onScroll,\\n      lastScrollTop: containerEl.scrollTop\\n    };\\n    if (immediate) {\\n      const observer = new MutationObserver(throttle(checkFull.bind(null, el, cb), CHECK_INTERVAL));\\n      el[SCOPE].observer = observer;\\n      observer.observe(el, { childList: true, subtree: true });\\n      checkFull(el, cb);\\n    }\\n    container.addEventListener(\\\"scroll\\\", onScroll);\\n  },\\n  unmounted(el) {\\n    const { container, onScroll } = el[SCOPE];\\n    container == null ? void 0 : container.removeEventListener(\\\"scroll\\\", onScroll);\\n    destroyObserver(el);\\n  },\\n  async updated(el) {\\n    if (!el[SCOPE]) {\\n      await nextTick();\\n    } else {\\n      const { containerEl, cb, observer } = el[SCOPE];\\n      if (containerEl.clientHeight && observer) {\\n        checkFull(el, cb);\\n      }\\n    }\\n  }\\n};\\n\\nexport { CHECK_INTERVAL, DEFAULT_DELAY, DEFAULT_DISTANCE, SCOPE, InfiniteScroll as default };\\n//# sourceMappingURL=index.mjs.map\\n\"],\n  \"mappings\": \"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\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1709718919148,
      "end": 1709718919148,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709718919148,
      "end": 1709718919148,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709718919148,
      "end": 1709718919148,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709718919148,
      "end": 1709718919148,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709718919148,
      "end": 1709718919148,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709718919148,
      "end": 1709718919148,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709718919148,
      "end": 1709718919148,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709718919148,
      "end": 1709718919148,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709718919148,
      "end": 1709718919148,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709718919148,
      "end": 1709718919148,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709718919148,
      "end": 1709718919148,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709718919148,
      "end": 1709718919148,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709718919148,
      "end": 1709718919148,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709718919148,
      "end": 1709718919148,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709718919148,
      "end": 1709718919148,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1709718919148,
      "end": 1709718919148,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1709718919148,
      "end": 1709718919148,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709718919148,
      "end": 1709718919148,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709718919148,
      "end": 1709718919148,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709718919148,
      "end": 1709718919148,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709718919148,
      "end": 1709718919148,
      "order": "normal"
    }
  ]
}
