{
  "resolvedId": "/Users/sebastianwessel/projekte/voyage/node_modules/element-plus/es/components/form/src/form-label-wrap.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineComponent, inject, ref, nextTick, onMounted, onBeforeUnmount, onUpdated, watch, computed, createVNode, Fragment } from 'vue';\nimport { useResizeObserver } from '@vueuse/core';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { formContextKey, formItemContextKey } from './constants.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nconst COMPONENT_NAME = \"ElLabelWrap\";\nvar FormLabelWrap = defineComponent({\n  name: COMPONENT_NAME,\n  props: {\n    isAutoWidth: Boolean,\n    updateAll: Boolean\n  },\n  setup(props, {\n    slots\n  }) {\n    const formContext = inject(formContextKey, void 0);\n    const formItemContext = inject(formItemContextKey);\n    if (!formItemContext)\n      throwError(COMPONENT_NAME, \"usage: <el-form-item><label-wrap /></el-form-item>\");\n    const ns = useNamespace(\"form\");\n    const el = ref();\n    const computedWidth = ref(0);\n    const getLabelWidth = () => {\n      var _a;\n      if ((_a = el.value) == null ? void 0 : _a.firstElementChild) {\n        const width = window.getComputedStyle(el.value.firstElementChild).width;\n        return Math.ceil(Number.parseFloat(width));\n      } else {\n        return 0;\n      }\n    };\n    const updateLabelWidth = (action = \"update\") => {\n      nextTick(() => {\n        if (slots.default && props.isAutoWidth) {\n          if (action === \"update\") {\n            computedWidth.value = getLabelWidth();\n          } else if (action === \"remove\") {\n            formContext == null ? void 0 : formContext.deregisterLabelWidth(computedWidth.value);\n          }\n        }\n      });\n    };\n    const updateLabelWidthFn = () => updateLabelWidth(\"update\");\n    onMounted(() => {\n      updateLabelWidthFn();\n    });\n    onBeforeUnmount(() => {\n      updateLabelWidth(\"remove\");\n    });\n    onUpdated(() => updateLabelWidthFn());\n    watch(computedWidth, (val, oldVal) => {\n      if (props.updateAll) {\n        formContext == null ? void 0 : formContext.registerLabelWidth(val, oldVal);\n      }\n    });\n    useResizeObserver(computed(() => {\n      var _a, _b;\n      return (_b = (_a = el.value) == null ? void 0 : _a.firstElementChild) != null ? _b : null;\n    }), updateLabelWidthFn);\n    return () => {\n      var _a, _b;\n      if (!slots)\n        return null;\n      const {\n        isAutoWidth\n      } = props;\n      if (isAutoWidth) {\n        const autoLabelWidth = formContext == null ? void 0 : formContext.autoLabelWidth;\n        const hasLabel = formItemContext == null ? void 0 : formItemContext.hasLabel;\n        const style = {};\n        if (hasLabel && autoLabelWidth && autoLabelWidth !== \"auto\") {\n          const marginWidth = Math.max(0, Number.parseInt(autoLabelWidth, 10) - computedWidth.value);\n          const marginPosition = formContext.labelPosition === \"left\" ? \"marginRight\" : \"marginLeft\";\n          if (marginWidth) {\n            style[marginPosition] = `${marginWidth}px`;\n          }\n        }\n        return createVNode(\"div\", {\n          \"ref\": el,\n          \"class\": [ns.be(\"item\", \"label-wrap\")],\n          \"style\": style\n        }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);\n      } else {\n        return createVNode(Fragment, {\n          \"ref\": el\n        }, [(_b = slots.default) == null ? void 0 : _b.call(slots)]);\n      }\n    };\n  }\n});\n\nexport { FormLabelWrap as default };\n//# sourceMappingURL=form-label-wrap.mjs.map\n",
      "start": 1709718918836,
      "end": 1709718918856,
      "sourcemaps": null
    },
    {
      "name": "unplugin-formkit",
      "start": 1709718918856,
      "end": 1709718918856,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709718918856,
      "end": 1709718918856,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709718918856,
      "end": 1709718918856,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709718918856,
      "end": 1709718918856,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709718918856,
      "end": 1709718918856,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709718918856,
      "end": 1709718918856,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709718918856,
      "end": 1709718918856,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709718918856,
      "end": 1709718918856,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709718918856,
      "end": 1709718918856,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709718918856,
      "end": 1709718918856,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709718918856,
      "end": 1709718918856,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709718918856,
      "end": 1709718918856,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709718918856,
      "end": 1709718918856,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709718918856,
      "end": 1709718918856,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709718918856,
      "end": 1709718918856,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709718918856,
      "end": 1709718918856,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709718918856,
      "end": 1709718918856,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709718918856,
      "end": 1709718918856,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709718918856,
      "end": 1709718918856,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { defineComponent, inject, ref, nextTick, onMounted, onBeforeUnmount, onUpdated, watch, computed, createVNode, Fragment } from \"vue\";\nimport { useResizeObserver } from \"@vueuse/core\";\nimport \"../../../utils/index.mjs\";\nimport \"../../../hooks/index.mjs\";\nimport { formContextKey, formItemContextKey } from \"./constants.mjs\";\nimport { throwError } from \"../../../utils/error.mjs\";\nimport { useNamespace } from \"../../../hooks/use-namespace/index.mjs\";\nconst COMPONENT_NAME = \"ElLabelWrap\";\nvar FormLabelWrap = defineComponent({\n  name: COMPONENT_NAME,\n  props: {\n    isAutoWidth: Boolean,\n    updateAll: Boolean\n  },\n  setup(props, {\n    slots\n  }) {\n    const formContext = inject(formContextKey, void 0);\n    const formItemContext = inject(formItemContextKey);\n    if (!formItemContext)\n      throwError(COMPONENT_NAME, \"usage: <el-form-item><label-wrap /></el-form-item>\");\n    const ns = useNamespace(\"form\");\n    const el = ref();\n    const computedWidth = ref(0);\n    const getLabelWidth = () => {\n      var _a;\n      if ((_a = el.value) == null ? void 0 : _a.firstElementChild) {\n        const width = (void 0).getComputedStyle(el.value.firstElementChild).width;\n        return Math.ceil(Number.parseFloat(width));\n      } else {\n        return 0;\n      }\n    };\n    const updateLabelWidth = (action = \"update\") => {\n      nextTick(() => {\n        if (slots.default && props.isAutoWidth) {\n          if (action === \"update\") {\n            computedWidth.value = getLabelWidth();\n          } else if (action === \"remove\") {\n            formContext == null ? void 0 : formContext.deregisterLabelWidth(computedWidth.value);\n          }\n        }\n      });\n    };\n    const updateLabelWidthFn = () => updateLabelWidth(\"update\");\n    onMounted(() => {\n      updateLabelWidthFn();\n    });\n    onBeforeUnmount(() => {\n      updateLabelWidth(\"remove\");\n    });\n    onUpdated(() => updateLabelWidthFn());\n    watch(computedWidth, (val, oldVal) => {\n      if (props.updateAll) {\n        formContext == null ? void 0 : formContext.registerLabelWidth(val, oldVal);\n      }\n    });\n    useResizeObserver(computed(() => {\n      var _a, _b;\n      return (_b = (_a = el.value) == null ? void 0 : _a.firstElementChild) != null ? _b : null;\n    }), updateLabelWidthFn);\n    return () => {\n      var _a, _b;\n      if (!slots)\n        return null;\n      const {\n        isAutoWidth\n      } = props;\n      if (isAutoWidth) {\n        const autoLabelWidth = formContext == null ? void 0 : formContext.autoLabelWidth;\n        const hasLabel = formItemContext == null ? void 0 : formItemContext.hasLabel;\n        const style = {};\n        if (hasLabel && autoLabelWidth && autoLabelWidth !== \"auto\") {\n          const marginWidth = Math.max(0, Number.parseInt(autoLabelWidth, 10) - computedWidth.value);\n          const marginPosition = formContext.labelPosition === \"left\" ? \"marginRight\" : \"marginLeft\";\n          if (marginWidth) {\n            style[marginPosition] = `${marginWidth}px`;\n          }\n        }\n        return createVNode(\"div\", {\n          \"ref\": el,\n          \"class\": [ns.be(\"item\", \"label-wrap\")],\n          \"style\": style\n        }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);\n      } else {\n        return createVNode(Fragment, {\n          \"ref\": el\n        }, [(_b = slots.default) == null ? void 0 : _b.call(slots)]);\n      }\n    };\n  }\n});\nexport { FormLabelWrap as default };\n",
      "start": 1709718918856,
      "end": 1709718919302,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/sebastianwessel/projekte/voyage/node_modules/element-plus/es/components/form/src/form-label-wrap.mjs\"],\n  \"sourcesContent\": [\"import { defineComponent, inject, ref, nextTick, onMounted, onBeforeUnmount, onUpdated, watch, computed, createVNode, Fragment } from 'vue';\\nimport { useResizeObserver } from '@vueuse/core';\\nimport '../../../utils/index.mjs';\\nimport '../../../hooks/index.mjs';\\nimport { formContextKey, formItemContextKey } from './constants.mjs';\\nimport { throwError } from '../../../utils/error.mjs';\\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\\n\\nconst COMPONENT_NAME = \\\"ElLabelWrap\\\";\\nvar FormLabelWrap = defineComponent({\\n  name: COMPONENT_NAME,\\n  props: {\\n    isAutoWidth: Boolean,\\n    updateAll: Boolean\\n  },\\n  setup(props, {\\n    slots\\n  }) {\\n    const formContext = inject(formContextKey, void 0);\\n    const formItemContext = inject(formItemContextKey);\\n    if (!formItemContext)\\n      throwError(COMPONENT_NAME, \\\"usage: <el-form-item><label-wrap /></el-form-item>\\\");\\n    const ns = useNamespace(\\\"form\\\");\\n    const el = ref();\\n    const computedWidth = ref(0);\\n    const getLabelWidth = () => {\\n      var _a;\\n      if ((_a = el.value) == null ? void 0 : _a.firstElementChild) {\\n        const width = window.getComputedStyle(el.value.firstElementChild).width;\\n        return Math.ceil(Number.parseFloat(width));\\n      } else {\\n        return 0;\\n      }\\n    };\\n    const updateLabelWidth = (action = \\\"update\\\") => {\\n      nextTick(() => {\\n        if (slots.default && props.isAutoWidth) {\\n          if (action === \\\"update\\\") {\\n            computedWidth.value = getLabelWidth();\\n          } else if (action === \\\"remove\\\") {\\n            formContext == null ? void 0 : formContext.deregisterLabelWidth(computedWidth.value);\\n          }\\n        }\\n      });\\n    };\\n    const updateLabelWidthFn = () => updateLabelWidth(\\\"update\\\");\\n    onMounted(() => {\\n      updateLabelWidthFn();\\n    });\\n    onBeforeUnmount(() => {\\n      updateLabelWidth(\\\"remove\\\");\\n    });\\n    onUpdated(() => updateLabelWidthFn());\\n    watch(computedWidth, (val, oldVal) => {\\n      if (props.updateAll) {\\n        formContext == null ? void 0 : formContext.registerLabelWidth(val, oldVal);\\n      }\\n    });\\n    useResizeObserver(computed(() => {\\n      var _a, _b;\\n      return (_b = (_a = el.value) == null ? void 0 : _a.firstElementChild) != null ? _b : null;\\n    }), updateLabelWidthFn);\\n    return () => {\\n      var _a, _b;\\n      if (!slots)\\n        return null;\\n      const {\\n        isAutoWidth\\n      } = props;\\n      if (isAutoWidth) {\\n        const autoLabelWidth = formContext == null ? void 0 : formContext.autoLabelWidth;\\n        const hasLabel = formItemContext == null ? void 0 : formItemContext.hasLabel;\\n        const style = {};\\n        if (hasLabel && autoLabelWidth && autoLabelWidth !== \\\"auto\\\") {\\n          const marginWidth = Math.max(0, Number.parseInt(autoLabelWidth, 10) - computedWidth.value);\\n          const marginPosition = formContext.labelPosition === \\\"left\\\" ? \\\"marginRight\\\" : \\\"marginLeft\\\";\\n          if (marginWidth) {\\n            style[marginPosition] = `${marginWidth}px`;\\n          }\\n        }\\n        return createVNode(\\\"div\\\", {\\n          \\\"ref\\\": el,\\n          \\\"class\\\": [ns.be(\\\"item\\\", \\\"label-wrap\\\")],\\n          \\\"style\\\": style\\n        }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);\\n      } else {\\n        return createVNode(Fragment, {\\n          \\\"ref\\\": el\\n        }, [(_b = slots.default) == null ? void 0 : _b.call(slots)]);\\n      }\\n    };\\n  }\\n});\\n\\nexport { FormLabelWrap as default };\\n//# sourceMappingURL=form-label-wrap.mjs.map\\n\"],\n  \"mappings\": \"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\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1709718919302,
      "end": 1709718919302,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709718919302,
      "end": 1709718919302,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709718919302,
      "end": 1709718919302,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709718919302,
      "end": 1709718919302,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709718919302,
      "end": 1709718919302,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709718919302,
      "end": 1709718919302,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709718919302,
      "end": 1709718919302,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709718919302,
      "end": 1709718919302,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709718919302,
      "end": 1709718919302,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709718919302,
      "end": 1709718919302,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709718919302,
      "end": 1709718919302,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709718919302,
      "end": 1709718919302,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709718919302,
      "end": 1709718919302,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709718919302,
      "end": 1709718919302,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709718919302,
      "end": 1709718919302,
      "order": "post"
    },
    {
      "name": "element-plus:transform",
      "start": 1709718919302,
      "end": 1709718919302,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1709718919302,
      "end": 1709718919302,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709718919302,
      "end": 1709718919302,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "result": "import { defineComponent, inject, ref, nextTick, onMounted, onBeforeUnmount, onUpdated, watch, computed, createVNode, Fragment } from \"vue\";\nimport { useResizeObserver } from \"@vueuse/core\";\nimport \"../../../utils/index.mjs\";\nimport \"../../../hooks/index.mjs\";\nimport { formContextKey, formItemContextKey } from \"./constants.mjs\";\nimport { throwError } from \"../../../utils/error.mjs\";\nimport { useNamespace } from \"../../../hooks/use-namespace/index.mjs\";\nconst COMPONENT_NAME = \"ElLabelWrap\";\nvar FormLabelWrap = defineComponent({\n  name: COMPONENT_NAME,\n  props: {\n    isAutoWidth: Boolean,\n    updateAll: Boolean\n  },\n  setup(props, {\n    slots\n  }) {\n    const formContext = inject(formContextKey, void 0);\n    const formItemContext = inject(formItemContextKey);\n    if (!formItemContext)\n      throwError(COMPONENT_NAME, \"usage: <el-form-item><label-wrap /></el-form-item>\");\n    const ns = useNamespace(\"form\");\n    const el = ref();\n    const computedWidth = ref(0);\n    const getLabelWidth = () => {\n      var _a;\n      if ((_a = el.value) == null ? void 0 : _a.firstElementChild) {\n        const width = (void 0).getComputedStyle(el.value.firstElementChild).width;\n        return Math.ceil(Number.parseFloat(width));\n      } else {\n        return 0;\n      }\n    };\n    const updateLabelWidth = (action = \"update\") => {\n      nextTick(() => {\n        if (slots.default && props.isAutoWidth) {\n          if (action === \"update\") {\n            computedWidth.value = getLabelWidth();\n          } else if (action === \"remove\") {\n            formContext == null ? void 0 : formContext.deregisterLabelWidth(computedWidth.value);\n          }\n        }\n      });\n    };\n    const updateLabelWidthFn = () => updateLabelWidth(\"update\");\n     false && /*@__PURE__*/ onMounted(() => {\n      updateLabelWidthFn();\n    });\n     false && /*@__PURE__*/ onBeforeUnmount(() => {\n      updateLabelWidth(\"remove\");\n    });\n    onUpdated(() => updateLabelWidthFn());\n    watch(computedWidth, (val, oldVal) => {\n      if (props.updateAll) {\n        formContext == null ? void 0 : formContext.registerLabelWidth(val, oldVal);\n      }\n    });\n    useResizeObserver(computed(() => {\n      var _a, _b;\n      return (_b = (_a = el.value) == null ? void 0 : _a.firstElementChild) != null ? _b : null;\n    }), updateLabelWidthFn);\n    return () => {\n      var _a, _b;\n      if (!slots)\n        return null;\n      const {\n        isAutoWidth\n      } = props;\n      if (isAutoWidth) {\n        const autoLabelWidth = formContext == null ? void 0 : formContext.autoLabelWidth;\n        const hasLabel = formItemContext == null ? void 0 : formItemContext.hasLabel;\n        const style = {};\n        if (hasLabel && autoLabelWidth && autoLabelWidth !== \"auto\") {\n          const marginWidth = Math.max(0, Number.parseInt(autoLabelWidth, 10) - computedWidth.value);\n          const marginPosition = formContext.labelPosition === \"left\" ? \"marginRight\" : \"marginLeft\";\n          if (marginWidth) {\n            style[marginPosition] = `${marginWidth}px`;\n          }\n        }\n        return createVNode(\"div\", {\n          \"ref\": el,\n          \"class\": [ns.be(\"item\", \"label-wrap\")],\n          \"style\": style\n        }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);\n      } else {\n        return createVNode(Fragment, {\n          \"ref\": el\n        }, [(_b = slots.default) == null ? void 0 : _b.call(slots)]);\n      }\n    };\n  }\n});\nexport { FormLabelWrap as default };\n",
      "start": 1709718919302,
      "end": 1709718919302,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappingsjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACljhE,qCAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,2CAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjnF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtrrG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709718919302,
      "end": 1709718919302,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709718919302,
      "end": 1709718919302,
      "order": "normal"
    }
  ]
}
